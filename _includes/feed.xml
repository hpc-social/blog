<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-US"><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="https://hpc.social/personal-blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hpc.social/personal-blog/" rel="alternate" type="text/html" hreflang="en-US" /><updated>2025-04-06T21:22:55-06:00</updated><id>https://hpc.social/personal-blog/feed.xml</id><title type="html">hpc.social - Aggregated Personal Blog</title><subtitle>Shared personal experiences and stories</subtitle><author><name>hpc.social</name><email>info@hpc.social</email></author><entry><title type="html">Surfing the Singularity- Adventures in Quantum Chemistry</title><link href="https://hpc.social/personal-blog/2025/surfing-the-singularity-adventures-in-quantum-chemistry/" rel="alternate" type="text/html" title="Surfing the Singularity- Adventures in Quantum Chemistry" /><published>2025-03-11T13:11:00-06:00</published><updated>2025-03-11T13:11:00-06:00</updated><id>https://hpc.social/personal-blog/2025/surfing-the-singularity-adventures-in-quantum-chemistry</id><content type="html" xml:base="https://hpc.social/personal-blog/2025/surfing-the-singularity-adventures-in-quantum-chemistry/"><![CDATA[<div class="separator" style="clear: both; text-align: center;"><br /></div>
<p><br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;
<br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;<br />&lt;/div&gt;</p>
<p>In this installment of the Surfing the Singularity blog we go vlog, giving an overview of quantum computing today with application to chemistry. Quantum computing is rapidly advancing, with improvements in machine size, error correction, and scalability. And yet, there's always a desire to drive towards advancements and scientific applications which are just out of reach of today's technologies. New algorithms lead the way.&nbsp;</p>
<p>In this video, will give a brief overview of quantum computing, what it means, where we are on the product roadmaps, and explore an emergent algorithm for pushing the boundaries of chemical modeling beyond what is possible with today's classical machines. Enjoy.&nbsp;</p>
<p>- andy&nbsp;</p>
<p><br /></p>
<p>P.S. Begging your forgiveness for being a YouTube newb...&nbsp;</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><br /></div>
<p><br />&lt;p&gt;&lt;/p&gt;</p>]]></content><author><name>Surfing the Singularity</name></author><category term="surfthesing" /><summary type="html"><![CDATA[&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt; &lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt; In this installment of the Surfing the Singularity blog we go vlog, giving an overview of quantum computing today with application to chemistry. Quantum computing is rapidly advancing, with improvements in machine size, error correction, and scalability. And yet, there's always a desire to drive towards advancements and scientific applications which are just out of reach of today's technologies. New algorithms lead the way.&nbsp; In this video, will give a brief overview of quantum computing, what it means, where we are on the product roadmaps, and explore an emergent algorithm for pushing the boundaries of chemical modeling beyond what is possible with today's classical machines. Enjoy.&nbsp; - andy&nbsp; P.S. Begging your forgiveness for being a YouTube newb...&nbsp; &lt;p&gt;&lt;/p&gt;]]></summary></entry><entry><title type="html">LLM training without a parallel file system</title><link href="https://hpc.social/personal-blog/2025/llm-training-without-a-parallel-file-system/" rel="alternate" type="text/html" title="LLM training without a parallel file system" /><published>2025-02-02T03:59:00-07:00</published><updated>2025-02-02T03:59:00-07:00</updated><id>https://hpc.social/personal-blog/2025/llm-training-without-a-parallel-file-system</id><content type="html" xml:base="https://hpc.social/personal-blog/2025/llm-training-without-a-parallel-file-system/"><![CDATA[<p>The illustrious Jeff Denworth recently posted a hot take across social media, claiming that training large language models (LLMs) doesn't require massive, expensive parallel file systems:</p>
<p>
</p>
<p><br /></p>
<p>As someone who's been working on <a href="https://glennklockwood.com/garden/systems/Eagle">one of the largest supercomputers on the planet</a>--one that has no parallel file system at all--I was surprised by how many incredulous or curious responses followed. I guess supercomputers and parallel file systems are like peas and carrots in so many people's minds that the idea of being able to run a massive parallel compute job without a massive parallel file system is so unintuitive that it is unbelievable.</p>
<p>I've given talks about how LLM training uses storage in the past, but I realized I've never written it down. So, for the benefit of humankind, let's talk about how these supercomputers without parallel file systems work.<span></span></p>
<p></p>
<div class="separator" style="clear: both; display: none; text-align: center;"></div>
<h2 style="text-align: left;">The workload</h2>
<p>Though the actual model training on giant GPU supercomputers gets all the attention, the full process of training an LLM is a little more involved. A colleague of mine at Microsoft gave <a href="https://www.sniadeveloper.org/events/agenda/session/670">a great overview of this storage-centric, end-to-end picture at SNIA SDC24</a>; broadly, training an LLM involves the following steps:</p>
<p></p>
<ol style="text-align: left;"><li><b>Data ingestion</b>: This is where crawlers scrape the Internet and pull down raw html, images, videos, and other media. These raw data are indexed and shoved into a data warehouse. At scale, this can be hundreds or thousands of petabytes of data for <a href="https://glennklockwood.com/garden/frontier-model">frontier models</a>.</li><li><b>Data preparation</b>: This is where the raw data is converted into tokenized data. It amounts to a huge data analytics problem that uses well-documented text and image processing pipelines that filter, deduplicate, and otherwise clean the raw garbage on the Internet using frameworks like Apache Spark. The hundreds of petabytes of input get reduced down by 10x-1000x.</li><li><b>Model training</b>: This is where the tokenized data is shoveled through the LLM on giant GPU clusters in little batches. As the data is processed, the model weights are updated, and those weights are checkpointed to storage. If a compute node crashes and the job fails, that checkpoint is used to restart, just like a traditional scientific HPC application. There might be fine-tuning and the like happening as part of this too, but I won't talk about that.</li><li><b>Model deployment and inferencing</b>: This is where the final model is copied across giant fields of inferencing servers, and a web service sits in front of it all to transform REST API requests into actual inferencing queries that run on the GPUs. This isn't training, but we'll talk about it anyway.</li></ol>
<p style="text-align: left;">To understand why a parallel file system offers no particular benefit to any of these steps, let's take a closer look at what's going on in each one.</p>
<h3 style="text-align: left;">Data ingestion</h3>
<p style="text-align: left;">Data ingestion is a widely distributed process that involves minimal computation; you just need a lot of Internet-facing network connectivity and CPU cores to drive independent processes connecting to other people's public HTTP servers. I don't know a lot about what this process looks like, because it never relies on anything resembling a supercomputer.</p>
<p style="text-align: left;">To the best of my knowledge, data ingestion just pulls HTML, images, or video streams from the Internet and packs them into <i>data containers</i>. As it is packing webpages into these files, it is building a separate <i>index</i> that stores metadata about the webpage (URL, encoding, date of access) and its location (the file in which the webpage's contents are stored and the byte offset within that file). Thousands of VMs might be performing these tasks completely independently, and because they do not need to synchronize with each other at any step, it can be better to distribute these scrapers around the world rather than centralize all of them in a single datacenter.</p>
<p style="text-align: left;">While oneÂ <i>could</i> store each scraped HTML page in a file that's organized in a parallel file system, accessing those files would be very slow--a full crawl of all the data would require scanning hundreds of billions of little files. So instead of implementing <i>data containers</i> using files and the <i>index</i> using a file system directory tree, it's better to implement data containers on top of object stores and use a distributed key-value store for the index. The fact that scraped data is write-once (and therefore doesn't need features like file locking or read-modify-write), is a natural fit for object stores' design around object immutability.</p>
<h3 style="text-align: left;">Data preparation</h3>
<p style="text-align: left;">Once raw data is indexed and saved in object stores, the first phase of computation comes into play. I've documented this data processing pipeline on my <a href="https://glennklockwood.com/garden/LLM-training-datasets#computational-requirements">LLM training datasets page</a>, but a lot of it amounts to running Apache Spark-like pipelines that chew through all the raw data in a trivially parallel way.</p>
<p style="text-align: left;">These data processing pipelines are very well defined from the days when Hadoop was all the rage, and their data access patterns map well to the strengths of object stores. Each processing task might read a couple hundred megabytes of data from an object all at once, process it in-memory, then dump it back out to objects all at once. File systems offer no benefit here, because each task reads once and writes once rather than skipping around inside individual objects.</p>
<p style="text-align: left;">There is a significant compute workload here, and there are points in the data processing pipeline where global synchronization of all tasks is required. Specifically, the process of deduplicating input data--which is <a href="https://arxiv.org/abs/2107.06499">a critical step to getting a high-quality model these days</a>--requires comparing every piece of data to every other piece of data. As a result, this data preparation phase is often done in a centralized location that is adjacent the object store containing all the raw data scraped from the previous step. The clusters used for data processing can resemble traditional CPU-based supercomputers (think a system like <a href="https://tacc.utexas.edu/systems/frontera/">TACC's Frontera</a>), and in some cases, they might even have full RDMA fabrics to accelerate the all-to-all deduplication step.</p>
<p style="text-align: left;">Critically, this data processing step is not done on the GPU nodes that actually train the model. Data processing is usually limited by I/O bandwidth to storage, and you never want your GPUs stalling out because they're waiting for data. Parallel file system vendors might tell you that the only way to avoid this GPU starvation issue is to plug every GPU node into a super-fast parallel file system, but the reality is that people just do this I/O-heavy step on completely separate supercomputers before training on GPUs ever begins.</p>
<p style="text-align: left;">CPU nodes are significantly cheaper than GPUs, so buying cheap object storage and a cheap CPU cluster is more cost-effective than buying an expensive file system and wasting your GPU nodes on trivially parallel text processing tasks. To illustrate this, consider some normalized list prices from Azure:</p>
<p style="text-align: left;"></p>
<ul style="text-align: left;"><li>$1.00 gets you a 96-core general-purpose VM with 384 GB of RAM</li><li>$1.65 gets you a 176-core HPC-optimized VM with NDR InfiniBand and 768 GB of RAM</li><li>$22.55 gets you a 96-core, 8x H100 GPU VM with NDR InfiniBand</li></ul>
<div>Given that GPUs don't give you a 13x-22x speedup for data processing despite the 13x-22x the price, it makes no sense to perform this data processing on GPU nodes inline with training.</div>
<p></p>
<p style="text-align: left;">One could argue that the GPUs are sitting idle while the data processing cluster is working anyway, but rest assured that AI model shops have no shortage of work to keep their GPUs busy. Data processing for the next model on a CPU cluster often happens at the same time the current model is being trained on the GPU cluster. In cases where there isn't enough work to keep both CPU and GPU clusters busy around the clock, also remember that most of this stuff happens in the cloud, and cloud providers can sell those idle CPU or GPU cycles to another customer in between training campaigns.</p>
<h3 style="text-align: left;">Model training</h3>
<p style="text-align: left;">Huge, distributed training jobs are where most people would think a fast parallel file system is required for both reading input data and writing out checkpoints. After all, the need for fast checkpointing and restart were the primary driver behind the creation of parallel file systems.</p>
<p style="text-align: left;">While parallel file systems certainly <i>can</i> be used for training, they are not the most cost-effective or scalable way to train across tens of thousands of GPUs. To better illustrate the reasons why this is, let's consider the processes of reading inputs and writing checkpoints separately.</p>
<h4 style="text-align: left;">Reading training data</h4>
<p style="text-align: left;">Training a model on GPUs, whether it be on one or a thousand nodes, follows a simple cycle (this is a "step" in LLM training parlance) that's repeated over and over:</p>
<p style="text-align: left;"></p>
<ol style="text-align: left;"><li>A batch of tokenized data is loaded into GPU memory</li><li>That data is then processed through the neural network and the model weights are adjusted</li><li>All GPUs synchronize their updated weights</li></ol>
<p style="text-align: left;">It's tempting to imagine the I/O load generated by step #1 as being the same as it would be for a traditional HPC job: data is read from a parallel file system into compute memory at the start of every single step:</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p style="text-align: left;">In years past, storage vendors would've insisted that this repeated, random re-reading of input data at every step requires a super-fast parallel file system to keep up. However, two factors make that untrue:</p>
<p style="text-align: left;"></p>
<ol style="text-align: left;"><li>The input data isn't millions of little text or image files. As described in the data ingest and data processing steps, these small files are packaged into large objects before the GPUs ever see them.</li><li>Tokenized data is very dense compared to raw input, so the amount of bytes being read over the course of hundreds or thousands of steps is actually quite small.</li></ol>
<p></p>
<p style="text-align: left;">To quantify #2, consider the <a href="https://arxiv.org/abs/2407.21783">Llama-3 405b model</a>, which was trained on a significant fraction of the public Internet--15.6 <i>trillion</i> tokens. That sounds like a lot of information until you realize thatÂ <a href="https://glennklockwood.com/garden/LLM-training-datasets#tokenized-data">the size of a typical token is between 3 and 5 bytes</a> depending on the tokenizer and encoding. This means that the entire 405-billion parameter Llama-3 model, which was trained using 16,000 GPUs, only had to load 60 TB of tokens from storage. That divides out to 3.75 GB of tokens processed by each GPU over the entire course of a 54-day run.</p>
<p style="text-align: left;">When you consider how few bytes are required to train an LLM, it should become clear that the biggest I/O challenge in the performance-critical training loop isn't raw bandwidth; it's performance variability. As such, the best way to ensure that GPUs do not stall out due to read requests is to eliminate as much I/O performance variability as possible. To do this, you have to minimize the sources of contention that might arise between the storage devices and the network that connects them to the GPUs. While you <i>can</i> do this using sophisticated quality-of-service in both the storage servers and interconnect, there is an easier way.</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p style="text-align: left;">Just stick some local SSDs in every GPU node.</p>
<p style="text-align: left;">This ensures that no contention will occur when loading data from storage into the GPU, because the only network between them is the PCIe on the node. In addition, using node-local NVMe allows storage capacity and storage performance to scale linearly with GPU performance. By comparison, a remote storage system (whether it be parallel file or object) won't get any bigger or faster as you add more GPUs to the training job, resulting in each GPU losing efficiency due to I/O as more GPUs are added to the training job.</p>
<p style="text-align: left;">In practice, model training uses local SSDs like this:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p style="text-align: left;">At the start of a training job, data is read from remote storage into the local SSDs in a distributed fashion <i>once</i>. Because the tokenized data is so small, many replicas of the entire dataset can be stored across the job's GPU nodes as well; for example, if you were to train Llama-3 405b on NVIDIA DGX H100 nodes, <b>you could fit the entire training dataset (all 60 TB of it) on just three nodes</b> since each node comes with 30 TB of local SSD. Given that the model was trained on 16,000 GPUs (2,000 nodes), that translates to storing hundreds of replicas of the entire training set. This has a few major benefits:</p>
<p style="text-align: left;"></p>
<ol style="text-align: left;"><li>GPUs never have to wait for shared storage to return data before they can compute. Everything they need is on the local SSDs.</li><li>When a GPU node fails, its input data can be recovered from a surviving GPU node over the backend InfiniBand. After training starts, input data never has to be read from shared storage again.</li><li>It's common to scale up training over time by adding more GPUs (more data-parallel domains) to the job as it stabilizes. When this happens, I/O performance scales linearly because these new GPUs never have to fight over shared storage.</li></ol>
<p></p>
<p style="text-align: left;">A reasonable critique of this approach is that data management becomes more complicated; either the training framework has to keep track of which SSDs and nodes have copies of which input data, or a distributed, client-side shared namespace like <a href="https://www.weka.io/resources/solution-brief/weka-data-platform-converged-mode/">WEKA Converged Mode</a> or <a href="https://docs.coreweave.com/docs/products/storage/object-storage/concepts/lota">CoreWeave LOTA</a>Â has to sit between your application and your data. In practice though, frontier models are trained for exactly one epoch; that is, <a href="https://glennklockwood.com/garden/scaling-laws#applying-scaling-laws">every input token is processed exactly one time to achieve optimal model quality</a>. Because no two GPUs will ever need to read the same input token, there's never a need to copy input tokens between nodes inside the training loop.Â </p>
<p style="text-align: left;">I also acknowledge that the above description is greatly simplified; the entire node-local SSD capacity cannot be filled with input data, as space is also needed for checkpoints and other temporaryÂ data. However, the fact remains that super high-bandwidth or super high-capacity parallel file systems are not necessary for loading input tokens during training. AI training clusters are built with a ton of local SSDs to do the heavy lifting, and the input data for LLMs is small enough to fit in just a handful of GPU nodes.</p>
<h4 style="text-align: left;">Writing model checkpoints</h4>
<p style="text-align: left;">Though the read workload of LLM training is modest at best, the write workload can be quite intense at scale because the probability of failure increases superlinearly with the size of the training job. However, unlike with scientific HPC jobs, <b>the checkpoint size does not scale as a function of the job size</b>; the checkpoint for a 405 billion-parameter model trained on 16,000 nodes is the same size as the checkpoint for that model trained on three nodes. This is a result of the fact that every training step is followed by a global synchronization which makes each data-parallel copy of the model identical. Only one copy of those model weights, which amounts to under a hundred terabytes for state-of-the-art LLMs, needs to be saved:</p>
<div class="separator" style="clear: both; text-align: center;"><span style="text-align: left;">Â </span></div>
<p style="text-align: left;">Kartik and Colleen Tartow at VAST wrote <a href="https://www.vastdata.com/blog/a-checkpoint-on-checkpoints-in-llms">a quantitative breakdown of the true I/O requirements of checkpointing</a>, and they illustrate how even a trillion-parameter model can achieve 99.7% forward progress (only 0.3% time spent checkpointing) when training across 3,072 GPUs with a modest 273 GB/s file system. A parallel file system is not required to get that level of performance; for example, HDD-basedÂ <a href="https://x.com/glennklockwood/status/1795548752628867132">Azure Blob achieved over 1 TB/s when benchmarked with IOR</a>Â for writes at scale.</p>
<p style="text-align: left;">As with reading input tokens though, the real goal for checkpointing at scale is to remove any dependence on shared storage from the training loop entirely. And again, the best way to do this is to simply checkpoint to node-local storage. However, special care must be taken to ensure that the checkpoints don't get lost when a node crashes.</p>
<p style="text-align: left;">In practice, LLM training is now done with asynchronous, multilevel checkpointing. This technique provides the scalability of checkpointing to node-local storage and the durability of shared storage:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p style="text-align: left;">The key to this checkpointing process is hierarchical data synchronization:</p>
<p style="text-align: left;"></p>
<ol style="text-align: left;"><li><b>Model weights are first copied from GPU memory into the node's CPU memory</b> after every training step. This checkpoint is governed by the CPU-GPU bandwidth (either PCIe or NVLink/Infinity Fabric), and a 500 GB checkpoint can complete in a second. The benefit of checkpointing to DRAM is that the GPU can unblock and begin computing the next step very quickly. However, this checkpoint in DRAM is not protected and will be lost if the node crashes.</li><li>To protect against node crashes, the <b>checkpoint is then asynchronously copied from CPU DRAM to a neighbor node's local SSD</b> using RDMA. Now if a node crashes, it can restore from a checkpoint that is stored on its neighboring node's SSD via InfiniBand. Reading and writing a 500 GB checkpoint to neighboring SSDs might take ten seconds, so this asynchronous replication might be done for every tenth DRAM checkpoint.</li><li>To store many checkpoints long-term, <b>checkpoints are also asynchronously copied from node-local SSD to shared storage</b>. This might take a minute or two per 500 GB checkpoint, so this last-level checkpoint copy might be done once every ten minutes.</li></ol>
<p style="text-align: left;">This hierarchical checkpointing scheme allows the GPUs to spend only a second checkpointing while being able to recover from job, node, and even cluster-level failures by tailoring the checkpoint tiering frequencies to the performance of each storage tier being used. The cost of recovering from a catastrophic failure might be re-computing up to ten minutes worth of training, but given the rarity of such events, this scheme balances the performance (and risks) of checkpointing to DRAM against hard drive prices (and suffering their performance) for a durable object store.</p>
<p style="text-align: left;">To this latter point, the requirements of the shared storage system at the bottom of this checkpointing hierarchy are very modest:</p>
<p style="text-align: left;"></p>
<ul style="text-align: left;"><li>The checkpoint only needs to complete in the time between successive last-level checkpoint copies. If the 500 GB checkpoint is drained to shared storage only once every ten minutes, our shared storage only needs to deliver 1 GB/s of total bandwidth.</li><li>The write pattern from node-local NVMe to shared storage is arbitrary, because it is a simple copy operation of a fully formed checkpoint file. Unlike direct-to-storage checkpoints, there are no weirdly shaped tensors being serialized into a file on the fly; rather, opaque bits are streaming from a local checkpoint file into a remote object using whatever transfer size and parallelism gives the highest write bandwidth.</li></ul>
<p>This combination of modest write bandwidth and simple, sequential, large-block writes is ideally suited for object stores. This isn't to say a parallel file system cannot work here, but this checkpointing scheme does not benefit from directory structure, fine-grained consistency semantics, or any of the other complexities that drive up the cost of parallel file systems.</p>
<p>The catch, of course, is that checkpointing using these schemes can be complicated to implement. Fortunately, a <a href="https://www.linkedin.com/posts/jeffreydenworth_reducing-model-checkpointing-times-by-over-activity-7289273345269800960-zBj7">growing number of training frameworks</a> support both writing and restoring checkpoints using asynchronous and hierarchical approaches. Model developers never have to worry about interacting with specific files or objects; instead, the framework manages data locality during checkpoint and restart underneath a high-level API.</p>
<h3 style="text-align: left;">Model deployment and inferencing</h3>
<p style="text-align: left;">Once a model is trained, putting it into production as an inferencing service is the final step of its lifecycle. From a storage and I/O standpoint, this is a lot more complicated than training because it marries an enterprise service delivery model (failover, load balancing, authentication, and scaling) with copies of a trained model running across HPC infrastructure. When you hear vendors talking about key-value stores, vector databases, and RAG, that is all happening at this stage.</p>
<p style="text-align: left;">Setting aside everything but the storage attached to the GPU cluster though, the I/O requirements of inferencing are relatively straightforward:</p>
<p style="text-align: left;"></p>
<ol style="text-align: left;"><li>When provisioning a GPU node for inferencing, model weights must be loaded from shared storage as fast as possible.</li><li>When using an LLM to search documents, a vector database is required to perform the similarity search that augments the LLM query with the relevant documents. This is the basis for RAG.</li><li>Key-value caches are often used to reduce the latency for different parts of the inferencing pipeline by storing context including the conversation or frequently accessed contextual documents.</li><li>As the inferencing demand evolves, different models and weights may be swapped in and out of individual GPU servers.</li></ol>
<p style="text-align: left;">A parallel file system is not particularly useful for any of these; the only place in which their high bandwidth would be a benefit is in loading and re-loading model weights (#1 and #4). But as with hierarchical checkpointing, those I/O operations are whole-object, read-only copies that are a natural fit for object APIs. Complex directory structures and strong consistency simply aren't necessary here.</p>
<h2 style="text-align: left;">Objects are good enough, maybe better</h2>
<p style="text-align: left;">None of the steps in this model training lifecycle uniquely benefit from the capabilities that parallel file systems offer:</p>
<p style="text-align: left;"></p>
<ul style="text-align: left;"><li>Data ingestion involves hundreds of petabytes of small documents, but they are immediately packaged and indexed into large data containers. Their metadata is stored in a separate key-value store, so the directory hierarchy of a file system isn't used, and once data has been packaged and indexed, it's never modified in-place. The bandwidth requirements are modest as well since web crawling is the rate-limiting step.</li><li>Data processing is an I/O-intensive data analytics workload. Read bandwidth is critical here, but data is accessed in large transactions and most of the computation is embarrassingly parallel. This workload runs on standalone analytics clusters, so even though the read bandwidth here is rate-limiting, slower storage is not going to impact GPU utilization on training clusters in any way. This step also reduces data by 100x or more, so the write requirements are also modest.</li><li>Training requires both loading input tokens and checkpointing model weights. However, both of these workloads lean on node-local NVMe in every node to eliminate slowdowns due to noisy neighbors. Input data is staged to node-local storage only once at the beginning of a training campaign, and checkpoints are asynchronously bled out to shared storage without impacting GPU utilization.</li><li>Inferencing involves infrequent, read-only, bulk loading of model weights into GPU nodes. While key-value caches and vector databases are also used in inferencing, parallel file systems offer no particular benefit for them.</li></ul>
<p style="text-align: left;">The I/O patterns of each of these steps map nicely to object storage since they are predominantly write-once and whole-file transactions. Parallel file systems certainly can be used, and workloads will benefit from the high bandwidth they offer. However, they come with the cost of features that aren't necessary--either literal costs (in the case of appliances or proprietary software) or figurative costs (allocating people to manage the complexities of debugging a parallel file system).</p>
<p style="text-align: left;">The importance of this latter point is hard to appreciate if you've never used a supercomputer without a parallel file systems. However, I recently sat in on the validation of <a href="https://www.top500.org/system/180349/">a brand-new H200 training cluster</a> where various InfiniBand congestion and routing issues were being worked out. It wasn't until someone said "eviction" in some nontechnical context that I realized that the sporadic file system evictions during fabric instability were simply a non-issue. There was no cleanup of mount points after major fabric events because there was no persistent, fragile client-server state being maintained. I/Os between GPU nodes or nodes and storage might have failed during a rough patch, but they recovered and resumed on their own as soon as the fabric came back. Similarly, identity didn't matter, and all tests could be run as root because there was no implicit trust between the client kernel and remote storage. Removing the dependence between compute nodes, LDAP, and healthy file system mounts completely eliminates many of the challenges of standing up new clusters quickly.</p>
<h3 style="text-align: left;">An ideal AI training cluster architecture</h3>
<p style="text-align: left;">The workloads I described above form a rough outline for an AI training infrastructure which has:</p>
<p style="text-align: left;"></p>
<ol style="text-align: left;"><li><b>A bunch of GPU nodes with a strong RDMA backend like InfiniBand</b>. Each node should have at least enough node-local SSD to store a substantial amount of the input tokens to be used for training, enough space for hierarchical checkpointing, and enough I/O bandwidth to these SSDs to support draining checkpoints from partner nodes' DRAM in just a few seconds. A separate frontend network that connects to storage is also a good idea; it ensures that asynchronous checkpoint draining won't interfere with weight synchronization in the training loop.</li><li><b>A separate CPU cluster for data processing pipelines</b>. A strong backend network will benefit the deduplication step (which is critical to producing high-quality training datasets), but more emphasis should be placed on optimizing large-transaction reads from storage. Given that CPU nodes are so much cheaper than GPU nodes, separating the data processing nodes from training nodes allows you cut more corners when optimizing this CPU cluster. Keeping data processing out-of-band of actual model training means your most data-intensive step (data processing) is decoupled from your most expensive step (training).</li><li><b>A scalable object store that supports basic write-once semantics with modest I/O bandwidth at scale</b>. This matches the needs of the workloads with the price-performance of the storage system and simplifies the recovery process if the interconnect between compute and storage gets congested. It can also serve the data needs of all stages of the training pipeline: hundreds of petabytes of raw training data, hundreds of terabytes of input tokens, and tens of terabytes of model weights all have similar performance needs and can be stored on the same infrastructure with the appropriate QOS settings.</li><li><b>A pool of general-purpose compute infrastructure for hosting the raw training data indices</b>. This can also be used to support vector databases, raw context documents for RAG, and any other ancillary services required for production inferencing.</li></ol>
<p style="text-align: left;">By eschewing a high-performance parallel file system and localizing I/O performance to inside the GPU cluster with node-local NVMe, a vanilla network between the GPU cluster and the other subsystems is sufficient. Although less high-performance, these non-critical bits (ideally) have lower complexity, maintenance, and supportability as well, allowing (again, ideally) more resources to be sloshed towards supporting the high-value GPU infrastructure.</p>
<p style="text-align: left;">Incidentally, this architecture happens to be how most of the largest AI training clusters on which I work are designed.</p>
<h3 style="text-align: left;">But parallel files aren't all bad</h3>
<p style="text-align: left;">Of course, having no parallel file system presents some usability challenges if users are expecting to be able to SSH into a login node and have a complete user environment ready. The user experience for the above infrastructure works best for those who are comfortable developing software in containers and launching pods rather than developing software in vim and submitting Slurm jobs. <i>I do not advocate for throwing out parallel file systems if they're already ingrained in users' workflows!</i></p>
<p style="text-align: left;">In addition, the latest crop of modern, distributed file systems all now support multi-protocol data access. For example, <a href="https://docs.weka.io/4.0/additional-protocols/s3">WEKA</a>, <a href="https://support.vastdata.com/s/article/UUID-67c215f7-63a8-5d58-196e-5066199a6f60">VAST</a>, andÂ <a href="https://docs.qumulo.com/administrator-guide/s3-api/configuring-using-s3-api.html">Qumulo</a>, all support S3 (object) interfaces as first-class citizens. Users who want the traditional HPC experience can play with their data using a file mount as they always have, while those who are coming in from the cloud-native side have equal access to those same data as objects. Supporting multiprotocol access to data in AI environments doesn't reduce the need to overbuild infrastructure or support stateful file mounts across all compute nodes, but it does provide an onramp for users to get comfortable moving away from the traditional HPC user experience.</p>
<p style="text-align: left;">Finally, a few of the leading-edge parallel-file-system-turned-AI-storage platforms are also shipping features that make them valuable for the deployment and inferencing part of the lifecycle. For example, WEKA has their <a href="https://www.weka.io/resources/reference-architecture/warrp-weka-ai-rag-reference-platform/">WARRP reference architecture for RAG</a>, and <a href="https://www.vastdata.com/press-releases/vast-data-unveils-vast-insightengine-with-nvidia">VAST has its InsightEngine</a>--both use the unique architectures underneath their file interfaces to accelerate vector queries far beyond what you would get from running a vector database on, say, Lustre. These so-called "AI data platforms," despite starting as parallel file systems, are spreading their relevance out to the entire LLM lifecycle, filling needs for file, object, and structured data with a single storage system.</p>
<p style="text-align: left;">This is all to say that parallel file systems aren't bad, and they aren't going anywhere. But they aren't required to train frontier models either, and as I've tried to describe above, some of the largest supercomputers on the planet are designed not to require them.</p>
<p></p>
<p></p>
<p></p>
<p></p>]]></content><author><name>Glenn K. Lockwood&apos;s Blog</name></author><category term="glennklockwood" /><summary type="html"><![CDATA[The illustrious Jeff Denworth recently posted a hot take across social media, claiming that training large language models (LLMs) doesn't require massive, expensive parallel file systems: As someone who's been working on one of the largest supercomputers on the planet--one that has no parallel file system at all--I was surprised by how many incredulous or curious responses followed. I guess supercomputers and parallel file systems are like peas and carrots in so many people's minds that the idea of being able to run a massive parallel compute job without a massive parallel file system is so unintuitive that it is unbelievable. I've given talks about how LLM training uses storage in the past, but I realized I've never written it down. So, for the benefit of humankind, let's talk about how these supercomputers without parallel file systems work. The workload Though the actual model training on giant GPU supercomputers gets all the attention, the full process of training an LLM is a little more involved. A colleague of mine at Microsoft gave a great overview of this storage-centric, end-to-end picture at SNIA SDC24; broadly, training an LLM involves the following steps: Data ingestion: This is where crawlers scrape the Internet and pull down raw html, images, videos, and other media. These raw data are indexed and shoved into a data warehouse. At scale, this can be hundreds or thousands of petabytes of data for frontier models.Data preparation: This is where the raw data is converted into tokenized data. It amounts to a huge data analytics problem that uses well-documented text and image processing pipelines that filter, deduplicate, and otherwise clean the raw garbage on the Internet using frameworks like Apache Spark. The hundreds of petabytes of input get reduced down by 10x-1000x.Model training: This is where the tokenized data is shoveled through the LLM on giant GPU clusters in little batches. As the data is processed, the model weights are updated, and those weights are checkpointed to storage. If a compute node crashes and the job fails, that checkpoint is used to restart, just like a traditional scientific HPC application. There might be fine-tuning and the like happening as part of this too, but I won't talk about that.Model deployment and inferencing: This is where the final model is copied across giant fields of inferencing servers, and a web service sits in front of it all to transform REST API requests into actual inferencing queries that run on the GPUs. This isn't training, but we'll talk about it anyway. To understand why a parallel file system offers no particular benefit to any of these steps, let's take a closer look at what's going on in each one. Data ingestion Data ingestion is a widely distributed process that involves minimal computation; you just need a lot of Internet-facing network connectivity and CPU cores to drive independent processes connecting to other people's public HTTP servers. I don't know a lot about what this process looks like, because it never relies on anything resembling a supercomputer. To the best of my knowledge, data ingestion just pulls HTML, images, or video streams from the Internet and packs them into data containers. As it is packing webpages into these files, it is building a separate index that stores metadata about the webpage (URL, encoding, date of access) and its location (the file in which the webpage's contents are stored and the byte offset within that file). Thousands of VMs might be performing these tasks completely independently, and because they do not need to synchronize with each other at any step, it can be better to distribute these scrapers around the world rather than centralize all of them in a single datacenter. While oneÂ could store each scraped HTML page in a file that's organized in a parallel file system, accessing those files would be very slow--a full crawl of all the data would require scanning hundreds of billions of little files. So instead of implementing data containers using files and the index using a file system directory tree, it's better to implement data containers on top of object stores and use a distributed key-value store for the index. The fact that scraped data is write-once (and therefore doesn't need features like file locking or read-modify-write), is a natural fit for object stores' design around object immutability. Data preparation Once raw data is indexed and saved in object stores, the first phase of computation comes into play. I've documented this data processing pipeline on my LLM training datasets page, but a lot of it amounts to running Apache Spark-like pipelines that chew through all the raw data in a trivially parallel way. These data processing pipelines are very well defined from the days when Hadoop was all the rage, and their data access patterns map well to the strengths of object stores. Each processing task might read a couple hundred megabytes of data from an object all at once, process it in-memory, then dump it back out to objects all at once. File systems offer no benefit here, because each task reads once and writes once rather than skipping around inside individual objects. There is a significant compute workload here, and there are points in the data processing pipeline where global synchronization of all tasks is required. Specifically, the process of deduplicating input data--which is a critical step to getting a high-quality model these days--requires comparing every piece of data to every other piece of data. As a result, this data preparation phase is often done in a centralized location that is adjacent the object store containing all the raw data scraped from the previous step. The clusters used for data processing can resemble traditional CPU-based supercomputers (think a system like TACC's Frontera), and in some cases, they might even have full RDMA fabrics to accelerate the all-to-all deduplication step. Critically, this data processing step is not done on the GPU nodes that actually train the model. Data processing is usually limited by I/O bandwidth to storage, and you never want your GPUs stalling out because they're waiting for data. Parallel file system vendors might tell you that the only way to avoid this GPU starvation issue is to plug every GPU node into a super-fast parallel file system, but the reality is that people just do this I/O-heavy step on completely separate supercomputers before training on GPUs ever begins. CPU nodes are significantly cheaper than GPUs, so buying cheap object storage and a cheap CPU cluster is more cost-effective than buying an expensive file system and wasting your GPU nodes on trivially parallel text processing tasks. To illustrate this, consider some normalized list prices from Azure: $1.00 gets you a 96-core general-purpose VM with 384 GB of RAM$1.65 gets you a 176-core HPC-optimized VM with NDR InfiniBand and 768 GB of RAM$22.55 gets you a 96-core, 8x H100 GPU VM with NDR InfiniBand Given that GPUs don't give you a 13x-22x speedup for data processing despite the 13x-22x the price, it makes no sense to perform this data processing on GPU nodes inline with training. One could argue that the GPUs are sitting idle while the data processing cluster is working anyway, but rest assured that AI model shops have no shortage of work to keep their GPUs busy. Data processing for the next model on a CPU cluster often happens at the same time the current model is being trained on the GPU cluster. In cases where there isn't enough work to keep both CPU and GPU clusters busy around the clock, also remember that most of this stuff happens in the cloud, and cloud providers can sell those idle CPU or GPU cycles to another customer in between training campaigns. Model training Huge, distributed training jobs are where most people would think a fast parallel file system is required for both reading input data and writing out checkpoints. After all, the need for fast checkpointing and restart were the primary driver behind the creation of parallel file systems. While parallel file systems certainly can be used for training, they are not the most cost-effective or scalable way to train across tens of thousands of GPUs. To better illustrate the reasons why this is, let's consider the processes of reading inputs and writing checkpoints separately. Reading training data Training a model on GPUs, whether it be on one or a thousand nodes, follows a simple cycle (this is a "step" in LLM training parlance) that's repeated over and over: A batch of tokenized data is loaded into GPU memoryThat data is then processed through the neural network and the model weights are adjustedAll GPUs synchronize their updated weights It's tempting to imagine the I/O load generated by step #1 as being the same as it would be for a traditional HPC job: data is read from a parallel file system into compute memory at the start of every single step: In years past, storage vendors would've insisted that this repeated, random re-reading of input data at every step requires a super-fast parallel file system to keep up. However, two factors make that untrue: The input data isn't millions of little text or image files. As described in the data ingest and data processing steps, these small files are packaged into large objects before the GPUs ever see them.Tokenized data is very dense compared to raw input, so the amount of bytes being read over the course of hundreds or thousands of steps is actually quite small. To quantify #2, consider the Llama-3 405b model, which was trained on a significant fraction of the public Internet--15.6 trillion tokens. That sounds like a lot of information until you realize thatÂ the size of a typical token is between 3 and 5 bytes depending on the tokenizer and encoding. This means that the entire 405-billion parameter Llama-3 model, which was trained using 16,000 GPUs, only had to load 60 TB of tokens from storage. That divides out to 3.75 GB of tokens processed by each GPU over the entire course of a 54-day run. When you consider how few bytes are required to train an LLM, it should become clear that the biggest I/O challenge in the performance-critical training loop isn't raw bandwidth; it's performance variability. As such, the best way to ensure that GPUs do not stall out due to read requests is to eliminate as much I/O performance variability as possible. To do this, you have to minimize the sources of contention that might arise between the storage devices and the network that connects them to the GPUs. While you can do this using sophisticated quality-of-service in both the storage servers and interconnect, there is an easier way. Just stick some local SSDs in every GPU node. This ensures that no contention will occur when loading data from storage into the GPU, because the only network between them is the PCIe on the node. In addition, using node-local NVMe allows storage capacity and storage performance to scale linearly with GPU performance. By comparison, a remote storage system (whether it be parallel file or object) won't get any bigger or faster as you add more GPUs to the training job, resulting in each GPU losing efficiency due to I/O as more GPUs are added to the training job. In practice, model training uses local SSDs like this: At the start of a training job, data is read from remote storage into the local SSDs in a distributed fashion once. Because the tokenized data is so small, many replicas of the entire dataset can be stored across the job's GPU nodes as well; for example, if you were to train Llama-3 405b on NVIDIA DGX H100 nodes, you could fit the entire training dataset (all 60 TB of it) on just three nodes since each node comes with 30 TB of local SSD. Given that the model was trained on 16,000 GPUs (2,000 nodes), that translates to storing hundreds of replicas of the entire training set. This has a few major benefits: GPUs never have to wait for shared storage to return data before they can compute. Everything they need is on the local SSDs.When a GPU node fails, its input data can be recovered from a surviving GPU node over the backend InfiniBand. After training starts, input data never has to be read from shared storage again.It's common to scale up training over time by adding more GPUs (more data-parallel domains) to the job as it stabilizes. When this happens, I/O performance scales linearly because these new GPUs never have to fight over shared storage. A reasonable critique of this approach is that data management becomes more complicated; either the training framework has to keep track of which SSDs and nodes have copies of which input data, or a distributed, client-side shared namespace like WEKA Converged Mode or CoreWeave LOTAÂ has to sit between your application and your data. In practice though, frontier models are trained for exactly one epoch; that is, every input token is processed exactly one time to achieve optimal model quality. Because no two GPUs will ever need to read the same input token, there's never a need to copy input tokens between nodes inside the training loop.Â  I also acknowledge that the above description is greatly simplified; the entire node-local SSD capacity cannot be filled with input data, as space is also needed for checkpoints and other temporaryÂ data. However, the fact remains that super high-bandwidth or super high-capacity parallel file systems are not necessary for loading input tokens during training. AI training clusters are built with a ton of local SSDs to do the heavy lifting, and the input data for LLMs is small enough to fit in just a handful of GPU nodes. Writing model checkpoints Though the read workload of LLM training is modest at best, the write workload can be quite intense at scale because the probability of failure increases superlinearly with the size of the training job. However, unlike with scientific HPC jobs, the checkpoint size does not scale as a function of the job size; the checkpoint for a 405 billion-parameter model trained on 16,000 nodes is the same size as the checkpoint for that model trained on three nodes. This is a result of the fact that every training step is followed by a global synchronization which makes each data-parallel copy of the model identical. Only one copy of those model weights, which amounts to under a hundred terabytes for state-of-the-art LLMs, needs to be saved: Â  Kartik and Colleen Tartow at VAST wrote a quantitative breakdown of the true I/O requirements of checkpointing, and they illustrate how even a trillion-parameter model can achieve 99.7% forward progress (only 0.3% time spent checkpointing) when training across 3,072 GPUs with a modest 273 GB/s file system. A parallel file system is not required to get that level of performance; for example, HDD-basedÂ Azure Blob achieved over 1 TB/s when benchmarked with IORÂ for writes at scale. As with reading input tokens though, the real goal for checkpointing at scale is to remove any dependence on shared storage from the training loop entirely. And again, the best way to do this is to simply checkpoint to node-local storage. However, special care must be taken to ensure that the checkpoints don't get lost when a node crashes. In practice, LLM training is now done with asynchronous, multilevel checkpointing. This technique provides the scalability of checkpointing to node-local storage and the durability of shared storage: The key to this checkpointing process is hierarchical data synchronization: Model weights are first copied from GPU memory into the node's CPU memory after every training step. This checkpoint is governed by the CPU-GPU bandwidth (either PCIe or NVLink/Infinity Fabric), and a 500 GB checkpoint can complete in a second. The benefit of checkpointing to DRAM is that the GPU can unblock and begin computing the next step very quickly. However, this checkpoint in DRAM is not protected and will be lost if the node crashes.To protect against node crashes, the checkpoint is then asynchronously copied from CPU DRAM to a neighbor node's local SSD using RDMA. Now if a node crashes, it can restore from a checkpoint that is stored on its neighboring node's SSD via InfiniBand. Reading and writing a 500 GB checkpoint to neighboring SSDs might take ten seconds, so this asynchronous replication might be done for every tenth DRAM checkpoint.To store many checkpoints long-term, checkpoints are also asynchronously copied from node-local SSD to shared storage. This might take a minute or two per 500 GB checkpoint, so this last-level checkpoint copy might be done once every ten minutes. This hierarchical checkpointing scheme allows the GPUs to spend only a second checkpointing while being able to recover from job, node, and even cluster-level failures by tailoring the checkpoint tiering frequencies to the performance of each storage tier being used. The cost of recovering from a catastrophic failure might be re-computing up to ten minutes worth of training, but given the rarity of such events, this scheme balances the performance (and risks) of checkpointing to DRAM against hard drive prices (and suffering their performance) for a durable object store. To this latter point, the requirements of the shared storage system at the bottom of this checkpointing hierarchy are very modest: The checkpoint only needs to complete in the time between successive last-level checkpoint copies. If the 500 GB checkpoint is drained to shared storage only once every ten minutes, our shared storage only needs to deliver 1 GB/s of total bandwidth.The write pattern from node-local NVMe to shared storage is arbitrary, because it is a simple copy operation of a fully formed checkpoint file. Unlike direct-to-storage checkpoints, there are no weirdly shaped tensors being serialized into a file on the fly; rather, opaque bits are streaming from a local checkpoint file into a remote object using whatever transfer size and parallelism gives the highest write bandwidth. This combination of modest write bandwidth and simple, sequential, large-block writes is ideally suited for object stores. This isn't to say a parallel file system cannot work here, but this checkpointing scheme does not benefit from directory structure, fine-grained consistency semantics, or any of the other complexities that drive up the cost of parallel file systems. The catch, of course, is that checkpointing using these schemes can be complicated to implement. Fortunately, a growing number of training frameworks support both writing and restoring checkpoints using asynchronous and hierarchical approaches. Model developers never have to worry about interacting with specific files or objects; instead, the framework manages data locality during checkpoint and restart underneath a high-level API. Model deployment and inferencing Once a model is trained, putting it into production as an inferencing service is the final step of its lifecycle. From a storage and I/O standpoint, this is a lot more complicated than training because it marries an enterprise service delivery model (failover, load balancing, authentication, and scaling) with copies of a trained model running across HPC infrastructure. When you hear vendors talking about key-value stores, vector databases, and RAG, that is all happening at this stage. Setting aside everything but the storage attached to the GPU cluster though, the I/O requirements of inferencing are relatively straightforward: When provisioning a GPU node for inferencing, model weights must be loaded from shared storage as fast as possible.When using an LLM to search documents, a vector database is required to perform the similarity search that augments the LLM query with the relevant documents. This is the basis for RAG.Key-value caches are often used to reduce the latency for different parts of the inferencing pipeline by storing context including the conversation or frequently accessed contextual documents.As the inferencing demand evolves, different models and weights may be swapped in and out of individual GPU servers. A parallel file system is not particularly useful for any of these; the only place in which their high bandwidth would be a benefit is in loading and re-loading model weights (#1 and #4). But as with hierarchical checkpointing, those I/O operations are whole-object, read-only copies that are a natural fit for object APIs. Complex directory structures and strong consistency simply aren't necessary here. Objects are good enough, maybe better None of the steps in this model training lifecycle uniquely benefit from the capabilities that parallel file systems offer: Data ingestion involves hundreds of petabytes of small documents, but they are immediately packaged and indexed into large data containers. Their metadata is stored in a separate key-value store, so the directory hierarchy of a file system isn't used, and once data has been packaged and indexed, it's never modified in-place. The bandwidth requirements are modest as well since web crawling is the rate-limiting step.Data processing is an I/O-intensive data analytics workload. Read bandwidth is critical here, but data is accessed in large transactions and most of the computation is embarrassingly parallel. This workload runs on standalone analytics clusters, so even though the read bandwidth here is rate-limiting, slower storage is not going to impact GPU utilization on training clusters in any way. This step also reduces data by 100x or more, so the write requirements are also modest.Training requires both loading input tokens and checkpointing model weights. However, both of these workloads lean on node-local NVMe in every node to eliminate slowdowns due to noisy neighbors. Input data is staged to node-local storage only once at the beginning of a training campaign, and checkpoints are asynchronously bled out to shared storage without impacting GPU utilization.Inferencing involves infrequent, read-only, bulk loading of model weights into GPU nodes. While key-value caches and vector databases are also used in inferencing, parallel file systems offer no particular benefit for them. The I/O patterns of each of these steps map nicely to object storage since they are predominantly write-once and whole-file transactions. Parallel file systems certainly can be used, and workloads will benefit from the high bandwidth they offer. However, they come with the cost of features that aren't necessary--either literal costs (in the case of appliances or proprietary software) or figurative costs (allocating people to manage the complexities of debugging a parallel file system). The importance of this latter point is hard to appreciate if you've never used a supercomputer without a parallel file systems. However, I recently sat in on the validation of a brand-new H200 training cluster where various InfiniBand congestion and routing issues were being worked out. It wasn't until someone said "eviction" in some nontechnical context that I realized that the sporadic file system evictions during fabric instability were simply a non-issue. There was no cleanup of mount points after major fabric events because there was no persistent, fragile client-server state being maintained. I/Os between GPU nodes or nodes and storage might have failed during a rough patch, but they recovered and resumed on their own as soon as the fabric came back. Similarly, identity didn't matter, and all tests could be run as root because there was no implicit trust between the client kernel and remote storage. Removing the dependence between compute nodes, LDAP, and healthy file system mounts completely eliminates many of the challenges of standing up new clusters quickly. An ideal AI training cluster architecture The workloads I described above form a rough outline for an AI training infrastructure which has: A bunch of GPU nodes with a strong RDMA backend like InfiniBand. Each node should have at least enough node-local SSD to store a substantial amount of the input tokens to be used for training, enough space for hierarchical checkpointing, and enough I/O bandwidth to these SSDs to support draining checkpoints from partner nodes' DRAM in just a few seconds. A separate frontend network that connects to storage is also a good idea; it ensures that asynchronous checkpoint draining won't interfere with weight synchronization in the training loop.A separate CPU cluster for data processing pipelines. A strong backend network will benefit the deduplication step (which is critical to producing high-quality training datasets), but more emphasis should be placed on optimizing large-transaction reads from storage. Given that CPU nodes are so much cheaper than GPU nodes, separating the data processing nodes from training nodes allows you cut more corners when optimizing this CPU cluster. Keeping data processing out-of-band of actual model training means your most data-intensive step (data processing) is decoupled from your most expensive step (training).A scalable object store that supports basic write-once semantics with modest I/O bandwidth at scale. This matches the needs of the workloads with the price-performance of the storage system and simplifies the recovery process if the interconnect between compute and storage gets congested. It can also serve the data needs of all stages of the training pipeline: hundreds of petabytes of raw training data, hundreds of terabytes of input tokens, and tens of terabytes of model weights all have similar performance needs and can be stored on the same infrastructure with the appropriate QOS settings.A pool of general-purpose compute infrastructure for hosting the raw training data indices. This can also be used to support vector databases, raw context documents for RAG, and any other ancillary services required for production inferencing. By eschewing a high-performance parallel file system and localizing I/O performance to inside the GPU cluster with node-local NVMe, a vanilla network between the GPU cluster and the other subsystems is sufficient. Although less high-performance, these non-critical bits (ideally) have lower complexity, maintenance, and supportability as well, allowing (again, ideally) more resources to be sloshed towards supporting the high-value GPU infrastructure. Incidentally, this architecture happens to be how most of the largest AI training clusters on which I work are designed. But parallel files aren't all bad Of course, having no parallel file system presents some usability challenges if users are expecting to be able to SSH into a login node and have a complete user environment ready. The user experience for the above infrastructure works best for those who are comfortable developing software in containers and launching pods rather than developing software in vim and submitting Slurm jobs. I do not advocate for throwing out parallel file systems if they're already ingrained in users' workflows! In addition, the latest crop of modern, distributed file systems all now support multi-protocol data access. For example, WEKA, VAST, andÂ Qumulo, all support S3 (object) interfaces as first-class citizens. Users who want the traditional HPC experience can play with their data using a file mount as they always have, while those who are coming in from the cloud-native side have equal access to those same data as objects. Supporting multiprotocol access to data in AI environments doesn't reduce the need to overbuild infrastructure or support stateful file mounts across all compute nodes, but it does provide an onramp for users to get comfortable moving away from the traditional HPC user experience. Finally, a few of the leading-edge parallel-file-system-turned-AI-storage platforms are also shipping features that make them valuable for the deployment and inferencing part of the lifecycle. For example, WEKA has their WARRP reference architecture for RAG, and VAST has its InsightEngine--both use the unique architectures underneath their file interfaces to accelerate vector queries far beyond what you would get from running a vector database on, say, Lustre. These so-called "AI data platforms," despite starting as parallel file systems, are spreading their relevance out to the entire LLM lifecycle, filling needs for file, object, and structured data with a single storage system. This is all to say that parallel file systems aren't bad, and they aren't going anywhere. But they aren't required to train frontier models either, and as I've tried to describe above, some of the largest supercomputers on the planet are designed not to require them.]]></summary></entry><entry><title type="html">Surfing the Singularity - The World is Not Flat</title><link href="https://hpc.social/personal-blog/2025/surfing-the-singularity-the-world-is-not-flat/" rel="alternate" type="text/html" title="Surfing the Singularity - The World is Not Flat" /><published>2025-01-29T18:11:00-07:00</published><updated>2025-01-29T18:11:00-07:00</updated><id>https://hpc.social/personal-blog/2025/surfing-the-singularity-the-world-is-not-flat</id><content type="html" xml:base="https://hpc.social/personal-blog/2025/surfing-the-singularity-the-world-is-not-flat/"><![CDATA[<div class="separator" style="clear: both; text-align: center;"></div>
<p>As Bill Gates recalls in his recent book-bumping interview with the Wall Street Journal, in the early innocent days of Microsoft he and his co-founder Paul Allen didn't believe in having an office in Washington, D.C.[1] They were soon to learn that was a mistake.[2] Compare and contrast with the scene in the Capital Rotunda last week for the inauguration of the new populist administration - Microsoft, Amazon, Facebook, Apple, Google, TikTok, and of course Tesla, all represented by their CEOs.[3] Microsoft's market capitalization as of this writing is now greater than the GDP of France.[4] Elon Musk's personal wealth is on par with the GDP of Denmark. Meta's platforms reach an estimated 40% of the world's population.Â </p>
<table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto;"><tbody><tr><td style="text-align: center;"></td></tr><tr><td class="tr-caption" style="text-align: center;">Apple ad from yesteryear. We're now long past 1984.</td></tr></tbody></table>
<p>Consider these other inconvenient truths about global technology: that NVIDIA does not make the GPUs it designs, that most are manufactured by TSMC in Taiwan, which is about as far away from China as Cuba is from Florida. Software talent is globally distributed, and prices vary widely. There are some very good schools in some of these relatively inexpensive places - in the 2024 edition of the ACM student programming contest, MIT placed the highest among US teams, in 11th place.[5]Â </p>
<table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto;"><tbody><tr><td style="text-align: center;"></td></tr><tr><td class="tr-caption" style="text-align: center;">Software salaries 2023, by country, exchange rate normalized.[6]</td></tr></tbody></table>
<p>AI programs and quantum computing initiatives are increasingly becoming nationalized as a strategic imperative. It is assumed that the country which is first to Artificial General Intelligence (AGI) will be the first to be able to use it to take control of the world. This fear is fueling an arms race in AI architectures, and the chips and the energy stations which power them. But is this a rational fear?Â </p>
<h3 style="text-align: left;">Unlearn What You Have Learned</h3>
<p>DeepSeek, with its deja vu inducing name and similarly eerily similar whale icon, is a new AI chatbot model wholly owned out of Hangzhou, China. And its #1 on the Apple app store, with a bullet. And yes, its quite up front that it tracks your data. There are several notable features and claims about this model: that is was trained in a fraction of the typical cost and time on a fraction of the typical hardware. That it performs about as well the OpenAI model released last month, maybe not as well on some things like straight math, but perhaps better at general writing, maybe with a bit more "personality". It shows its work - how it arrived at the answer its providing to the chat prompt. And, for the kicker from the totalitarian state, its open source up on Hugging Face.[7]Â </p>
<p>Shots fired. NVIDIA shares tumbled for a loss of $600B in one day in response, the largest single day loss in history. But what I'd like to know is, if this is the open source model, what's the real one like? Recent Federal governments have tried to enforce policies limiting technology exports to China, but in truth they've long had their own development programs - China has not participated in standardized HPC metric sharing and supercomputer ranking since 2017.</p>
<h3 style="text-align: left;">Red Flag on the Track</h3>
<p>Along with NVIDIA, power generation stocks were also down hard - GE Vernova down almost 20%. This does not mean the recent trend of tech companies buying nuclear power plants won't continue, or that we won't continue to hear of existing power stations giving data centers a direct hard wire bypassing the municipal grid. But clearly this open ended hunger for power - watts and GPU cycles - is not sustainable. And DeepSeek exposes that bare.</p>
<p>But make no mistake - this race is not over, its just warming up. OpenAI with their new Operators product currently defines AGI as a gaggle of collaborating AI agents, each with its own unique set of capabilities and goals. NVIDIA CEO Jansen Huang does his part in driving the GPU-dependent AI hype cycle by saying IT departments will become the new HR departments - for AI employees.[9] Goldman Sachs is telling clients to expect AI employees this year.[10] Cost avoidance will be a major driver.[11] And why not, when the same major technology companies report seemly amazing results using AI for software development? Google saves 50% on code migration time with AI! It gives *me* FOMO! [12]</p>
<p>The CEO of Anthropic predicts that by 2027 AI will be generally better than humans at almost everything.[13] Well, at some things maybe better than others. Turns out, what's the number one occupation we expect to be replaced by AI? Why, AI engineers and data scientists.</p>
<table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto;"><tbody><tr><td style="text-align: center;"></td></tr><tr><td class="tr-caption" style="text-align: center;">Job skills impacted by generative AI, ranked. <br />Maybe I should have been a plumber.[14]</td></tr></tbody></table>
<p>This is vast uncharted territory for companies, especially for those of size, wedded to their legacy political structures and being either un-nimble or worse, fragile. People are not machines. The mistakes AI agents make are not of the same kind made by humans - current generative AI models are intentionally designed to make stuff up, to not just say "I don't know".[15] As a manager, you'll get no benefit of human insights into the truth such as from body language, though you may get to understand the "personality" and general performance characteristics of your AI employees over time. That is, until the managers are replaced by AI. But until then, what does your management interface look like? Is it perhaps similar to the IDE for a senior software engineer who manages a team of AI coders? In the AI-laced future, there will still be a place for HCI/UX designers.</p>
<h3 style="text-align: left;">Chef of the Future</h3>
<p>Finally, the November 2024 report from the National Academies on the "future of work" says "its impossible to predict exactly the nature of the coming changes in AI and all their effects on the economy and society".[16] This includes how it changes the nature of various jobs, or outright eliminates them. Continuing education will be key to a resilient workforce, and it turns out, AI might even play a role in that.</p>
<p>As shown in Washington last week, there are new business trends being driven by a rejuvenated alliance between big technology and big government, and it is therefore time for astute technology and business leaders to pay attention to both.[17] For example, tomorrow (January 30, 2025) OpenAI is holding a previously scheduled closed door meeting in Washington regarding its own current agentic technology innovations, and what they potentially imply for the US people and its government. I imagine the topic of DeepSeek will now disrupt the meeting agenda, somewhat.Â </p>
<p>At minimum, its a topic for a future blog. Regards. - andy</p>
<p><br /></p>
<h3 style="text-align: left;">References</h3>
<div><div><span style="font-size: x-small;">[0] Photo by AJ Colores on Unsplash,Â https://unsplash.com/@ajcolores</span></div>
<div><span style="font-size: x-small;">Â  Â  Â Â </span></div>
<div><span style="font-size: x-small;">[1] Bill Gates interview by the Wall Street Journal, January 2025, https://www.youtube.com/watch?v=4LL-ynK_exM</span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><span style="font-size: x-small;">[2] US vs. Microsoft, https://en.wikipedia.org/wiki/United_States_v._Microsoft_Corp</span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><span style="font-size: x-small;">[3] https://apnews.com/article/trump-inauguration-tech-billionaires-zuckerberg-musk-wealth-0896bfc3f50d941d62cebc3074267ecd</span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><span style="font-size: x-small;">[4] https://en.wikipedia.org/wiki/List_of_countries_by_GDP_(nominal)</span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><span style="font-size: x-small;">[5] https://icpc.global/worldfinals/resultsÂ </span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><span style="font-size: x-small;">[6]Â https://www.reddit.com/r/dataisbeautiful/comments/17a63yo/oc_2023_developer_compensation_by_country taken from the 2023 Stack Overflow developer survey.</span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><span style="font-size: x-small;">[7] DeepSeek at Hugging Face: https://huggingface.co/organizations/deepseek-ai/activity/all</span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><span style="font-size: x-small;">[8] OpenAI Operators: https://www.nytimes.com/2025/01/23/technology/openai-operator-launch.html</span></div>
<div><span style="font-size: x-small;">Â </span></div>
<div><span style="font-size: x-small;">[9] NVIDIA CEO Jensen Huang on IT as the new HR: https://www.aol.com/finance/nvidia-jensen-huang-says-become-133641793.html</span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><span style="font-size: x-small;">[10] Goldman Sachs on the rise of AI employees: https://it.slashdot.org/story/25/01/21/2213230/managing-ai-agents-as-employees-is-the-challenge-of-2025-says-goldman-sachs-cio</span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><span style="font-size: x-small;">[11] https://www.msn.com/en-us/money/markets/why-cost-avoidance-became-an-ai-buzzword-for-holding-down-headcount/ar-BB1rmJSx</span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><span style="font-size: x-small;">[12] https://developers.slashdot.org/story/25/01/17/2156235/google-reports-halving-code-migration-time-with-ai-help</span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><span style="font-size: x-small;">[13] https://arstechnica.com/ai/2025/01/anthropic-chief-says-ai-could-surpass-almost-all-humans-at-almost-everything-shortly-after-2027/</span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><span style="font-size: x-small;">[14] https://reports.weforum.org/docs/WEF_Future_of_Jobs_Report_2025.pdf</span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><span style="font-size: x-small;">[15] https://slashdot.org/story/25/01/23/1645242/ai-mistakes-are-very-different-from-human-mistakes</span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><span style="font-size: x-small;">[16] https://nap.nationalacademies.org/resource/27644/interactive/</span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><span style="font-size: x-small;">[17]Â https://hbr.org/2024/11/navigating-the-new-geopolitics-of-tech</span></div>
<div><span style="font-size: x-small;"><br /></span></div>
<div><br /></div>
</div>]]></content><author><name>Surfing the Singularity</name></author><category term="surfthesing" /><summary type="html"><![CDATA[As Bill Gates recalls in his recent book-bumping interview with the Wall Street Journal, in the early innocent days of Microsoft he and his co-founder Paul Allen didn't believe in having an office in Washington, D.C.[1] They were soon to learn that was a mistake.[2] Compare and contrast with the scene in the Capital Rotunda last week for the inauguration of the new populist administration - Microsoft, Amazon, Facebook, Apple, Google, TikTok, and of course Tesla, all represented by their CEOs.[3] Microsoft's market capitalization as of this writing is now greater than the GDP of France.[4] Elon Musk's personal wealth is on par with the GDP of Denmark. Meta's platforms reach an estimated 40% of the world's population.Â  Apple ad from yesteryear. We're now long past 1984. Consider these other inconvenient truths about global technology: that NVIDIA does not make the GPUs it designs, that most are manufactured by TSMC in Taiwan, which is about as far away from China as Cuba is from Florida. Software talent is globally distributed, and prices vary widely. There are some very good schools in some of these relatively inexpensive places - in the 2024 edition of the ACM student programming contest, MIT placed the highest among US teams, in 11th place.[5]Â  Software salaries 2023, by country, exchange rate normalized.[6] AI programs and quantum computing initiatives are increasingly becoming nationalized as a strategic imperative. It is assumed that the country which is first to Artificial General Intelligence (AGI) will be the first to be able to use it to take control of the world. This fear is fueling an arms race in AI architectures, and the chips and the energy stations which power them. But is this a rational fear?Â  Unlearn What You Have Learned DeepSeek, with its deja vu inducing name and similarly eerily similar whale icon, is a new AI chatbot model wholly owned out of Hangzhou, China. And its #1 on the Apple app store, with a bullet. And yes, its quite up front that it tracks your data. There are several notable features and claims about this model: that is was trained in a fraction of the typical cost and time on a fraction of the typical hardware. That it performs about as well the OpenAI model released last month, maybe not as well on some things like straight math, but perhaps better at general writing, maybe with a bit more "personality". It shows its work - how it arrived at the answer its providing to the chat prompt. And, for the kicker from the totalitarian state, its open source up on Hugging Face.[7]Â  Shots fired. NVIDIA shares tumbled for a loss of $600B in one day in response, the largest single day loss in history. But what I'd like to know is, if this is the open source model, what's the real one like? Recent Federal governments have tried to enforce policies limiting technology exports to China, but in truth they've long had their own development programs - China has not participated in standardized HPC metric sharing and supercomputer ranking since 2017. Red Flag on the Track Along with NVIDIA, power generation stocks were also down hard - GE Vernova down almost 20%. This does not mean the recent trend of tech companies buying nuclear power plants won't continue, or that we won't continue to hear of existing power stations giving data centers a direct hard wire bypassing the municipal grid. But clearly this open ended hunger for power - watts and GPU cycles - is not sustainable. And DeepSeek exposes that bare. But make no mistake - this race is not over, its just warming up. OpenAI with their new Operators product currently defines AGI as a gaggle of collaborating AI agents, each with its own unique set of capabilities and goals. NVIDIA CEO Jansen Huang does his part in driving the GPU-dependent AI hype cycle by saying IT departments will become the new HR departments - for AI employees.[9] Goldman Sachs is telling clients to expect AI employees this year.[10] Cost avoidance will be a major driver.[11] And why not, when the same major technology companies report seemly amazing results using AI for software development? Google saves 50% on code migration time with AI! It gives *me* FOMO! [12] The CEO of Anthropic predicts that by 2027 AI will be generally better than humans at almost everything.[13] Well, at some things maybe better than others. Turns out, what's the number one occupation we expect to be replaced by AI? Why, AI engineers and data scientists. Job skills impacted by generative AI, ranked. Maybe I should have been a plumber.[14] This is vast uncharted territory for companies, especially for those of size, wedded to their legacy political structures and being either un-nimble or worse, fragile. People are not machines. The mistakes AI agents make are not of the same kind made by humans - current generative AI models are intentionally designed to make stuff up, to not just say "I don't know".[15] As a manager, you'll get no benefit of human insights into the truth such as from body language, though you may get to understand the "personality" and general performance characteristics of your AI employees over time. That is, until the managers are replaced by AI. But until then, what does your management interface look like? Is it perhaps similar to the IDE for a senior software engineer who manages a team of AI coders? In the AI-laced future, there will still be a place for HCI/UX designers. Chef of the Future Finally, the November 2024 report from the National Academies on the "future of work" says "its impossible to predict exactly the nature of the coming changes in AI and all their effects on the economy and society".[16] This includes how it changes the nature of various jobs, or outright eliminates them. Continuing education will be key to a resilient workforce, and it turns out, AI might even play a role in that. As shown in Washington last week, there are new business trends being driven by a rejuvenated alliance between big technology and big government, and it is therefore time for astute technology and business leaders to pay attention to both.[17] For example, tomorrow (January 30, 2025) OpenAI is holding a previously scheduled closed door meeting in Washington regarding its own current agentic technology innovations, and what they potentially imply for the US people and its government. I imagine the topic of DeepSeek will now disrupt the meeting agenda, somewhat.Â  At minimum, its a topic for a future blog. Regards. - andy References [0] Photo by AJ Colores on Unsplash,Â https://unsplash.com/@ajcolores Â  Â  Â Â  [1] Bill Gates interview by the Wall Street Journal, January 2025, https://www.youtube.com/watch?v=4LL-ynK_exM [2] US vs. Microsoft, https://en.wikipedia.org/wiki/United_States_v._Microsoft_Corp [3] https://apnews.com/article/trump-inauguration-tech-billionaires-zuckerberg-musk-wealth-0896bfc3f50d941d62cebc3074267ecd [4] https://en.wikipedia.org/wiki/List_of_countries_by_GDP_(nominal) [5] https://icpc.global/worldfinals/resultsÂ  [6]Â https://www.reddit.com/r/dataisbeautiful/comments/17a63yo/oc_2023_developer_compensation_by_country taken from the 2023 Stack Overflow developer survey. [7] DeepSeek at Hugging Face: https://huggingface.co/organizations/deepseek-ai/activity/all [8] OpenAI Operators: https://www.nytimes.com/2025/01/23/technology/openai-operator-launch.html Â  [9] NVIDIA CEO Jensen Huang on IT as the new HR: https://www.aol.com/finance/nvidia-jensen-huang-says-become-133641793.html [10] Goldman Sachs on the rise of AI employees: https://it.slashdot.org/story/25/01/21/2213230/managing-ai-agents-as-employees-is-the-challenge-of-2025-says-goldman-sachs-cio [11] https://www.msn.com/en-us/money/markets/why-cost-avoidance-became-an-ai-buzzword-for-holding-down-headcount/ar-BB1rmJSx [12] https://developers.slashdot.org/story/25/01/17/2156235/google-reports-halving-code-migration-time-with-ai-help [13] https://arstechnica.com/ai/2025/01/anthropic-chief-says-ai-could-surpass-almost-all-humans-at-almost-everything-shortly-after-2027/ [14] https://reports.weforum.org/docs/WEF_Future_of_Jobs_Report_2025.pdf [15] https://slashdot.org/story/25/01/23/1645242/ai-mistakes-are-very-different-from-human-mistakes [16] https://nap.nationalacademies.org/resource/27644/interactive/ [17]Â https://hbr.org/2024/11/navigating-the-new-geopolitics-of-tech]]></summary></entry><entry><title type="html">Fine tuning AI models with InstructLab under IBM LSF</title><link href="https://hpc.social/personal-blog/2025/fine-tuning-ai-models-with-instructlab-under-ibm-lsf/" rel="alternate" type="text/html" title="Fine tuning AI models with InstructLab under IBM LSF" /><published>2025-01-06T19:36:24-07:00</published><updated>2025-01-06T19:36:24-07:00</updated><id>https://hpc.social/personal-blog/2025/fine-tuning-ai-models-with-instructlab-under-ibm-lsf</id><content type="html" xml:base="https://hpc.social/personal-blog/2025/fine-tuning-ai-models-with-instructlab-under-ibm-lsf/"><![CDATA[<p><strong>Overview</strong></p>

<p>All the best for 2025! This blog looks back on a demo which I created for <a href="https://sc24.supercomputing.org">SC24</a>
last November to demonstrate InstructLab workflows running on an <a href="https://www.ibm.com/products/hpc-workload-management">IBM LSF</a>
cluster. Letâs begin with a bit of background. Iâd like to thank Michael
Spriggs, STSM, IBM LSF for his contributions to this blog.</p>

<p>When I think of tuning, what immediately comes to my mind are visions of an
expert mechanic trying to extract the most from an engine. This blog is
focused on an entirely different type of tuning, AI model tuning. Like tuning
an engine, AI model tuning can be used to ensure a better fit for a given AI
model for your business.</p>

<p>Released by IBM and Red Hat in May 2024, <a href="https://research.ibm.com/blog/instruct-lab">InstructLab</a> is an open-source project
which provides the ability to fine-tune LLMs by adding skills and knowledge,
without having to retrain the model from scratch. InstructLab can run on
resource-constrained systems such as laptops, but also supports GPUs. Much has
been written about InstructLab and this blog is not intended to provide an
in-depth look at InstructLab. Rather, the objective here is to demonstrate how
InstructLab workloads can be distributed and managed in a high-performance
computing cluster with GPUs using the IBM LSF workload scheduler. Recently, IBM
published a paper describing the infrastructure used to train the Granite family
of AI foundation models. The paper describes the Vela and Blue Vela environments
in detail. In particular, the Blue Vela environment is built on a software stack
using Red Hat Enterprise Linux, IBM LSF and Storage Scale. Learn more in the
detailed paper <a href="https://arxiv.org/abs/2407.05467">here</a>.</p>

<p>The demo workflow consists of two LSF jobs. The first job generates synthetic
data, which is used to teach the LLM new skills or knowledge. The second job,
which depends upon the successful completion of the first, is the training job,
where the new skills or knowledge are incorporated into an existing base model.
A simple LSF job dependency is used to ensure the training job only runs after
the successful completion of the synthetic data generation step.</p>

<p>The environment used is equipped with Nvidia GPUs.  InstructLab jobs will be
run with the options for GPU support, and the jobs will be submitted to LSF
with the appropriate GPU scheduling directives. Furthermore, it is assumed that
the users' $HOME directory is available on all hosts in the cluster. Note that I
require neither root access, nor a user account that is an LSF administrator, to
install and use InstructLab on the LSF cluster.</p>

<p><strong>Configuration</strong></p>

<p>The HPC cluster is configured as follows:</p>

<ul>
<li>Red Hat Enterprise Linux v8.8</li>
<li>IBM LSF v10.0.1.15</li>
<li>InstructLab v0.19.4</li>
<li>Miniforge v3 (24.9.0-0)</li>
<li>NVIDIA CUDA v12.6</li>
<li>Compute nodes are equipped with 8 x Nvidia H100 GPUs</li>
</ul>
<p><strong>Install InstructLab</strong></p>

<ol>
<li>Log in to a compute node in the LSF cluster equipped with GPUs. If ssh access
is disabled to compute nodes, then submit an interactive LSF batch job. This job
requests 8 GPUs on a single system and will set them to exclusive execution
mode.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ bsub -Is -R "span[hosts=1]" -gpu "num=8:j_exclusive=yes" bash</code></pre></div>

<ol start="2">
<li>Install and set up a Conda environment. This will enable you to install a
self-contained Conda environment for your user account with the necessary
Python version needed for InstructLab. Miniforge is installed in the default
location and the option to update the users shell profile to start the Conda
environment are selected. We assume here a shared $HOME directory.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ cd $HOME
$ curl -L -O "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"
$ bash Miniforge3-$(uname)-$(uname -m).sh</code></pre></div>

<ol start="3">
<li>Before proceeding, you must logout and log back in to activate the
environment. Next, a Conda environment is created with name <em>my_env</em>. Here weâll
specify Python v3.11, which is a requirement for InstructLab.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">conda create --name my_env -c anaconda python=3.11
conda activate my_env</code></pre></div>

<ol start="4">
<li>Next, install InstructLab. Here, version 0.19.4 of InstructLab is specified.
This was the version of InstructLab available in the timeframe preceding the
SC24 event. Follow the installation steps in the official InstructLab
documentation <a href="https://github.com/instructlab/instructlab?tab=readme-ov-file#-installing-ilab">here</a>.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ pip install instructlab==0.19.4</code></pre></div>

<ol start="5">
<li>Next, perform the installation of InstructLab with Nvidia CUDA support. This
is required for InstructLab to utilize the GPUs. Without this step, InstructLab
will run on the CPUs. Note that CUDA v12.6 is installed on the system and the
variables set below reflect this.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ export CMAKE_ARGS="-DLLAMA_CUBLAS=on -DCUDA_PATH=/usr/local/cuda-12.6 -DCUDAToolkit_ROOT=/usr/local/cuda-12.6 -DCUDAToolkit_INCLUDE_DIR=/usr/local/cuda-12/include -DCUDAToolkit_LIBRARY_DIR=/usr/local/cuda-12.6/lib64"
$ export PATH=/usr/local/cuda-12.6/bin:$PATH
$ pip cache remove llama_cpp_python
$ CMAKE_ARGS="-DLLAMA_CUDA=on -DLLAMA_NATIVE=off" pip install 'instructlab[cuda]'
$ pip install vllm@git+https://github.com/opendatahub-io/vllm@v0.6.2</code></pre></div>

<p><strong>Configure InstructLab</strong></p>

<ol>
<li>With the installation of InstructLab complete, the next step is to run the
initialization. This will setup paths to models, taxonomy repo as well as the
GPU configuration.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ ilab config init</code></pre></div>

<ol start="2">
<li>By default InstructLab stores models, training checkpoints and other files
within <em>~/.cache</em> and <em>~/.local/share/instructlab</em>. If you have limited storage
capacity available in $HOME, then you may opt to disable training checkpoint
files. This can be done by setting the following option in <em>~/.config/instructlab/config.yaml</em> as follows.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">train:

  checkpoint_at_epoch: false</code></pre></div>

<ol start="3">
<li>Next, we download the required models. The ilab model list command can be
used to list the models which are available. Note that a <a href="https://huggingface.co">HuggingFace</a> token is
required to download certain models. Please set HF_TOKEN in the environment
with the appropriate token.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ export HF_TOKEN=&lt;HuggingFace token&gt;
$ ilab model download
$ ilab model download --repository=instructlab/granite-7b-lab
$ ilab model list

+--------------------------------------+---------------------+---------+

| Model Name                           | Last Modified       | Size    |

+--------------------------------------+---------------------+---------+
| instructlab/granite-7b-lab           | 2024-12-27 20:37:29 | 12.6 GB |
| mistral-7b-instruct-v0.2.Q4_K_M.gguf | 2024-12-27 16:55:46 | 4.1 GB  |
| merlinite-7b-lab-Q4_K_M.gguf         | 2024-12-27 16:48:39 | 4.1 GB  |
+--------------------------------------+---------------------+---------+</code></pre></div>

<p><strong>Generate synthetic data &amp; AI model training</strong></p>

<p>Next, is the synthetic data generation step, which will be executed on GPUs.
This step is a prerequisite to teaching the LLM new skills/knowledge via
training.</p>

<ol>
<li>
<p>Here we use example knowledge from the InstructLab github about Taylor Swift
fans, who are known as âSwiftiesâ. This is timely because Taylor Swift recently
wrapped up 6 concerts in Toronto, Canada, where I happen to be based. Copy
attribution.txt and qna.yaml from the following <a href="https://github.com/mairin/taxonomy/tree/swifties/knowledge/arts/music/fandom/swifties">location</a>.</p>

</li>
<li>
<p>By default, the InstructLab taxonomy is found in <em>~/.local/share/instructlab/taxonomy</em>. Here we create the directories fandom/swifties under <em>~/.local/share/instructlab/taxonomy/knowledge/arts/fandom</em> and copy the files from step 1 into
this location.</p>

</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ mkdir -p ~/.local/share/instructlab/taxonomy/knowledge/arts/fandom/swifties
$ cp &lt;path_to&gt;/attribution.txt ~/.local/share/instructlab/taxonomy/knowledge/arts/fandom/swifties
$ cp &lt;path_to&gt;/qna.yaml ~/.local/share/instructlab/taxonomy/knowledge/arts/fandom/swifties</code></pre></div>

<ol start="3">
<li>With the Swifties taxonomy in place, check for any syntax errors with the
command <em>ilab taxonomy diff</em>. It should report that the taxonomy is valid if
there are no syntax errors.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ ilab taxonomy diff
knowledge/arts/fandom/swifties/qna.yaml
Taxonomy in /u/gsamu/.local/share/instructlab/taxonomy is valid :)</code></pre></div>

<ol start="4">
<li>With the taxonomy in place and having confirmed that the syntax is valid,
itâs now time to run the synthetic data generation job through LSF. Here we will
request 8 GPUs on a single server in exclusive execution mode. For the
InstructLab ilab command, specify the <em>&ndash;gpus 8 and &ndash;pipeline full</em> options.
Standard output is written to the $HOME/job-output with filename specification
&lt;LSF_JOBID&gt;.out. The $HOME/job-output directory must already exist.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ mkdir -p $HOME/job-output
$ bsub -o $HOME/job-output/%J.out -R "span[hosts=1]" -gpu "num=8:j_exclusive=yes" ilab data generate --pipeline full --gpus 8
Job &lt;1131&gt; is submitted to default queue &lt;normal&gt;.</code></pre></div>

<ol start="5">
<li>During job execution, the LSF <em>bpeek</em> command can be used to monitor the job
standard output.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ bpeek -f 1131 
&lt;&lt; output from stdout &gt;&gt;
INFO 2025-01-02 09:51:29,503 numexpr.utils:146: Note: detected 96 virtual cores but NumExpr set to maximum of 64, check "NUMEXPR_MAX_THREADS" environment variable.
INFO 2025-01-02 09:51:29,504 numexpr.utils:149: Note: NumExpr detected 96 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 16.
INFO 2025-01-02 09:51:29,504 numexpr.utils:162: NumExpr defaulting to 16 threads.
INFO 2025-01-02 09:51:30,038 datasets:59: PyTorch version 2.3.1 available.
INFO 2025-01-02 09:51:31,226 instructlab.model.backends.llama_cppð¯ Trying to connect to model server at http://127.0.0.1:8000/v1
WARNING 2025-01-02 09:51:56,356 instructlab.data.generate:270: Disabling SDG batching - unsupported with llama.cpp serving
Generating synthetic data using 'full' pipeline, '/u/gsamu/.cache/instructlab/models/mistral-7b-instruct-v0.2.Q4_K_M.gguf' model, '/u/gsamu/.local/share/instructlab/taxonomy' taxonomy, against http://127.0.0.1:55779/v1 server
INFO 2025-01-02 09:51:56,861 instructlab.sdg.generate_data:356: Synthesizing new instructions. If you aren't satisfied with the generated instructions, interrupt training (Ctrl-C) and try adjusting your YAML files. Adding more examples may help.
INFO 2025-01-02 09:51:56,872 instructlab.sdg.pipeline:153: Running pipeline single-threaded
INFO 2025-01-02 09:51:56,872 instructlab.sdg.pipeline:197: Running block: duplicate_document_col
INFO 2025-01-02 09:51:56,872 instructlab.sdg.pipeline:198: Dataset({
    features: ['icl_document', 'document', 'document_outline', 'domain', 'icl_query_1', 'icl_query_2', 'icl_query_3', 'icl_response_1', 'icl_response_2', 'icl_response_3'],
    num_rows: 35
})
INFO 2025-01-02 09:51:58,286 instructlab.sdg.llmblock:51: LLM server supports batched inputs: False
INFO 2025-01-02 09:51:58,286 instructlab.sdg.pipeline:197: Running block: gen_spellcheck
INFO 2025-01-02 09:51:58,286 instructlab.sdg.pipeline:198: Dataset({
    features: ['icl_document', 'document', 'document_outline', 'domain', 'icl_query_1', 'icl_query_2', 'icl_query_3', 'icl_response_1', 'icl_response_2', 'icl_response_3', 'base_document'],
    num_rows: 35
})
/u/gsamu/miniforge3/envs/my_env/lib/python3.11/site-packages/llama_cpp/llama.py:1054: RuntimeWarning: Detected duplicate leading "&lt;s&gt;" in prompt, this will likely reduce response quality, consider removing it...
  warnings.warn(
INFO 2025-01-02 09:57:42,264 instructlab.sdg.pipeline:197: Running block: flatten_auxiliary_columns
INFO 2025-01-02 09:57:42,264 instructlab.sdg.pipeline:198: Dataset({
    features: ['icl_document', 'document', 'document_outline', 'domain', 'icl_query_1', 'icl_query_2', 'icl_query_3', 'icl_response_1', 'icl_response_2', 'icl_response_3', 'base_document', 'spellcheck'],
    num_rows: 35
})
INFO 2025-01-02 09:57:42,279 instructlab.sdg.pipeline:197: Running block: rename_to_document_column
INFO 2025-01-02 09:57:42,279 instructlab.sdg.pipeline:198: Dataset({
    features: ['icl_document', 'document', 'document_outline', 'domain', 'icl_query_1', 'icl_query_2', 'icl_query_3', 'icl_response_1', 'icl_response_2', 'icl_response_3', 'dataset_type', 'corrected_document'],
    num_rows: 70
})
INFO 2025-01-02 09:57:42,282 instructlab.sdg.pipeline:197: Running block: gen_knowledge
INFO 2025-01-02 09:57:42,282 instructlab.sdg.pipeline:198: Dataset({
    features: ['icl_document', 'raw_document', 'document_outline', 'domain', 'icl_query_1', 'icl_query_2', 'icl_query_3', 'icl_response_1', 'icl_response_2', 'icl_response_3', 'dataset_type', 'document'],
    num_rows: 70
})
â¦
â¦</code></pre></div>

<ol start="6">
<li>During the runtime of the job, itâs possible to view GPU related metrics
using the LSF <em>lsload</em> and <em>bhosts</em> commands. First, we need to identify the host
where the job has been dispatched to using the LSF bjobs command. In this case
the job was dispatched to host <em>p1-r01-n4</em>. Note that details GPU accounting
metrics are available once the job runs to completion.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ bjobs -w
JOBID   USER    STAT  QUEUE      FROM_HOST   EXEC_HOST   JOB_NAME   SUBMIT_TIME
1131    gsamu   RUN   normal     rmf-login-1 p1-r01-n4   ilab data generate --pipeline full --gpus 8 Jan  2 14:51
$ lsload -w -gpu p1-r01-n4
HOST_NAME                 status ngpus gpu_shared_avg_mut gpu_shared_avg_ut ngpus_physical
p1-r01-n4                     ok     8                 2%                7%              8
$ bhosts -w -gpu p1-r01-n4
HOST_NAME            GPU_ID                MODEL     MUSED      MRSV  NJOBS    RUN   SUSP    RSV 
p1-r01-n4                 0   NVIDIAH10080GBHBM3        2G        0G      1      1      0      0
                          1   NVIDIAH10080GBHBM3        2G        0G      1      1      0      0
                          2   NVIDIAH10080GBHBM3        2G        0G      1      1      0      0
                          3   NVIDIAH10080GBHBM3        2G        0G      1      1      0      0
                          4   NVIDIAH10080GBHBM3        2G        0G      1      1      0      0
                          5   NVIDIAH10080GBHBM3        2G        0G      1      1      0      0
                          6   NVIDIAH10080GBHBM3        2G        0G      1      1      0      0
                          7   NVIDIAH10080GBHBM3        2G        0G      1      1      0      0</code></pre></div>

<ol start="7">
<li>After job completion, itâs possible to view details about the job including
GPU utilization which LSF collects by leveraging NVIDIA DCGM. These metrics are
available upon job completion using both the LSF <em>bhist</em> and <em>bjobs</em> commands.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ bhist -l -gpu 1131

Job &lt;1131&gt;, User &lt;gsamu&gt;, Project &lt;default&gt;, Command &lt;ilab data generate --pipe
                          line full --gpus 8&gt;
Thu Jan  2 14:51:23 2025: Submitted from host &lt;rmf-login-1&gt;, to Queue &lt;normal&gt;,
                           CWD &lt;$HOME&gt;, Output File &lt;/u/gsamu/job-output/%J.out
                          &gt;, Requested Resources &lt;span[hosts=1]&gt;, Requested GPU
                           &lt;num=8:j_exclusive=yes&gt;;
Thu Jan  2 14:51:24 2025: Dispatched 1 Task(s) on Host(s) &lt;p1-r01-n4&gt;, Allocate
                          d 1 Slot(s) on Host(s) &lt;p1-r01-n4&gt;, Effective RES_REQ
                           &lt;select[((ngpus&gt;0)) &amp;&amp; (type == local)] order[r15s:p
                          g] rusage[ngpus_physical=8.00] span[hosts=1] &gt;;
Thu Jan  2 14:51:25 2025: Starting (Pid 3095851);
Thu Jan  2 14:51:25 2025: External Message "p1-r01-n4:gpus=0,1,2,3,4,5,6,7;EFFE
                          CTIVE GPU REQ: num=8:mode=shared:mps=no:j_exclusive=y
                          es:gvendor=nvidia;" was posted from "gsamu" to messag
                          e box 0;
Thu Jan  2 14:51:26 2025: Running with execution home &lt;/u/gsamu&gt;, Execution CWD
                           &lt;/u/gsamu&gt;, Execution Pid &lt;3095851&gt;;
Thu Jan  2 16:08:05 2025: Done successfully. The CPU time used is 4624.0 second
                          s;
                          HOST: p1-r01-n4; CPU_TIME: 4624 seconds              
                                          GPU ID: 0
                                  Total Execution Time: 4597 seconds
                                  Energy Consumed: 579704 Joules
                                  SM Utilization (%): Avg 9, Max 15, Min 0
                                  Memory Utilization (%): Avg 2, Max 100, Min 0
                                  Max GPU Memory Used: 1956642816 bytes

                              GPU ID: 1
                                  Total Execution Time: 4597 seconds
                                  Energy Consumed: 503956 Joules
                                  SM Utilization (%): Avg 7, Max 11, Min 0
                                  Memory Utilization (%): Avg 2, Max 5, Min 0
                                  Max GPU Memory Used: 1767899136 bytes

                              GPU ID: 2
                                  Total Execution Time: 4597 seconds
                                  Energy Consumed: 501754 Joules
                                  SM Utilization (%): Avg 7, Max 11, Min 0
                                  Memory Utilization (%): Avg 2, Max 5, Min 0
                                  Max GPU Memory Used: 1784676352 bytes

                              GPU ID: 3
                                  Total Execution Time: 4597 seconds
                                  Energy Consumed: 525195 Joules
                                  SM Utilization (%): Avg 7, Max 11, Min 0
                                  Memory Utilization (%): Avg 2, Max 54, Min 0
                                  Max GPU Memory Used: 1767899136 bytes

                              GPU ID: 4
                                  Total Execution Time: 4597 seconds
                                  Energy Consumed: 525331 Joules
                                  SM Utilization (%): Avg 7, Max 12, Min 0
                                  Memory Utilization (%): Avg 2, Max 5, Min 0
                                  Max GPU Memory Used: 1767899136 bytes

                              GPU ID: 5
                                  Total Execution Time: 4597 seconds
                                  Energy Consumed: 502416 Joules
                                  SM Utilization (%): Avg 7, Max 11, Min 0
                                  Memory Utilization (%): Avg 2, Max 5, Min 0
                                  Max GPU Memory Used: 1784676352 bytes

                              GPU ID: 6
                                  Total Execution Time: 4597 seconds
                                  Energy Consumed: 508720 Joules
                                  SM Utilization (%): Avg 7, Max 12, Min 0
                                  Memory Utilization (%): Avg 2, Max 5, Min 0
                                  Max GPU Memory Used: 1784676352 bytes

                              GPU ID: 7
                                  Total Execution Time: 4597 seconds
                                  Energy Consumed: 491041 Joules
                                  SM Utilization (%): Avg 6, Max 12, Min 0
                                  Memory Utilization (%): Avg 2, Max 4, Min 0
                                  Max GPU Memory Used: 1933574144 bytes

GPU Energy Consumed: 4138117.000000 Joules

Thu Jan  2 16:08:05 2025: Post job process done successfully;


GPU_ALLOCATION:
 HOST             TASK GPU_ID  GI_PLACEMENT/SIZE    CI_PLACEMENT/SIZE    MODEL        MTOTAL  FACTOR MRSV    SOCKET NVLINK/XGMI                      
 p1-r01-n4        0    0       -                    -                    NVIDIAH10080 80G     9.0    0G      0      -                               
                  0    1       -                    -                    NVIDIAH10080 80G     9.0    0G      0      -                               
                  0    2       -                    -                    NVIDIAH10080 80G     9.0    0G      0      -                               
                  0    3       -                    -                    NVIDIAH10080 80G     9.0    0G      0      -                               
                  0    4       -                    -                    NVIDIAH10080 80G     9.0    0G      1      -                               
                  0    5       -                    -                    NVIDIAH10080 80G     9.0    0G      1      -                               
                  0    6       -                    -                    NVIDIAH10080 80G     9.0    0G      1      -                               
                  0    7       -                    -                    NVIDIAH10080 80G     9.0    0G      1      -                               

MEMORY USAGE:
MAX MEM: 2 Gbytes;  AVG MEM: 1 Gbytes; MEM Efficiency: 0.00%

CPU USAGE:
CPU PEAK: 1.69 ;  CPU PEAK DURATION: 52 second(s)
CPU AVERAGE EFFICIENCY: 100.69% ;  CPU PEAK EFFICIENCY: 169.23%

Summary of time in seconds spent in various states by  Thu Jan  2 16:08:05 2025
  PEND     PSUSP    RUN      USUSP    SSUSP    UNKWN    TOTAL
  1        0        4601     0        0        0        4602 </code></pre></div>

<ol start="8">
<li>
<p>When the synthetic data generation job completes, itâs output can be viewed
at <em>~/job-output/<!-- raw HTML omitted -->.out</em>. The synthetic data sets will comprise files in
the directory <em>~/.local/share/instructlab/datasets</em>. These files will be named
*skills_train_msgs_*.jsonl* and *knowledge_train_msgs_*.jsonl*.</p>

</li>
<li>
<p>With the synthetic data generation step complete, itâs now time to run the
training. We first set 2 environment variables to point to the following
files:  <em>~/.local/share/instructlab/datasets/knowledge_train_msgs_2025-01-02T09_51_56.jsonl</em>  and <em>~./.local/share/instructlab/datasets/skills_train_msgs_2025-01-02T09_51_56.jsonl</em>.</p>

</li>
</ol>
<p>Afterward, we submit the training job to LSF requesting 8 GPUs and with ilab
options <em>&ndash;pipeline accelerated</em>, <em>&ndash;gpus 8</em>, <em>&ndash;device cuda</em> and
<em>&ndash;data-path</em> pointing to the two above data files that were produced in the
synthetic data generation step.</p>

<div class="highlight"><pre><code class="language-plaintext">$ export SKILLS_PATH=/u/gsamu/.local/share/instructlab/datasets/skills_train_msgs_2025-01-02T09_51_56.jsonl
$ export KNOWLEDGE_PATH=/u/gsamu/.local/share/instructlab/datasets/knowledge_train_msgs_2025-01-02T09_51_56.jsonl
$ bsub -o $HOME/job-output/%J.out -R "span[hosts=1]" -gpu "num=8:j_exclusive=yes" ilab model train --pipeline accelerated --data-path $SKILLS_PATH --data-path $KNOWLEDGE_PATH --device cuda --gpus 8
Job &lt;1135&gt; is submitted to default queue &lt;normal&gt;.</code></pre></div>

<ol start="10">
<li>During job execution, the LSF <em>bpeek</em> command can be used to monitor the
job standard output.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ bpeek -f 1135
&lt;&lt; output from stdout &gt;&gt;
LoRA is disabled (rank=0), ignoring all additional LoRA args
[2025-01-02 12:52:04,359] [INFO] [real_accelerator.py:222:get_accelerator] Setting ds_accelerator to cuda (auto detect)
INFO 2025-01-02 12:52:09,061 numexpr.utils:146: Note: detected 96 virtual cores but NumExpr set to maximum of 64, check "NUMEXPR_MAX_THREADS" environment variable.
INFO 2025-01-02 12:52:09,061 numexpr.utils:149: Note: NumExpr detected 96 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 16.
INFO 2025-01-02 12:52:09,061 numexpr.utils:162: NumExpr defaulting to 16 threads.
INFO 2025-01-02 12:52:09,304 datasets:59: PyTorch version 2.3.1 available.
You are using the default legacy behaviour of the &lt;class 'transformers.models.llama.tokenization_llama_fast.LlamaTokenizerFast'&gt;. This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thoroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565 - if you loaded a llama tokenizer from a GGUF file you can ignore this message.
INFO 2025-01-02 12:52:09,653 root:617: Special tokens: eos: [32000], pad: [32001], bos: [32005], system: [32004], user: [32002], assistant: [32003]
INFO 2025-01-02 12:52:09,923 root:617: number of dropped samples: 0 -- out of 641
 data arguments are:
{"data_path":"/u/gsamu/.local/share/instructlab/datasets/knowledge_train_msgs_2025-01-02T09_51_56.jsonl","data_output_path":"/u/gsamu/.local/share/instructlab/internal","max_seq_len":4096,"model_path":"/u/gsamu/.cache/instructlab/models/instructlab/granite-7b-lab","chat_tmpl_path":"/u/gsamu/miniforge3/envs/my_env/lib/python3.11/site-packages/instructlab/training/chat_templates/ibm_generic_tmpl.py","num_cpu_procs":16}
tokenizing the dataset with /u/gsamu/.cache/instructlab/models/instructlab/granite-7b-lab tokenizer...
ten largest length percentiles:
quantile 90th: 1459.0
quantile 91th: 1466.0
quantile 92th: 1469.6000000000001
quantile 93th: 1478.2
quantile 94th: 1483.0
quantile 95th: 1488.0
quantile 96th: 1497.1999999999998
quantile 97th: 1516.5999999999997
quantile 98th: 1540.6000000000001
quantile 99th: 1656.0000000000016
quantile 100th: 2578.0

at 4096 max sequence length, the number of samples to be dropped is 0
(0.00% of total)
quantile 0th: 368.0
quantile 1th: 393.0
quantile 2th: 411.2
quantile 3th: 421.2
quantile 4th: 427.2
quantile 5th: 442.0
quantile 6th: 604.4
quantile 7th: 631.8
quantile 8th: 653.8000000000001
quantile 9th: 679.8
quantile 10th: 742.0
at 20 min sequence length, the number of samples to be dropped is 0
checking the validity of the samples...
Categorizing training data type...
unmasking the appropriate message content...
 Samples Previews...
â¦
â¦</code></pre></div>

<ol start="11">
<li>During the runtime of the training job, we can observe some GPU utilization
information using the LSF lsload and bhosts commands.  First we need to identify
the server on which the training job is running. This is done using the bjobs
command and checking for the execution host of the job.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ bjobs -w
JOBID   USER    STAT  QUEUE      FROM_HOST   EXEC_HOST   JOB_NAME   SUBMIT_TIME
1135    gsamu   RUN   normal     rmf-login-1 p1-r01-n1   ilab model train --pipeline accelerated --data-path /u/gsamu/.local/share/instructlab/datasets/skills_train_msgs_2025-01-02T09_51_56.jsonl --data-path /u/gsamu/.local/share/instructlab/datasets/knowledge_train_msgs_2025-01-02T09_51_56.jsonl --device cuda --gpus 8 Jan  2 17:51
$ lsload -w -gpu p1-r01-n1
HOST_NAME                 status ngpus gpu_shared_avg_mut gpu_shared_avg_ut ngpus_physical
p1-r01-n1                     ok     8                 0%               22%              8
$ bhosts -w -gpu p1-r01-n1
HOST_NAME            GPU_ID                MODEL     MUSED      MRSV  NJOBS    RUN   SUSP    RSV 
p1-r01-n1                 0   NVIDIAH10080GBHBM3       10G        0G      1      1      0      0
                          1   NVIDIAH10080GBHBM3       10G        0G      1      1      0      0
                          2   NVIDIAH10080GBHBM3       10G        0G      1      1      0      0
                          3   NVIDIAH10080GBHBM3       10G        0G      1      1      0      0
                          4   NVIDIAH10080GBHBM3       10G        0G      1      1      0      0
                          5   NVIDIAH10080GBHBM3       10G        0G      1      1      0      0
                          6   NVIDIAH10080GBHBM3       10G        0G      1      1      0      0
                          7   NVIDIAH10080GBHBM3       10G        0G      1      1      0      0</code></pre></div>

<ol start="12">
<li>Once the job is complete, detailed GPU accounting can again be viewed using
the LSF <em>bhist</em> command as follows below.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ bhist -l -gpu 1135

Job &lt;1135&gt;, User &lt;gsamu&gt;, Project &lt;default&gt;, Command &lt;ilab model train --pipeli
                          ne accelerated --data-path /u/gsamu/.local/share/inst
                          ructlab/datasets/skills_train_msgs_2025-01-02T09_51_5
                          6.jsonl --data-path /u/gsamu/.local/share/instructlab
                          /datasets/knowledge_train_msgs_2025-01-02T09_51_56.js
                          onl --device cuda --gpus 8&gt;
Thu Jan  2 17:51:48 2025: Submitted from host &lt;rmf-login-1&gt;, to Queue &lt;normal&gt;,
                           CWD &lt;$HOME/.local/share/instructlab/checkpoints&gt;, Ou
                          tput File &lt;/u/gsamu/job-output/%J.out&gt;, Requested Res
                          ources &lt;span[hosts=1]&gt;, Requested GPU &lt;num=8:j_exclus
                          ive=yes&gt;;
Thu Jan  2 17:51:48 2025: Dispatched 1 Task(s) on Host(s) &lt;p1-r01-n1&gt;, Allocate
                          d 1 Slot(s) on Host(s) &lt;p1-r01-n1&gt;, Effective RES_REQ
                           &lt;select[((ngpus&gt;0)) &amp;&amp; (type == local)] order[r15s:p
                          g] rusage[ngpus_physical=8.00] span[hosts=1] &gt;;
Thu Jan  2 17:51:49 2025: Starting (Pid 3462241);
Thu Jan  2 17:51:49 2025: Running with execution home &lt;/u/gsamu&gt;, Execution CWD
                           &lt;/u/gsamu/.local/share/instructlab/checkpoints&gt;, Exe
                          cution Pid &lt;3462241&gt;;
Thu Jan  2 17:51:49 2025: External Message "p1-r01-n1:gpus=0,1,2,3,4,5,6,7;EFFE
                          CTIVE GPU REQ: num=8:mode=shared:mps=no:j_exclusive=y
                          es:gvendor=nvidia;" was posted from "gsamu" to messag
                          e box 0;
Thu Jan  2 17:57:56 2025: Done successfully. The CPU time used is 3024.0 second
                          s;
                          HOST: p1-r01-n1; CPU_TIME: 3024 seconds              
                                          GPU ID: 0
                                  Total Execution Time: 365 seconds
                                  Energy Consumed: 98890 Joules
                                  SM Utilization (%): Avg 20, Max 100, Min 0
                                  Memory Utilization (%): Avg 9, Max 62, Min 0
                                  Max GPU Memory Used: 53022294016 bytes

                              GPU ID: 1
                                  Total Execution Time: 365 seconds
                                  Energy Consumed: 97697 Joules
                                  SM Utilization (%): Avg 53, Max 100, Min 0
                                  Memory Utilization (%): Avg 9, Max 58, Min 0
                                  Max GPU Memory Used: 53087305728 bytes

                              GPU ID: 2
                                  Total Execution Time: 365 seconds
                                  Energy Consumed: 94820 Joules
                                  SM Utilization (%): Avg 53, Max 100, Min 0
                                  Memory Utilization (%): Avg 9, Max 62, Min 0
                                  Max GPU Memory Used: 53221523456 bytes

                              GPU ID: 3
                                  Total Execution Time: 365 seconds
                                  Energy Consumed: 98014 Joules
                                  SM Utilization (%): Avg 53, Max 100, Min 0
                                  Memory Utilization (%): Avg 9, Max 59, Min 0
                                  Max GPU Memory Used: 53041168384 bytes

                              GPU ID: 4
                                  Total Execution Time: 365 seconds
                                  Energy Consumed: 99246 Joules
                                  SM Utilization (%): Avg 53, Max 100, Min 0
                                  Memory Utilization (%): Avg 9, Max 60, Min 0
                                  Max GPU Memory Used: 53045362688 bytes

                              GPU ID: 5
                                  Total Execution Time: 365 seconds
                                  Energy Consumed: 94952 Joules
                                  SM Utilization (%): Avg 53, Max 100, Min 0
                                  Memory Utilization (%): Avg 9, Max 65, Min 0
                                  Max GPU Memory Used: 53047459840 bytes

                              GPU ID: 6
                                  Total Execution Time: 365 seconds
                                  Energy Consumed: 98227 Joules
                                  SM Utilization (%): Avg 53, Max 100, Min 0
                                  Memory Utilization (%): Avg 9, Max 63, Min 0
                                  Max GPU Memory Used: 53127151616 bytes

                              GPU ID: 7
                                  Total Execution Time: 365 seconds
                                  Energy Consumed: 94582 Joules
                                  SM Utilization (%): Avg 52, Max 100, Min 0
                                  Memory Utilization (%): Avg 9, Max 65, Min 0
                                  Max GPU Memory Used: 53481570304 bytes

GPU Energy Consumed: 776428.000000 Joules

Thu Jan  2 17:57:56 2025: Post job process done successfully;


GPU_ALLOCATION:
 HOST             TASK GPU_ID  GI_PLACEMENT/SIZE    CI_PLACEMENT/SIZE    MODEL        MTOTAL  FACTOR MRSV    SOCKET NVLINK/XGMI                      
 p1-r01-n1        0    0       -                    -                    NVIDIAH10080 80G     9.0    0G      0      -                               
                  0    1       -                    -                    NVIDIAH10080 80G     9.0    0G      0      -                               
                  0    2       -                    -                    NVIDIAH10080 80G     9.0    0G      0      -                               
                  0    3       -                    -                    NVIDIAH10080 80G     9.0    0G      0      -                               
                  0    4       -                    -                    NVIDIAH10080 80G     9.0    0G      1      -                               
                  0    5       -                    -                    NVIDIAH10080 80G     9.0    0G      1      -                               
                  0    6       -                    -                    NVIDIAH10080 80G     9.0    0G      1      -                               
                  0    7       -                    -                    NVIDIAH10080 80G     9.0    0G      1      -                               

MEMORY USAGE:
MAX MEM: 104 Gbytes;  AVG MEM: 16 Gbytes; MEM Efficiency: 0.00%

CPU USAGE:
CPU PEAK: 17.86 ;  CPU PEAK DURATION: 49 second(s)
CPU AVERAGE EFFICIENCY: 856.60% ;  CPU PEAK EFFICIENCY: 1785.71%

Summary of time in seconds spent in various states by  Thu Jan  2 17:57:56 2025
  PEND     PSUSP    RUN      USUSP    SSUSP    UNKWN    TOTAL
  0        0        368      0        0        0        368         </code></pre></div>

<ol start="13">
<li>Finally, with the model successfully trained, letâs chat with the new model
to check the result. Hereâs weâll pose it Swiftie specific questions. Note that
the output from the training is written to <em>~/.local/share/instructlab/checkpoints/hf_format</em>. Weâll take the model from the latest checkpoint directory that was
created. Here again, we launch the model chat job via LSF as an interactive
batch job (i.e. <em>bsub -Is</em>).</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">$ grep hf_format 1135.out
Model saved in /u/gsamu/.local/share/instructlab/checkpoints/hf_format/samples_886
Model saved in /u/gsamu/.local/share/instructlab/checkpoints/hf_format/samples_1776
Model saved in /u/gsamu/.local/share/instructlab/checkpoints/hf_format/samples_2658
Model saved in /u/gsamu/.local/share/instructlab/checkpoints/hf_format/samples_3546
Model saved in /u/gsamu/.local/share/instructlab/checkpoints/hf_format/samples_4435</code></pre></div>

<div class="highlight"><pre><code class="language-plaintext">$ bsub -Is -R "span[hosts=1]" -gpu "num=8:j_exclusive=yes" ilab model chat --model /u/gsamu/.local/share/instructlab/checkpoints/hf_format/samples_4435
Job &lt;1146&gt; is submitted to default queue &lt;interactive&gt;.
&lt;&lt;Waiting for dispatch ...&gt;&gt;
&lt;&lt;Starting on p1-r01-n2&gt;&gt;
INFO 2025-01-02 15:06:07,600 instructlab.model.backends.vllm:105: Trying to connect to model server at http://127.0.0.1:8000/v1
INFO 2025-01-02 15:06:08,876 instructlab.model.backends.vllm:308: vLLM starting up on pid 3744375 at http://127.0.0.1:41531/v1
INFO 2025-01-02 15:06:08,876 instructlab.model.backends.vllm:114: Starting a temporary vLLM server at http://127.0.0.1:41531/v1
INFO 2025-01-02 15:06:08,876 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 1/120
INFO 2025-01-02 15:06:12,244 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 2/120
INFO 2025-01-02 15:06:15,614 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 3/120
INFO 2025-01-02 15:06:18,801 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 4/120
INFO 2025-01-02 15:06:21,952 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 5/120
INFO 2025-01-02 15:06:25,391 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 6/120
INFO 2025-01-02 15:06:28,638 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 7/120
INFO 2025-01-02 15:06:32,103 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 8/120
INFO 2025-01-02 15:06:35,296 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 9/120
INFO 2025-01-02 15:06:38,616 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 10/120
INFO 2025-01-02 15:06:42,015 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 11/120
INFO 2025-01-02 15:06:45,435 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 12/120
INFO 2025-01-02 15:06:48,679 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 13/120
INFO 2025-01-02 15:06:52,025 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 14/120
INFO 2025-01-02 15:06:55,317 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 15/120
INFO 2025-01-02 15:06:58,604 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 16/120
INFO 2025-01-02 15:07:01,927 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 17/120
INFO 2025-01-02 15:07:05,287 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 18/120
INFO 2025-01-02 15:07:08,763 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 19/120
INFO 2025-01-02 15:07:12,131 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 20/120
INFO 2025-01-02 15:07:15,476 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 21/120
INFO 2025-01-02 15:07:18,881 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 22/120
INFO 2025-01-02 15:07:22,203 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 23/120
INFO 2025-01-02 15:07:25,599 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 24/120
INFO 2025-01-02 15:07:28,991 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 25/120
INFO 2025-01-02 15:07:32,234 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 26/120
INFO 2025-01-02 15:07:35,714 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 27/120
INFO 2025-01-02 15:07:38,974 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 28/120
INFO 2025-01-02 15:07:42,265 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 29/120
INFO 2025-01-02 15:07:45,582 instructlab.model.backends.vllm:129: Waiting for the vLLM server to start at http://127.0.0.1:41531/v1, this might take a moment... Attempt: 30/120
INFO 2025-01-02 15:07:45,586 instructlab.model.backends.vllm:136: vLLM engine successfully started at http://127.0.0.1:41531/v1
â­ââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââ system âââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââ®
â Welcome to InstructLab Chat w/ SAMPLES_4435 (type /h for help)                                                                     â
â°âââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââ¯
&gt;&gt;&gt; Tell me everything you know about Swifties.                                                                           [S][default]
â­âââââââââââââââââââââââââââââââââââââââââââââââââââââââââââ samples_4435 ââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââ®
â Swifties are the fandom of the American singer-songwriter Taylor Swift.                                                            â
â Regarded by journalists as one of the largest, most devoted, and influential fan bases, Swifties are known for their high levels   â
â of participation, creativity, community, fanaticism, and cultural impact on the music industry and popular culture. They are a     â
â subject of widespread coverage in the mainstream media.                                                                            â
â                                                                                                                                    â
â Critics have opined that Swift has redefined artist-fan relationships by establishing an intimate connection with Swifties. She    â
â has frequently engaged with, helped, credited, and prioritized her fans, who have offered unprecedented support and interest in    â
â her works irrespective of her wavering reception in the media. They continued to support Swift through her genre transitions,      â
â unexpected artistic pivots, and her highly publicized controversies such as the 2019 masters dispute, while instigating the        â
â political scrutiny of Ticketmaster that led to implementation of various laws and stimulated economic growth with the Eras Tour.   â
â Swift's releases, promotional efforts, and fashion have garnered attention for incorporating Easter eggs and clues that are        â
...
...</code></pre></div>

<p><strong>Conclusions</strong></p>

<p>Weâve demonstrated a simple InstructLab workflow that is scheduled by IBM LSF
in a compute cluster equipped with GPUs.  As part of this example, LSF GPU
scheduling and accounting for GPU workloads was highlighted. For organizations
looking to productionize InstructLab and where there is a pool of GPU equipped
compute resources, LSF provides an ideal way to manage demand from a user
community looking to run these intensive workloads.</p>

<p>At the recent SC24 event, the demonstration went beyond what is shown in this
blog. It incorporated single click job submission via LSF Application Center
using a custom template that was created for InstructLab to submits both the
synthetic data generation job, as well the training job with a single click.
The demo environment was on IBM Cloud using instances equipped with Nvidia GPUs.
The compute instances were automatically scaled up and down by the LSF resource
connector. This will be the topic for a future blog.</p>]]></content><author><name>Ramblings of a supercomputing enthusiast.</name></author><category term="gaborsamu" /><summary type="html"><![CDATA[Overview]]></summary></entry><entry><title type="html">Surfing the Singularity - âPlease hold for the next available agentâ</title><link href="https://hpc.social/personal-blog/2025/surfing-the-singularity-please-hold-for-the-next-available-agent/" rel="alternate" type="text/html" title="Surfing the Singularity - âPlease hold for the next available agentâ" /><published>2025-01-03T17:00:00-07:00</published><updated>2025-01-03T17:00:00-07:00</updated><id>https://hpc.social/personal-blog/2025/surfing-the-singularity-please-hold-for-the-next-available-agent-</id><content type="html" xml:base="https://hpc.social/personal-blog/2025/surfing-the-singularity-please-hold-for-the-next-available-agent/"><![CDATA[<div class="separator" style="clear: both; text-align: center;"></div>
<p><br />&lt;div style="text-align: left;"&gt;<br />&lt;/div&gt;</p>
<div><span style="font-family: verdana;">Our imaginations, having been so stimulated by the "innovation trigger" of early interactions with ChatGPT and its LLM kin, having experienced the illusion of the algorithm reading your mind, we have now firmly entered into the period of inflated expectations. Any day now we expect a knock on the door to be informed by some HAL Junior that not only are we now out of a job, we've also got 20 minutes to evacuate the premise before its bulldozed to make way for another solar farm and data center. AGI is only just one product announcement away, or maybe two, but certainly three at most...Â </span></div>
<div><h3 style="text-align: left;"><span style="font-family: verdana;">Nose DeepÂ </span></h3></div>
<div><span style="font-family: verdana;">There is a strong desire on the part of companies trafficking in AI to generate not just chatbot hallucinations but also customers for real business use cases, meaning revenue, and now. To do that we're going to need hardware, fast, lots of it, and gigajoules to power it. So AWS buys a new data center in PA adjacent to a 2.5GW nuclear power plant.[1] Not to be outdone Microsoft re-revs up Three Mile Island (albeit with a catchy rebranding laughable by 1970's standards), with 100% of the power going to their regional AI data centers.[2]Â </span></div>
<div><span style="font-family: verdana;"><br /></span><table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto;"><tbody><tr><td style="text-align: center;"><a href="https://media.datacenterdynamics.com/media/images/Constellation_Three_Mile_Island.width-358.png" style="margin-left: auto; margin-right: auto;"><img border="0" height="280" src="https://media.datacenterdynamics.com/media/images/Constellation_Three_Mile_Island.width-358.png" width="400" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;"><span style="font-family: verdana;">Three Mile Island nuclear power plant, aka the "Crane Clean Energy Center".<br /></span>Â Â </td></tr></tbody></table></div>
<div><span style="font-family: verdana;">After vigorous expectations the trough of disillusionment will soon follow. Already Microsoft hints that demand for AI-oriented chips is waning.[3] Practical, as you'll have a hard time getting them anyway - the data-center grade GPU chips on which AI computation rely are in short supply - NVIDIA via their TSMC outsource manufacturing partner is fully booked for Blackwell GPU orders for the next 12 months.[4] AWS has recently announced to customers (like me) new limitations on availability of certain NVIDIA GPU instances. (Consider also that AI competes with crypto for these scarce GPUs.) Intel suggests it will ship mass quantities of chips for AI-ready PCs and other mobile devices in 2025, but the stock traders are not yet buying it, with the stock currently fallen over 50% year-over-year. In the end, and as evidenced by the long term investments, we of course expect the march of techno-progress to continue, but in the short run, aligning expectations with reality may remain a challenge.</span></div>
<div><span style="font-family: verdana;"><br /></span></div>
<div><table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto;"><tbody><tr><td style="text-align: center;"></td></tr><tr><td class="tr-caption" style="text-align: center;"><div style="font-family: verdana;">The August 2024 Gartner Hype Cycle for Emerging Technologies.Â </div>
<div style="font-family: verdana;">Generative AI - weee! [5]</div>
</td></tr></tbody></table></div>
<div><span style="font-family: verdana;"><div style="text-align: center;"><br /></div>
What does OpenAI say about all this? First, the desire to be non-profit has bumped up against the realities of scaling up the models. Will they continue to scale up, yielding better and deeper performance on the road to artificial general intelligence simply by scaling up, or will they hit a theoretical wall?[6] Sam Altman says succinctly: "there is no wall".[7] The nuclear-powered race is on, be it sustainable or not.</span></div>
<div><span style="font-family: verdana;"><br /></span><h3 style="text-align: left;"><span style="font-family: verdana;">"Your wait time is now less than..."</span></h3></div>
<div><span style="font-family: verdana;">But as we argued in the last blog [8], we don't need dystopia-inducing super-human AGI in order to make productive and disruptive use of artificial intelligence technologies - a domain-tuned artificial capable intelligence (ACI) is enough.[9] Or a collaborating set of them.Â </span></div>
<div><span style="font-family: verdana;"><br />OpenAI's strategic product roadmap is more than a little vague [10], but in theory after chatbots capable of basic reasoning comes the age of agents - think: allowing Alexa to auto-restock your pantry via a hotline to Bezos when it overhears you say you're low on sugar. Such "AI" does such a good job doing basic thinks like, oh I dunno, controlling the lights in your home now, what could go wrong?! Truth is, today's LLMs perform only so-so on standardized benchmarks, and while they improve all the time [11], the current state of the art is not yet ready to be trusted and at times seems like snake oil.[12]</span></div>
<div><span style="font-family: verdana;"><br />Today's agents tend to be domain-specific and tailored to narrow purpose - Salesforce.com agents for common customer interactions, ServiceNow agents helping the human agent perform repetitive or summary tasks in handling case loads, but not replacing the human.[13,14] Google Gemini can add events to your calendar, help you plan travel, but is not yet trusted to actually borrow your credit card and book it. Keeping the human-in-the-loop will remain for now, as a stepping stone to full automation.</span></div>
<div><span style="font-family: verdana;"><br />If you visit agent marketplaces like Agent.ai or SwarmZero.ai, you'll see on the order of hundreds of agents available to handle what are largely small, mundane, and repetitive tasks. There are similar domain agent marketplaces on OpenAI's site, Anthropic's, GitHub, Hugging Face, and more. Let's go along with the current norm and define "assistants" as gaggles of agents loosely collaborating to accomplish more complex tasks, perhaps as part of a hybrid AI-human team or for some cases ultimately on behalf of the entire organization, and yet, still not requiring full-on AGI. (Consider what just one techno-savvy entrepreneur with a diverse collection of AI auto-orgs might do.)</span></div>
<div><span style="font-family: verdana;"><br />The missing elements are reliable agent accuracy, which yields trust, and the hardware and power to run it all. Trust, unfortunately in the near term, may play second fiddle to profit, as the AI snake oil is sold to companies and governments and ultimately end users, most of whom barely understand it.</span></div>
<div><span style="font-family: verdana;"><br />In fact, the scientists themselves barely understand it. The deep learning networks that power today's LLMs are generally black boxes, layers upon layers of neural networks, numeric weights and matrix computations, where its pretty difficult to tell where any given word, image fragment, or concept is held in the vast space of the model, and how with various feed-forward and back-propagation processes in the network it is used in computing responses.</span></div>
<div><span style="font-family: verdana;"><br /></span></div>
<div><table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto;"><tbody><tr><td style="text-align: center;"><a href="https://miro.medium.com/v2/0*-8c-MXmNvcvTLdHH.png" style="margin-left: auto; margin-right: auto;"><img border="0" height="360" src="https://miro.medium.com/v2/0*-8c-MXmNvcvTLdHH.png" width="640" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;"><span style="font-family: verdana; text-align: left;">A GPT model formed by combining successive attention and neural net layers. Input comes in at the left, and its black boxes all the way down.[15]</span></td></tr></tbody></table><div class="separator" style="clear: both; text-align: center;">Â <span>Â Â </span></div>
<span style="font-family: verdana;"><br /></span></div>
<div><span style="font-family: verdana;">Black box or not, as Sam Altman says, deep learning just works.[16] Sort of - AGI is unlikely without strong ontological and reasoning abilities and a tactile understanding of the physical world.[17] And deep learning itself is not without its problems. If the training data is biased, so will be the results. Trainers have to be alert to overfitting the model to the training data in a way that makes the model ineffective on new data. And implementors need better tools which help introspect and observe the model to provide verification, to illuminate the black box. Until then, any technology which cannot be understood is indistinguishable from magic.</span></div>
<div><span style="font-family: verdana;"><br /></span><h3 style="text-align: left;"><span style="font-family: verdana;">Hell-o Operator</span></h3></div>
<div><span style="font-family: verdana;">AI is a broad term, encompassing many technologies, machine learning being just one of them, and deep learning based on neural networks being an even further niche. In many ways, given the black box nature of the solution, AI has become a substitute word for "automation", and/or "program", or "algorithm". And the ill-defined AI landscape is moving fast. Twelve months ago the buzz was about the emergence of the "prompt engineer" role in lieu of computer programmers, and today, not so much. Instead we now have thin but actionable (i.e. product-oriented) definitions like "agent" and "assistant" and a new suite of tools and cute icons to put on enterprise architecture diagrams. This is not to even mention the human and organizational impact of new agent-based workflows characterized by iterative, non-waterfall business processes - not something well understood or appreciated outside of software engineering circles.</span></div>
<div><span style="font-family: verdana;"><br />In this turbulent time, with vendors leapfrogging each other's capabilities and performance, there is no and cannot be any real standardization, no agreed abstractions on which to base a unifying orchestration layer. Move fast and break things, fix them later if they live long enough. Let the prototype knowingly become the short-lived product, and iterate, maybe. Think: sqrt of web time. Think: ChatGPT + IFTTT.[18] That is not an enterprise IT solution, nor one manageable for most individuals. That is a fine mess.</span></div>
<div><span style="font-family: verdana;"><br />Thankfully, we'll soon have AI assistants to fix it for us.Â </span></div>
<div><span style="font-family: verdana;"><br /></span></div>
<div><span style="font-family: verdana;">- andyÂ <span style="font-size: 16px;">(linkedin: andygallojr)</span><br /><br /><br /></span><h3 style="text-align: left;"><span style="font-family: verdana;">References</span></h3><span style="font-family: verdana;">[1] <a href="https://www.datacenterdynamics.com/en/news/aws-acquires-talens-nuclear-data-center-campus-in-pennsylvania/">https://www.datacenterdynamics.com/en/news/aws-acquires-talens-nuclear-data-center-campus-in-pennsylvania/</a><br />[2] <a href="https://www.datacenterdynamics.com/en/news/three-mile-island-nuclear-power-plant-to-return-as-microsoft-signs-20-year-835mw-ai-data-center-ppa/">https://www.datacenterdynamics.com/en/news/three-mile-island-nuclear-power-plant-to-return-as-microsoft-signs-20-year-835mw-ai-data-center-ppa/</a></span></div>
<div><span style="font-family: verdana;">Readers unfamiliar with the nuclear accident at Three Mile Island in 1979 can read the summary here:Â <a href="https://en.wikipedia.org/wiki/Three_Mile_Island_accident">https://en.wikipedia.org/wiki/Three_Mile_Island_accident</a></span></div>
<div><span style="font-family: verdana;">[3] <a href="https://finance.yahoo.com/news/nvidia-stocks-correction-accelerated-since-020804144.html">https://finance.yahoo.com/news/nvidia-stocks-correction-accelerated-since-020804144.html</a><br />[4] <a href="https://www.smbom.com/news/14253">https://www.smbom.com/news/14253</a><br />[5] Gartner Hype Cycle for Emerging Technologies, August 2024, <a href="https://emt.gartnerweb.com/ngw/globalassets/en/newsroom/images/graphs/august_2024_ethc.png">https://emt.gartnerweb.com/ngw/globalassets/en/newsroom/images/graphs/august_2024_ethc.png</a><br />[6] "The Computational Limits of Deep Learning", <a href="https://arxiv.org/pdf/2007.05558">https://arxiv.org/pdf/2007.05558</a><br />[7] Sam Altman on X: "there is no wall", <a href="https://x.com/sama/status/1856941766915641580">https://x.com/sama/status/1856941766915641580</a></span></div>
<div><span style="font-family: verdana;">[8] Surfing the Singularity blog, <a href="https://surfthesing.blogspot.com/2024/12/surfing-singularity-coming-wave-book.html">https://surfthesing.blogspot.com/2024/12/surfing-singularity-coming-wave-book.html</a></span></div>
<div><span style="font-family: verdana;">[9]Â <span style="background-color: black; font-size: 15px;">"The Coming Wave",Â </span><span style="background-color: black; font-size: 15px;">M. Suleyman, Crown Pub., 2023</span><br />[10] <a href="https://www.theneurondaily.com/p/openais-leaked-agi-roadmap">https://www.theneurondaily.com/p/openais-leaked-agi-roadmap</a><br />[11] 12 Days of OpenAI, Day 12: <a href="https://www.youtube.com/watch?v=SKBG1sqdyIU">https://www.youtube.com/watch?v=SKBG1sqdyIU</a>Â <br />[12] "AI Snake Oil", Narayanan &amp; Kapoor, Princeton U. Press, 2024<br />[13] <a href="https://www.salesforce.com/news/stories/einstein-sales-agents-announcement">https://www.salesforce.com/news/stories/einstein-sales-agents-announcement</a><br />[14] <a href="https://www.servicenow.com/standard/resource-center/data-sheet/ds-virtual-agent.html">https://www.servicenow.com/standard/resource-center/data-sheet/ds-virtual-agent.html</a><br />[15]Â <a href="https://miro.medium.com/v2/0*-8c-MXmNvcvTLdHH.png">https://miro.medium.com/v2/0*-8c-MXmNvcvTLdHH.png</a> We recommend the following video for those not familiar with this architecture:Â  <a href="https://youtu.be/KJtZARuO3JY?si=Muq2xRdSTaa9LMXb">https://youtu.be/KJtZARuO3JY?si=Muq2xRdSTaa9LMXb</a><br />[16] <a href="https://ia.samaltman.com/">https://ia.samaltman.com/</a><br />[17] Yann LeCun on Lex Fridman podcast, <a href="https://www.youtube.com/watch?v=5t1vTLU7s40">https://www.youtube.com/watch?v=5t1vTLU7s40</a><br />[18] <a href="https://ifttt.com/chatgpt">https://ifttt.com/chatgpt</a><br /><br /></span></div>]]></content><author><name>Surfing the Singularity</name></author><category term="surfthesing" /><summary type="html"><![CDATA[&lt;div style="text-align: left;"&gt;&lt;/div&gt; Our imaginations, having been so stimulated by the "innovation trigger" of early interactions with ChatGPT and its LLM kin, having experienced the illusion of the algorithm reading your mind, we have now firmly entered into the period of inflated expectations. Any day now we expect a knock on the door to be informed by some HAL Junior that not only are we now out of a job, we've also got 20 minutes to evacuate the premise before its bulldozed to make way for another solar farm and data center. AGI is only just one product announcement away, or maybe two, but certainly three at most...Â  Nose DeepÂ  There is a strong desire on the part of companies trafficking in AI to generate not just chatbot hallucinations but also customers for real business use cases, meaning revenue, and now. To do that we're going to need hardware, fast, lots of it, and gigajoules to power it. So AWS buys a new data center in PA adjacent to a 2.5GW nuclear power plant.[1] Not to be outdone Microsoft re-revs up Three Mile Island (albeit with a catchy rebranding laughable by 1970's standards), with 100% of the power going to their regional AI data centers.[2]Â  Three Mile Island nuclear power plant, aka the "Crane Clean Energy Center".Â Â  After vigorous expectations the trough of disillusionment will soon follow. Already Microsoft hints that demand for AI-oriented chips is waning.[3] Practical, as you'll have a hard time getting them anyway - the data-center grade GPU chips on which AI computation rely are in short supply - NVIDIA via their TSMC outsource manufacturing partner is fully booked for Blackwell GPU orders for the next 12 months.[4] AWS has recently announced to customers (like me) new limitations on availability of certain NVIDIA GPU instances. (Consider also that AI competes with crypto for these scarce GPUs.) Intel suggests it will ship mass quantities of chips for AI-ready PCs and other mobile devices in 2025, but the stock traders are not yet buying it, with the stock currently fallen over 50% year-over-year. In the end, and as evidenced by the long term investments, we of course expect the march of techno-progress to continue, but in the short run, aligning expectations with reality may remain a challenge. The August 2024 Gartner Hype Cycle for Emerging Technologies.Â  Generative AI - weee! [5] What does OpenAI say about all this? First, the desire to be non-profit has bumped up against the realities of scaling up the models. Will they continue to scale up, yielding better and deeper performance on the road to artificial general intelligence simply by scaling up, or will they hit a theoretical wall?[6] Sam Altman says succinctly: "there is no wall".[7] The nuclear-powered race is on, be it sustainable or not. "Your wait time is now less than..." But as we argued in the last blog [8], we don't need dystopia-inducing super-human AGI in order to make productive and disruptive use of artificial intelligence technologies - a domain-tuned artificial capable intelligence (ACI) is enough.[9] Or a collaborating set of them.Â  OpenAI's strategic product roadmap is more than a little vague [10], but in theory after chatbots capable of basic reasoning comes the age of agents - think: allowing Alexa to auto-restock your pantry via a hotline to Bezos when it overhears you say you're low on sugar. Such "AI" does such a good job doing basic thinks like, oh I dunno, controlling the lights in your home now, what could go wrong?! Truth is, today's LLMs perform only so-so on standardized benchmarks, and while they improve all the time [11], the current state of the art is not yet ready to be trusted and at times seems like snake oil.[12] Today's agents tend to be domain-specific and tailored to narrow purpose - Salesforce.com agents for common customer interactions, ServiceNow agents helping the human agent perform repetitive or summary tasks in handling case loads, but not replacing the human.[13,14] Google Gemini can add events to your calendar, help you plan travel, but is not yet trusted to actually borrow your credit card and book it. Keeping the human-in-the-loop will remain for now, as a stepping stone to full automation. If you visit agent marketplaces like Agent.ai or SwarmZero.ai, you'll see on the order of hundreds of agents available to handle what are largely small, mundane, and repetitive tasks. There are similar domain agent marketplaces on OpenAI's site, Anthropic's, GitHub, Hugging Face, and more. Let's go along with the current norm and define "assistants" as gaggles of agents loosely collaborating to accomplish more complex tasks, perhaps as part of a hybrid AI-human team or for some cases ultimately on behalf of the entire organization, and yet, still not requiring full-on AGI. (Consider what just one techno-savvy entrepreneur with a diverse collection of AI auto-orgs might do.) The missing elements are reliable agent accuracy, which yields trust, and the hardware and power to run it all. Trust, unfortunately in the near term, may play second fiddle to profit, as the AI snake oil is sold to companies and governments and ultimately end users, most of whom barely understand it. In fact, the scientists themselves barely understand it. The deep learning networks that power today's LLMs are generally black boxes, layers upon layers of neural networks, numeric weights and matrix computations, where its pretty difficult to tell where any given word, image fragment, or concept is held in the vast space of the model, and how with various feed-forward and back-propagation processes in the network it is used in computing responses. A GPT model formed by combining successive attention and neural net layers. Input comes in at the left, and its black boxes all the way down.[15]Â Â Â  Black box or not, as Sam Altman says, deep learning just works.[16] Sort of - AGI is unlikely without strong ontological and reasoning abilities and a tactile understanding of the physical world.[17] And deep learning itself is not without its problems. If the training data is biased, so will be the results. Trainers have to be alert to overfitting the model to the training data in a way that makes the model ineffective on new data. And implementors need better tools which help introspect and observe the model to provide verification, to illuminate the black box. Until then, any technology which cannot be understood is indistinguishable from magic. Hell-o Operator AI is a broad term, encompassing many technologies, machine learning being just one of them, and deep learning based on neural networks being an even further niche. In many ways, given the black box nature of the solution, AI has become a substitute word for "automation", and/or "program", or "algorithm". And the ill-defined AI landscape is moving fast. Twelve months ago the buzz was about the emergence of the "prompt engineer" role in lieu of computer programmers, and today, not so much. Instead we now have thin but actionable (i.e. product-oriented) definitions like "agent" and "assistant" and a new suite of tools and cute icons to put on enterprise architecture diagrams. This is not to even mention the human and organizational impact of new agent-based workflows characterized by iterative, non-waterfall business processes - not something well understood or appreciated outside of software engineering circles. In this turbulent time, with vendors leapfrogging each other's capabilities and performance, there is no and cannot be any real standardization, no agreed abstractions on which to base a unifying orchestration layer. Move fast and break things, fix them later if they live long enough. Let the prototype knowingly become the short-lived product, and iterate, maybe. Think: sqrt of web time. Think: ChatGPT + IFTTT.[18] That is not an enterprise IT solution, nor one manageable for most individuals. That is a fine mess. Thankfully, we'll soon have AI assistants to fix it for us.Â  - andyÂ (linkedin: andygallojr)References[1] https://www.datacenterdynamics.com/en/news/aws-acquires-talens-nuclear-data-center-campus-in-pennsylvania/[2] https://www.datacenterdynamics.com/en/news/three-mile-island-nuclear-power-plant-to-return-as-microsoft-signs-20-year-835mw-ai-data-center-ppa/ Readers unfamiliar with the nuclear accident at Three Mile Island in 1979 can read the summary here:Â https://en.wikipedia.org/wiki/Three_Mile_Island_accident [3] https://finance.yahoo.com/news/nvidia-stocks-correction-accelerated-since-020804144.html[4] https://www.smbom.com/news/14253[5] Gartner Hype Cycle for Emerging Technologies, August 2024, https://emt.gartnerweb.com/ngw/globalassets/en/newsroom/images/graphs/august_2024_ethc.png[6] "The Computational Limits of Deep Learning", https://arxiv.org/pdf/2007.05558[7] Sam Altman on X: "there is no wall", https://x.com/sama/status/1856941766915641580 [8] Surfing the Singularity blog, https://surfthesing.blogspot.com/2024/12/surfing-singularity-coming-wave-book.html [9]Â "The Coming Wave",Â M. Suleyman, Crown Pub., 2023[10] https://www.theneurondaily.com/p/openais-leaked-agi-roadmap[11] 12 Days of OpenAI, Day 12: https://www.youtube.com/watch?v=SKBG1sqdyIUÂ [12] "AI Snake Oil", Narayanan &amp; Kapoor, Princeton U. Press, 2024[13] https://www.salesforce.com/news/stories/einstein-sales-agents-announcement[14] https://www.servicenow.com/standard/resource-center/data-sheet/ds-virtual-agent.html[15]Â https://miro.medium.com/v2/0*-8c-MXmNvcvTLdHH.png We recommend the following video for those not familiar with this architecture:Â  https://youtu.be/KJtZARuO3JY?si=Muq2xRdSTaa9LMXb[16] https://ia.samaltman.com/[17] Yann LeCun on Lex Fridman podcast, https://www.youtube.com/watch?v=5t1vTLU7s40[18] https://ifttt.com/chatgpt]]></summary></entry><entry><title type="html">Surfing the Singularity - âThe Coming Waveâ (a book report)</title><link href="https://hpc.social/personal-blog/2024/surfing-the-singularity-the-coming-wave-a-book-report/" rel="alternate" type="text/html" title="Surfing the Singularity - âThe Coming Waveâ (a book report)" /><published>2024-12-18T17:00:00-07:00</published><updated>2024-12-18T17:00:00-07:00</updated><id>https://hpc.social/personal-blog/2024/surfing-the-singularity-the-coming-wave-a-book-report-</id><content type="html" xml:base="https://hpc.social/personal-blog/2024/surfing-the-singularity-the-coming-wave-a-book-report/"><![CDATA[<p><span style="font-family: verdana;">Mustapha Suleyman knows a thing or two about AI.Â  Originally co-founder of DeepMind, a company and IP eventually acquired by Google, Mr. Suleyman is now CEO of AI at Microsoft. In this latest "Surfing the Singularity" blog installment, we'll review his recent book "The Coming Wave". Hang ten!</span></p>
<p><span style="font-family: verdana;"><br /></span></p>
<p><span style="font-family: verdana; font-size: x-large;">Go Where You Wanna Go</span></p>
<p><span style="font-family: verdana;">As a game, Go is notorious for its huge array of potential moves, exponentially more complex than chess for example, where computer models beat the best chess player way back in 1997. In 2016, DeepMind's model AlphaGo beat the best Go player in world after being trained the better part of a year with reinforced machine learning on a data set of human Go games and computer-vs-computer play. The following year, DeepMind's AlphaZero exceeded that performance in just a few days of training computation without ever being shown a single Go game, just having been described the rules of the game.[1]Â  Â </span></p>
<p><span style="font-family: verdana;"></span></p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p><br />&lt;div style="text-align: center;"&gt;Alas, born at the wrong time.&lt;/div&gt;</p>
<p></p>
<p><span style="font-family: verdana;">In his Bill Gates-recommended [2] book "The Coming Wave", Mr. Suleyman's dystopian thesis is this: that the combination of AI, synthetic biology, and a host of other general purpose technologies such as robotics and additive manufacturing will combine into a major technological wave which will wash over the human race and alter it in unprecedented ways. Much as in past waves - the harnessing of fire, the wheel, the printing press, the combustion engine - each set off dramatic and often cataclysmic societal change the likes of which was certainly not obvious or expected by the "engineers" which developed the tooling. Call it the "rule of unintended consequences". The author supposes there have been about two dozen such waves over human history, and as expected in these times, the rate of arrival of transformational technologies is accelerating.</span></p>
<p><span style="font-family: verdana;">Take the printing press. Originally in 1440 there is but one device, the lab prototype. Fifty years later there are 1,000 printing presses in Europe. From producing just a few thousand hand-copied manuscripts a year, the bookmakers now produced millions. Demand for books soars, cost per unit drops, adoption deepens. What was the impact of this new information proliferation in the society? As Suleyman writes: "Gutenberg just wanted to make money printing Bibles. Yet his press catalyzed the Scientific Revolution and the Reformation, and so became the greatest threat to the Catholic Church since its establishment." And in spite of the efforts of certain Byzantine lords to control the press, proliferation of the technology was and is the default, driven by FOMO, at least.</span></p>
<p><span style="font-family: verdana;"><br /></span></p>
<p><span style="font-family: verdana; font-size: x-large;">Straight Outta Coruscant</span></p>
<p><span style="font-family: verdana;">The mass-scale rollout of AI is already underway, hand-in-hand with surveillance devices at the edge, high speed networking, nearly bottomless storage, and high performance computing on demand to make sense of it all. All so "The Algorithm" can feed you tailored news (and ads) with your morning coffee. And more, much more. Large Language Models (LLMs), trained on the corpus of human written and other creative output can now generate helpful suggestions in a variety of useful contexts (such as blog writing). And as I wrote about in my last blog [3], LLMs are useful code assistants too, although here current state of the art is about a 50% success rate on senior-level software development tasks. So yes, there is room to grow, but in line with the acceleration of the rate of change, we expect that gap to be closed in short time.</span></p>
<p><span style="font-family: verdana;">What then? A whole host of human-centric but generally rule-oriented tasks - think: back-office work in the finance and insurance industry - will become fair game for AI augmentation, meaning, human replacement. We see the rise of autonomous vehicles - think: bus and cab drivers, mail and package delivery, pilots. Air traffic controllers. Call centers. Medical radiology readers. Not one of these applications requires a super "artificial general intelligence" (AGI), simply a good model tailored to a specific task set, aka "artificial capable intelligence" (ACI). This is nearly all line-of-sight to market.</span></p>
<p><span style="font-family: verdana;">What then is not here now? The author spends a good amount of time discussing the rise and impact of artificial and synthetic biology, CRISPR gene hacking and the like. Not being personally equipped to analyze such biotechnologies, I'm simply going to leave that one to the reader, suggest its some heady stuff, but otherwise stay in the domain of the electro-mechanical. But even with this scope limitation, what is the wider wave?</span></p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p><span style="font-family: verdana;">&lt;p&gt;<span style="font-family: verdana;"><br /></span>&lt;/p&gt;
Consider the rise of the bots, farm bots. GPS-guided autonomous tractors (already a thing).</span><span style="font-family: verdana;">[4]</span><span style="font-family: verdana;">Â These robots donât look like C3PO tending the moisture reapers on Tatooine - these robots look like farm equipment and are painted John Deere green. Amazon and Walmart distribution warehouses are already highly automated - combined with autonomous vehicles and AI-driven back-office work, how many employees do we think Amazon will need in 2 years? In 5 years? They currently employ 1.5 million people and reduced headcount 5% in the last 2 years while growing revenues over 20%.[5]</span>&lt;p&gt;&lt;/p&gt;</p>
<p><span style="font-family: verdana;"><br /></span></p>
<p><span style="font-family: verdana;"><span style="font-size: x-large;">Mind the Gap</span></span></p>
<p><span style="font-family: verdana;">And while your local Joe the Plumber [6] may continue to have a job visiting homes for some time to come, the use of single-task robotic automation in construction, especially new commercial construction, and property maintenance is on the rise. Concrete and paint-spraying robots. High rise window washers. Roofers, and general laborers to move material around a job site - bots - flying, floating, swimming, walking, drilling, boring bots. And more factory bots too, using traditional and additive techniques, to print their own parts. Bots that make bots. And an unemployment office at the Department of Labor run by AI.[7]</span></p>
<p><span style="font-family: verdana;">What about joining up with Uncle Sam, see the world, serve your country? Drone warfare in Ukraine has shown the folly of the massing of expensively equipped troops, and in the Red Sea the risks associated with large and high priced floating projections of power. Hypersonic weapons, beyond the capabilities of a human in-the-loop system to thwart. The result is asymmetric bot-on-bot warfare, beyond the battlefield, beyond borders. What are we to do with legions of technically unemployed, if they are not even useful for cannon fodder? And what are we to do with the State, if it cannot provide a system which benefits the population, which can keep it protected from proliferating technological threats? With information, wealth, and power centralized in the hands of a self-selected few, is it pitchforks and torches to the barricades then?[8]</span></p>
<p><span style="font-family: verdana;"></span></p>
<div class="separator" style="clear: both; text-align: center;"><span style="font-family: verdana;"></span></div>
<p></p>
<p><span style="font-family: verdana;">While its clear and no surprise the coming wave will benefit those with technical and financial authority, there is a chance of a boomerang effect which will result in forces in the opposite direction. The tooling, including the availability of sophisticated AI models and the means to run them, is being democratized. While increasing in capability, the cost of military-grade drones has decreased orders of magnitude in the last decade.[9] Rabble-rousing AI deepfakes proliferate. As Mr. Suleyman says, "anyone motivated to sow instability now has an easier time of it", not just state actors, agents, or oligarchs, but anyone with a few thousand dollars and an axe to grind. And considering the examples from recent 21st century past, if a rogue actor were to leverage the technology for nefarious purposes (think: 9/11 and the Patriot Act), there would surely be immediate call by the population for protection, likely but perhaps not exclusively by the State, backed by pervasive security surveillance. And this time, the means to fully execute on that wish exists.Â </span></p>
<p><span style="font-family: verdana;"><br /></span></p>
<p><span style="font-family: verdana;"><span style="font-size: x-large;">The China Syndrome</span></span></p>
<p><span style="font-family: verdana;"><span style="font-size: x-large;"></span></span></p>
<div class="separator" style="clear: both; text-align: center;"><span style="font-size: x-large;"></span></div>
<p><span style="font-family: verdana;">&lt;p style="text-align: center;"&gt;<span style="font-family: verdana;">â</span><span color="rgba(0, 0, 0, 0.87)" face="Roboto, Helvetica, Arial, sans-serif" style="background-color: white; font-size: 16px; letter-spacing: 0.5px;">The system works! Thatâs not the problem!â</span>&lt;/p&gt;
</span><span style="font-family: verdana;">&lt;div style="text-align: left;"&gt;It is a coming wave of contradictions and competing forces, and it sounds disruptive and quite unpleasant to say the least, perhaps even a human catastrophe. And besides avoiding the topic of bioengineering, we also havenât yet discussed what happens when we actually do get to superhuman generalized AI - weâre still talking here about relatively dumb AI with human actors in charge, in theory.&lt;/div&gt;
</span>&lt;p&gt;&lt;/p&gt;</p>
<p><span style="font-family: verdana;">The author Mr. Suleyman concludes that the containment of this new technology - this artificial intelligence backed by autonomous mobility - a containment which has rarely if ever been possible (nukes being maybe the sole exception), must be done successfully, and urgently. Its a good sentiment, albeit one which may be too optimistic, even blindly. Can the march of this autonomous AI "progress" with its obvious and as yet to be seen additional consequences be stopped? I would argue, and the author would likely in the final analysis have to admit, that it cannot.</span></p>
<p><span style="font-family: verdana;">What to do about it? Maybe we should give serious thought to the existential question of what it actually means to be human.[10] Or, alternatively, as Timothy Leary said...[11]</span></p>
<p><span style="font-family: verdana;">Until next time.Â Â </span><span style="font-family: verdana;">- andy</span></p>
<p><span style="font-family: verdana;"><br /></span></p>
<p><br /></p>
<p><span style="font-family: verdana; font-size: x-large;">References &amp; Amusements</span></p>
<p><span style="font-family: verdana;">[1] "The Coming Wave",Â </span><span style="font-family: verdana;">Mustapha Suleyman, Crown Pub., 2023</span></p>
<p><span style="font-family: verdana;">[2] Bill Gates blog,Â https://www.gatesnotes.com/holiday-books-2024</span></p>
<p><span style="font-family: verdana;">[3] "Surfing the Singularity: Super Grover!",Â </span><span style="font-family: verdana;">https://surfthesing.blogspot.com/2024/12/surfing-singularity-super-grover.html</span></p>
<p><span style="font-family: verdana;">[4] "John Deere Robot Planter"</span><span style="color: #020203;"><span style="font-family: verdana;">,Â </span></span><span style="font-family: verdana;">https://www.cnet.com/tech/john-deere-robot-planter-the-future-of-farming-looks-like-fewer-chemicals/</span></p>
<p><span style="font-family: verdana;">[5]Â https://www.statista.com/statistics/234488/number-of-amazon-employees/ andÂ https://www.statista.com/statistics/266282/annual-net-revenue-of-amazoncom/</span></p>
<p><span style="font-family: verdana;">[6] https://www.nytimes.com/2023/08/28/us/politics/samuel-wurzelbacher-joe-the-plumber-dead.html</span></p>
<p><span style="font-family: verdana;">[7]Â https://www.dol.gov/agencies/oasam/centers-offices/ocio/ai-inventory</span></p>
<p><span style="font-family: verdana;">[8]Â https://www.stlouisfed.org/community-development-research/the-state-of-us-wealth-inequality</span></p>
<p><span style="font-family: verdana;">[9]Â https://www.technologyreview.com/2023/01/30/1067348/mass-market-military-drones-have-changed-the-way-wars-are-fought/</span></p>
<p><span style="font-family: verdana;">[10]Â https://www.organism.earth/library/document/unapologetically-human</span></p>
<p><span style="font-family: verdana;">[11]Â https://www.youtube.com/watch?v=IPSzTBP5PAU</span></p>
<p><span style="font-family: verdana;"><br /></span></p>
<p><br /></p>]]></content><author><name>Surfing the Singularity</name></author><category term="surfthesing" /><summary type="html"><![CDATA[Mustapha Suleyman knows a thing or two about AI.Â  Originally co-founder of DeepMind, a company and IP eventually acquired by Google, Mr. Suleyman is now CEO of AI at Microsoft. In this latest "Surfing the Singularity" blog installment, we'll review his recent book "The Coming Wave". Hang ten! Go Where You Wanna Go As a game, Go is notorious for its huge array of potential moves, exponentially more complex than chess for example, where computer models beat the best chess player way back in 1997. In 2016, DeepMind's model AlphaGo beat the best Go player in world after being trained the better part of a year with reinforced machine learning on a data set of human Go games and computer-vs-computer play. The following year, DeepMind's AlphaZero exceeded that performance in just a few days of training computation without ever being shown a single Go game, just having been described the rules of the game.[1]Â  Â  &lt;div style="text-align: center;"&gt;Alas, born at the wrong time.&lt;/div&gt; In his Bill Gates-recommended [2] book "The Coming Wave", Mr. Suleyman's dystopian thesis is this: that the combination of AI, synthetic biology, and a host of other general purpose technologies such as robotics and additive manufacturing will combine into a major technological wave which will wash over the human race and alter it in unprecedented ways. Much as in past waves - the harnessing of fire, the wheel, the printing press, the combustion engine - each set off dramatic and often cataclysmic societal change the likes of which was certainly not obvious or expected by the "engineers" which developed the tooling. Call it the "rule of unintended consequences". The author supposes there have been about two dozen such waves over human history, and as expected in these times, the rate of arrival of transformational technologies is accelerating. Take the printing press. Originally in 1440 there is but one device, the lab prototype. Fifty years later there are 1,000 printing presses in Europe. From producing just a few thousand hand-copied manuscripts a year, the bookmakers now produced millions. Demand for books soars, cost per unit drops, adoption deepens. What was the impact of this new information proliferation in the society? As Suleyman writes: "Gutenberg just wanted to make money printing Bibles. Yet his press catalyzed the Scientific Revolution and the Reformation, and so became the greatest threat to the Catholic Church since its establishment." And in spite of the efforts of certain Byzantine lords to control the press, proliferation of the technology was and is the default, driven by FOMO, at least. Straight Outta Coruscant The mass-scale rollout of AI is already underway, hand-in-hand with surveillance devices at the edge, high speed networking, nearly bottomless storage, and high performance computing on demand to make sense of it all. All so "The Algorithm" can feed you tailored news (and ads) with your morning coffee. And more, much more. Large Language Models (LLMs), trained on the corpus of human written and other creative output can now generate helpful suggestions in a variety of useful contexts (such as blog writing). And as I wrote about in my last blog [3], LLMs are useful code assistants too, although here current state of the art is about a 50% success rate on senior-level software development tasks. So yes, there is room to grow, but in line with the acceleration of the rate of change, we expect that gap to be closed in short time. What then? A whole host of human-centric but generally rule-oriented tasks - think: back-office work in the finance and insurance industry - will become fair game for AI augmentation, meaning, human replacement. We see the rise of autonomous vehicles - think: bus and cab drivers, mail and package delivery, pilots. Air traffic controllers. Call centers. Medical radiology readers. Not one of these applications requires a super "artificial general intelligence" (AGI), simply a good model tailored to a specific task set, aka "artificial capable intelligence" (ACI). This is nearly all line-of-sight to market. What then is not here now? The author spends a good amount of time discussing the rise and impact of artificial and synthetic biology, CRISPR gene hacking and the like. Not being personally equipped to analyze such biotechnologies, I'm simply going to leave that one to the reader, suggest its some heady stuff, but otherwise stay in the domain of the electro-mechanical. But even with this scope limitation, what is the wider wave? &lt;p&gt;&lt;/p&gt; Consider the rise of the bots, farm bots. GPS-guided autonomous tractors (already a thing).[4]Â These robots donât look like C3PO tending the moisture reapers on Tatooine - these robots look like farm equipment and are painted John Deere green. Amazon and Walmart distribution warehouses are already highly automated - combined with autonomous vehicles and AI-driven back-office work, how many employees do we think Amazon will need in 2 years? In 5 years? They currently employ 1.5 million people and reduced headcount 5% in the last 2 years while growing revenues over 20%.[5]&lt;p&gt;&lt;/p&gt; Mind the Gap And while your local Joe the Plumber [6] may continue to have a job visiting homes for some time to come, the use of single-task robotic automation in construction, especially new commercial construction, and property maintenance is on the rise. Concrete and paint-spraying robots. High rise window washers. Roofers, and general laborers to move material around a job site - bots - flying, floating, swimming, walking, drilling, boring bots. And more factory bots too, using traditional and additive techniques, to print their own parts. Bots that make bots. And an unemployment office at the Department of Labor run by AI.[7] What about joining up with Uncle Sam, see the world, serve your country? Drone warfare in Ukraine has shown the folly of the massing of expensively equipped troops, and in the Red Sea the risks associated with large and high priced floating projections of power. Hypersonic weapons, beyond the capabilities of a human in-the-loop system to thwart. The result is asymmetric bot-on-bot warfare, beyond the battlefield, beyond borders. What are we to do with legions of technically unemployed, if they are not even useful for cannon fodder? And what are we to do with the State, if it cannot provide a system which benefits the population, which can keep it protected from proliferating technological threats? With information, wealth, and power centralized in the hands of a self-selected few, is it pitchforks and torches to the barricades then?[8] While its clear and no surprise the coming wave will benefit those with technical and financial authority, there is a chance of a boomerang effect which will result in forces in the opposite direction. The tooling, including the availability of sophisticated AI models and the means to run them, is being democratized. While increasing in capability, the cost of military-grade drones has decreased orders of magnitude in the last decade.[9] Rabble-rousing AI deepfakes proliferate. As Mr. Suleyman says, "anyone motivated to sow instability now has an easier time of it", not just state actors, agents, or oligarchs, but anyone with a few thousand dollars and an axe to grind. And considering the examples from recent 21st century past, if a rogue actor were to leverage the technology for nefarious purposes (think: 9/11 and the Patriot Act), there would surely be immediate call by the population for protection, likely but perhaps not exclusively by the State, backed by pervasive security surveillance. And this time, the means to fully execute on that wish exists.Â  The China Syndrome &lt;p style="text-align: center;"&gt;âThe system works! Thatâs not the problem!â&lt;/p&gt; &lt;div style="text-align: left;"&gt;It is a coming wave of contradictions and competing forces, and it sounds disruptive and quite unpleasant to say the least, perhaps even a human catastrophe. And besides avoiding the topic of bioengineering, we also havenât yet discussed what happens when we actually do get to superhuman generalized AI - weâre still talking here about relatively dumb AI with human actors in charge, in theory.&lt;/div&gt; &lt;p&gt;&lt;/p&gt; The author Mr. Suleyman concludes that the containment of this new technology - this artificial intelligence backed by autonomous mobility - a containment which has rarely if ever been possible (nukes being maybe the sole exception), must be done successfully, and urgently. Its a good sentiment, albeit one which may be too optimistic, even blindly. Can the march of this autonomous AI "progress" with its obvious and as yet to be seen additional consequences be stopped? I would argue, and the author would likely in the final analysis have to admit, that it cannot. What to do about it? Maybe we should give serious thought to the existential question of what it actually means to be human.[10] Or, alternatively, as Timothy Leary said...[11] Until next time.Â Â - andy References &amp; Amusements [1] "The Coming Wave",Â Mustapha Suleyman, Crown Pub., 2023 [2] Bill Gates blog,Â https://www.gatesnotes.com/holiday-books-2024 [3] "Surfing the Singularity: Super Grover!",Â https://surfthesing.blogspot.com/2024/12/surfing-singularity-super-grover.html [4] "John Deere Robot Planter",Â https://www.cnet.com/tech/john-deere-robot-planter-the-future-of-farming-looks-like-fewer-chemicals/ [5]Â https://www.statista.com/statistics/234488/number-of-amazon-employees/ andÂ https://www.statista.com/statistics/266282/annual-net-revenue-of-amazoncom/ [6] https://www.nytimes.com/2023/08/28/us/politics/samuel-wurzelbacher-joe-the-plumber-dead.html [7]Â https://www.dol.gov/agencies/oasam/centers-offices/ocio/ai-inventory [8]Â https://www.stlouisfed.org/community-development-research/the-state-of-us-wealth-inequality [9]Â https://www.technologyreview.com/2023/01/30/1067348/mass-market-military-drones-have-changed-the-way-wars-are-fought/ [10]Â https://www.organism.earth/library/document/unapologetically-human [11]Â https://www.youtube.com/watch?v=IPSzTBP5PAU]]></summary></entry><entry><title type="html">Surfing the Singularity - Super Grover!</title><link href="https://hpc.social/personal-blog/2024/surfing-the-singularity-super-grover/" rel="alternate" type="text/html" title="Surfing the Singularity - Super Grover!" /><published>2024-12-07T17:00:00-07:00</published><updated>2024-12-07T17:00:00-07:00</updated><id>https://hpc.social/personal-blog/2024/surfing-the-singularity-super-grover-</id><content type="html" xml:base="https://hpc.social/personal-blog/2024/surfing-the-singularity-super-grover/"><![CDATA[<header class="pt4"><p style="line-height: 1.2; text-align: left;"><span style="font-weight: normal;"><span style="font-family: verdana;"><span color="rgba(255, 255, 255, 0.9)" face="-apple-system, system-ui, &quot;system-ui&quot;, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, &quot;Fira Sans&quot;, Ubuntu, Oxygen, &quot;Oxygen Sans&quot;, Cantarell, &quot;Droid Sans&quot;, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Lucida Grande&quot;, Helvetica, Arial, sans-serif" style="background-color: #1b1f23; font-size: 16px;">Hello and happy holidays to all. In this blog installment I'll report back from SuperComputing 2024, offer up a programmer-friendly view of the quantum computing space with a code tour of Grover's algorithm, and share some of my own thoughts on using the latest crop of AI programmer assistant tools.</span><span class="white-space-pre" color="rgba(255, 255, 255, 0.9)" face="var(--artdeco-reset-typography-font-family-sans)"> </span></span></span></p>
</header>
<div class="relative reader__grid"><div><div><div class="reader-article-content reader-article-content--content-blocks" dir="ltr"><div class="reader-content-blocks-container" tabindex="0"><div class="reader-image-block reader-image-block--resize"><figure class="reader-image-block__figure"><div class="ivm-image-view-model"><div class="ivm-view-attr__img-wrapper"><img alt="" class="ivm-view-attr__img--centered reader-image-block__img evi-image lazy-image ember-view" id="ember869" src="https://media.licdn.com/dms/image/v2/D4E12AQEXGYm_FH40rg/article-inline_image-shrink_1500_2232/article-inline_image-shrink_1500_2232/0/1733613595470?e=1740009600&amp;v=beta&amp;t=27x_IfTeyWu00AhmowXKRB402xwRZI5SLAg3MUm9UGc" /></div>
</div>
<figcaption class="reader-image-block__figure-image-caption display-block full-width text-body-small-open t-sans text-align-center t-black--light"><span style="font-family: verdana;">(Sadly, not this Grover.)</span></figcaption></figure></div>
<p class="ember-view reader-text-block__paragraph" id="ember870"><span style="font-family: verdana;">It was a pleasant SC24 high performance computing (HPC) conference in November. Having attended in past either in-person (Atlanta this year) or virtual, this year I chose virtual again. The big loss was being unable to troll the enormous vendor hall, but otherwise, webcasts make it much easier to be in two places at one time or to skim topics of passing interest.[1]<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember871"><span style="font-family: verdana;">There's a new top HPC machine (that we know of) - El Capitan, and its powered by AMD, containing about a million CPU cores and about 10 million GPU cores.[2] Molecular dynamics papers presented using a GPU-accelerated exascale computer reminds that, quantum aside for a moment, the real work is still being done in the classical world.[3] NVIDIA showcased the growing fusion of AI and HPC with their "superchip" designs - incorporating a CPU and a GPU on the same chip.[4] And why not, the money keeps flowing, the current outgoing federal administration now locking in the CHIPS Act funding before the end of the term.[5]</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember872"><br /></p>
<div class="reader-image-block reader-image-block--full-width"><figure class="reader-image-block__figure"><div class="ivm-image-view-model"><div class="ivm-view-attr__img-wrapper"><img alt="" class="ivm-view-attr__img--centered reader-image-block__img evi-image lazy-image ember-view" id="ember873" src="https://media.licdn.com/dms/image/v2/D4E12AQE0Sq5LcwFEAQ/article-inline_image-shrink_1500_2232/article-inline_image-shrink_1500_2232/0/1733610500704?e=1740009600&amp;v=beta&amp;t=Dr2oQXKZQk3AXM8R_LhkmyXIRrnOeaejjn8q97YVy_w" /></div>
</div>
<figcaption class="reader-image-block__figure-image-caption display-block full-width text-body-small-open t-sans text-align-center t-black--light"><span style="font-family: verdana;">NVIDIA's Grace Hopper architecture [6]</span></figcaption></figure></div>
<p class="ember-view reader-text-block__paragraph" id="ember874"><span style="font-family: verdana;">But beyond the incremental improvements in compute, storage, cooling, power consumption and the like, it seemed to me, through my remote goggles, that the real action was happening on the sidelines of SC24, in the quantum computing space.</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember874"><span style="font-family: verdana;"><br /></span></p>
<h2><span style="font-family: verdana;">Quantum Chip on Shoulder<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span></span></h2><p class="ember-view reader-text-block__paragraph" id="ember876"><span style="font-family: verdana;">There's significant skepticism of quantum computing from the HPC community at the moment. Quantum computers today are toys in comparison to HPC, and stakeholders in HPC and classical computing (which would include myself) might wonder aloud "what's the point?" For some applications (like the fluid dynamics apps my company uses), quantum utility is perhaps still a decade away.[7]<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember877"><span style="font-family: verdana;">But the groundwork is being laid today, and when we understand that there are useful problems which can be solved on quantum computers, and only on quantum computers, we might at least allow the playing to continue. And we might be surprised at how fast quantum computing is progressing, and also just churning. Even those in the industry are hedging their bets - on which qubit technologies and which companies will be the winners - and as such are changing partners on a regular basis [8,9,10], although this sometimes means needing to unproductively reinvent the wheel (how many Python quantum circuit libraries do we need?)[11]</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember878"><span style="font-family: verdana;">A couple of new announcements from Big Blue caught my eye. First, an early demonstrator of incorporating an IBM quantum computer into an HPC data center, unifying the resource scheduling, was shown at RPI with their AiMOS cluster and their first-in-the-nation academic installation.[12] The second, and more important, was the paper in Nature demonstrating the union of two quantum computers via classical networks, providing another avenue for scaling up hybrid quantum computing.[13]<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember879"><span style="font-family: verdana;">But today's QPUs are still noisy, fragile, small, expensive, and scarce. Maturity is still a ways off. QPUs are not fungible - to be successful in executing an application on a quantum computer, we must understand the error profile of that specific device! Not just that brand of quantum computer product, but this instance of that product! We need hands-on examples to grow the personal and team experience with quantum while we await stabilized hardware and the productivity-enabling software abstractions which can only come after industry maturity, and these early (head-butting) experiences.<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember879"><span style="font-family: verdana;"><span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"><br /></span></span></p>
<h2><span style="font-family: verdana;">Making Your Quantum Bones</span></h2><p class="ember-view reader-text-block__paragraph" id="ember881"><span style="font-family: verdana;">Today's education in and around quantum computing is still focused on the experimental audience. We are still doing experiments about quantum more than experiments with quantum. The educational material which does exist, and there is an increasing amount, is focused on a community which is very comfortable with quantum physics and its associated mathematics. Most people, myself included, do not fit this description. As a computer science graduate, adjunct prof, and software engineer by trade, I want to see higher level programming abstractions, not those centered around qubits and gates which clearly does not scale for large programs. We will be waiting a while. So in the meantime, we need to see some examples using today's technology and syntax but which are more suited for the Comp Sci student audience, to help begin to bridge that gap.<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember882"><span style="font-family: verdana;">If we visit the Algorithm Zoo [14], a collection of quantum algorithms which show a computational advantage over similar classical approaches, we find some things (but not many) which might look familiar to a CS undergrad, but the implementations, when they exist, are often broken. In this current early phase of the quantum era, vendors are playing free and loose with their SDKs, and releases with significant object model refactorings and breaking changes are the norm.<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember883"><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://github.com/agallojr/research-notes/blob/02253900f33d784402f0cd0b3ed4d9d360544605/quantum/src/qiskit/pattern_match.py" target="_self"><span style="font-family: verdana;">pattern_match.py</span></a></p>
<p class="ember-view reader-text-block__paragraph" id="ember884"><span style="font-family: verdana;">So I offer here an example of a quantum program which itself likely has a short shelf life. You can find it here.[15, &amp; above] It shows a cooked up example of using Grover's algorithm, which is a quantum algorithm for search in unstructured (e.g. unsorted) data. Classically, "cuz Murphy's Law", you might need to walk the entire dataset to find the item of interest (or show its not there) - we call this an O(n) algorithm. Using Grover's algorithm, you can do the search with a strong probability of success in O(sqrt(n)) time - a quadratic speedup, and one worth pursuing for many applications. Note we are only saying we can perform the search with high probability - this is quantum computing, and everything is a probability. And while the example shown isn't necessarily the most common application of Grover, understanding Grover is worthwhile, as it appears as a sub-procedure in many other quantum algorithms.</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember885"><span style="font-family: verdana;">Here are a few key points to take away, even if you don't take the time to look at the documented code example:</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember886"></p>
<ul><li><span style="font-family: verdana;">We're going to store a small set of strings - binary strings of 1's and 0's representing a small dataset - into a quantum system of qubits.<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span></span></li><li><span style="font-family: verdana;">Since our strings are chosen to be 16 binary digits long, we will use 16 qubits. This is a large enough number of qubits to show some non-trivial problems, but not so many as to not be runnable on a simulator on your laptop. (The performance does not scale linearly with the number of qubits.)</span></li><li><span style="font-family: verdana;">A system of n qubits contains 2**n possible states (combinations of 0's and 1's). That's a lot. We will have far fewer state strings in our dataset - just a handful for this experiment.</span></li><li><span style="font-family: verdana;">After initializing the qubits, we will mark each state in the quantum system which corresponds to a binary string in our dataset. To do this we will use the phase of the qubit, which is an extra useful lever you do not find in classical bits (among other unique quantum advantages).</span></li></ul><p style="color: black;"></p>
<div class="reader-image-block reader-image-block--full-width"><figure class="reader-image-block__figure"><div class="ivm-image-view-model"><div class="ivm-view-attr__img-wrapper"><img alt="" class="ivm-view-attr__img--centered reader-image-block__img evi-image lazy-image ember-view" id="ember887" src="https://media.licdn.com/dms/image/v2/D4E12AQH3qvl7gip82A/article-inline_image-shrink_1500_2232/article-inline_image-shrink_1500_2232/0/1733610781858?e=1740009600&amp;v=beta&amp;t=5rAwLjF3EHyEDVvd1GHOAO65F-dKDYWy8gCvJ27vCF4" /></div>
</div>
<figcaption class="reader-image-block__figure-image-caption display-block full-width text-body-small-open t-sans text-align-center t-black--light"><span style="font-family: verdana;">Three qubits in superposition.[16]</span></figcaption></figure></div>
<div class="reader-image-block reader-image-block--full-width"><figure class="reader-image-block__figure"><div class="ivm-image-view-model"><div class="ivm-view-attr__img-wrapper"><img alt="" class="ivm-view-attr__img--centered reader-image-block__img evi-image lazy-image ember-view" id="ember888" src="https://media.licdn.com/dms/image/v2/D4E12AQGrCHC-cx2zUg/article-inline_image-shrink_1500_2232/article-inline_image-shrink_1500_2232/0/1733610877320?e=1740009600&amp;v=beta&amp;t=lHNGjay8jH78KrwCl9WJwEIHqXuIj4LIX6gviS9nVSM" /></div>
</div>
<figcaption class="reader-image-block__figure-image-caption display-block full-width text-body-small-open t-sans text-align-center t-black--light"><span style="font-family: verdana;">Marking one of the states by flipping its phase.[16]</span></figcaption></figure></div>
<p class="ember-view reader-text-block__paragraph" id="ember889"></p>
<ul><li><span style="font-family: verdana;">Using Grover's algorithm, we will amplify the probability of finding the marked states relative to other background states. I.e., the signal is separated from the noise. To do this we iteratively apply an oracle quantum circuit to the initial system.</span></li></ul><p style="color: black;"></p>
<div class="reader-image-block reader-image-block--full-width"><figure class="reader-image-block__figure"><div class="ivm-image-view-model"><div class="ivm-view-attr__img-wrapper"><img alt="" class="ivm-view-attr__img--centered reader-image-block__img evi-image lazy-image ember-view" id="ember890" src="https://media.licdn.com/dms/image/v2/D4E12AQHu1UQVg1dbqQ/article-inline_image-shrink_1500_2232/article-inline_image-shrink_1500_2232/0/1733610938287?e=1740009600&amp;v=beta&amp;t=-vmo3-9uS3FY-kCQiudQ-Ui0eEUyxl0Ao7k45IwSOMg" /></div>
</div>
<figcaption class="reader-image-block__figure-image-caption display-block full-width text-body-small-open t-sans text-align-center t-black--light"><span style="font-family: verdana;">The states, with our target amplified, after some number of iterations of Grover's algorithm.[16]</span></figcaption></figure></div>
<p class="ember-view reader-text-block__paragraph" id="ember891"></p>
<ul><li><span style="font-family: verdana;">Note that we use the same 16 qubits to encode all of the 16-digit strings in the dataset. Try that with a classical computer!</span></li><li><span style="font-family: verdana;">We then use Grover's algorithm again using a target string, applying the oracle against the now prepared quantum system, and returning the result that the target either is or is not in the dataset.</span></li></ul><p style="color: black;"></p>
<p class="ember-view reader-text-block__paragraph" id="ember892"><span style="font-family: verdana;">Hopefully this gives some flavor of what its like to program a quantum computer using an example most classical programmers today can understand. There are places where the code can potentially be improved - I welcome your input in the comments section below.</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember892"><span style="font-family: verdana;"><br /></span></p>
<h2><span style="font-family: verdana;">AI AI, Oh.<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span></span></h2><p class="ember-view reader-text-block__paragraph" id="ember894"><span style="font-family: verdana;">During these quantum coding explorations, during other coding work, and while writing documents (like this one), I've also been experimenting with a sequence of so-called "AI assistants". Starting with Copilot as a plugin for the popular VS Code IDE, I quickly switched to the Codeium plugin which performed better for my purposes, mostly because it took more of my code into context while making suggestions.[17] Since, the various vendors have leap-frogged each other in features and quality of results, and so while this tool comparison may be stale, its also the case that any new comparison would soon itself become stale.<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember895"><span style="font-family: verdana;">While the VS Code IDE provides hooks for plugins, some vendors, most notably Cursor [18] took the approach that to provide a true AI assistant (AIA) for a modern software developer you needed plugin hooks in many places, and control over things like the rendering of change sets. So they forked the VS Code IDE entirely. And they weren't the only ones to do this - Codeium now also has its own IDE called Windsurf - this is what I'm currently using. This can't be end state for the discussion and more leap-frogging is expected, so watch this space. I've now seen cases where people are putting "Cursor" on their resume - not a good idea to commit to that, but it is a good idea to start using one of these modern tools in your work, and to better understand how to adopt your work practices in light of their potential.</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember896"><span style="font-family: verdana;">In other words, to experiment while these AIA tools improve. The head of Anthropic, a major AI player and the maker of the model driving my current IDE, is proud to say their model reaches 50% success rates on a popular software engineering metric.[19,20] Do<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><span face="var(--artdeco-reset-typography-font-family-sans)">you</span><span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span>want to pair program with an assistant which is only right 50% of the time? I can tell you that its got its ups and downs.</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember897"><span style="font-family: verdana;">On the positive, for mundane tasks, it can do a pretty good job. Questions like "how do you do X in Python?" which you might have previously taken to Stack Overflow can now be answered in the IDE with custom-made code samples. You can turn your question into an instruction:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span></span></p>
<blockquote class="ember-view reader-text-block__blockquote" id="ember898"><span style="color: #b6d7a8; font-family: courier;"><span face="var(--artdeco-reset-typography-font-family-sans)">Me</span>: modify this code to take the target string as a command line argument and default to the current target string if none is provided</span></blockquote><blockquote class="ember-view reader-text-block__blockquote" id="ember899"><span style="color: #cc0000; font-family: courier;"><span face="var(--artdeco-reset-typography-font-family-sans)">AIA</span>: I've modified the code to...</span></blockquote><p class="ember-view reader-text-block__paragraph" id="ember900"><span style="font-family: verdana;">And it will describe in words and code a working solution, albeit in my case one I found to be slightly over-engineered:</span></p>
<blockquote class="ember-view reader-text-block__blockquote" id="ember901"><span style="color: #b6d7a8; font-family: courier;"><span face="var(--artdeco-reset-typography-font-family-sans)">Me</span>: use sys to determine if a single arg was provided</span></blockquote><blockquote class="ember-view reader-text-block__blockquote" id="ember902"><span style="color: #cc0000; font-family: courier;"><span face="var(--artdeco-reset-typography-font-family-sans)">AIA</span>: I'll modify the code to use sys.argv for a simpler command line argument handling...</span></blockquote><p class="ember-view reader-text-block__paragraph" id="ember903"><span style="font-family: verdana;">In another interaction, we debated if an AIA-proposed solution was mathematically efficient, at one point:</span></p>
<blockquote class="ember-view reader-text-block__blockquote" id="ember904"><span style="color: #cc0000; font-family: courier;"><span face="var(--artdeco-reset-typography-font-family-sans)">AIA</span>: Would you like me to: 1) Implement a simpler but less efficient version that demonstrates the concept? 2) Or explore how to properly implement the quantum multiplexing needed for efficient database loading?</span></blockquote><blockquote class="ember-view reader-text-block__blockquote" id="ember905"><span style="color: #b6d7a8; font-family: courier;"><span face="var(--artdeco-reset-typography-font-family-sans)">Me</span>: yes, but make it in a new file</span></blockquote><p class="ember-view reader-text-block__paragraph" id="ember906"><span style="font-family: verdana;">And it did. The main reason for asking for a new file rather than change in place was that the AIA is still often wrong! And reviewing a large amount of inline change is hard for the human eye and mind.</span></p>
<blockquote class="ember-view reader-text-block__blockquote" id="ember907"><span style="color: #b6d7a8; font-family: courier;"><span face="var(--artdeco-reset-typography-font-family-sans)">Me</span>: but now your proposed solution doesn't load the database or even look at it!</span></blockquote><blockquote class="ember-view reader-text-block__blockquote" id="ember908"><span style="color: #cc0000; font-family: courier;"><span face="var(--artdeco-reset-typography-font-family-sans)">AIA</span>: Ah, you're absolutely right again!<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span></span></blockquote><p class="ember-view reader-text-block__paragraph" id="ember909"><span style="font-family: verdana;">And it then goes on to suggest further changes, which you might wonder why those changes weren't proposed in the first place? Keep in mind, its only (proudly) right 50% of the time. It is, as we say, "generative AI" after all - it doesn't so much "hallucinate" - it is designed to make s***... I mean, "stuff" up. (The idea that this GPT-based technology such as it is would be even capable of producing generalized AI (AGI) is an open question, indeed.)</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember910"><span style="font-family: verdana;">But these tools can still be useful, not just for single-line "tab" completions, but now as we see here, in higher level conversations with the programmer. It can help articulate requirements, and write test cases, and help drive CI/CD pipelines. And it will improve in scope and accuracy, and custom AIA models tuned for specific programming domains (e.g. quantum) already exist.[21]<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember911"><span style="font-family: verdana;">This is truly the death and rebirth of computer programming, as we have come to experience it. In 1975, IBM's Fred Brooks published the seminal book "The Mythical Man-Month" which described, among other things, the software team which one would want to wrap around a senior technical engineer - a team of as many as 10 specialized professionals to handle the documentation, testing, business communications, and more common technical tasks so your senior contributor ("the surgeon") can focus on great ideas and great architecture.[22] But however, in today's DevOps culture, where we expect our senior engineers to be "full stack", to do it all, to play all roles, the AI tooling brings back some sanity and reminds that there are tasks best left delegated.</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember911"><span style="font-family: verdana;"><br /></span></p>
<h2><span style="font-family: verdana;">2025</span></h2><p class="ember-view reader-text-block__paragraph" id="ember913"><span style="font-family: verdana;">It's that time in the calendar when everyone offers up their forecasts for the coming year. I'll not wade into that. My only prediction is this - that in 2025, the rate of change in key emerging and difficult to humanly understand (nearly black-box) technologies like AI and quantum computing will continue to accelerate, in many cases, beyond our ability to comprehend or predict. This is the so-called singularity, and it's evolving and emerging during a period also marked by political, military, and economic upheaval.<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember914"><span style="font-family: verdana;">Surf's up. Happy New Year. - andy</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember915"><br /></p>
<h2><span style="font-family: verdana;">References</span></h2><p class="ember-view reader-text-block__paragraph" id="ember917"><span style="font-family: verdana;">[0] Photo by Ben Wicks on Unsplash</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember918"><span style="font-family: verdana;">[1] SC24 schedule:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://sc24.conference-program.com/" target="_self">https://sc24.conference-program.com/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember919"><span style="font-family: verdana;">[2] El Capitan hardware overview:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://hpc.llnl.gov/documentation/user-guides/using-el-capitan-systems/hardware-overview" target="_self">https://hpc.llnl.gov/documentation/user-guides/using-el-capitan-systems/hardware-overview</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember920"><span style="font-family: verdana;">[3] "Breaking the Million-Electron and 1 EFLOP/s Barriers: Biomolecular-Scale Ab Initio Molecular Dynamics Using MP2 Potentials",<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://dl.acm.org/doi/pdf/10.1109/SC41406.2024.00015" target="_self">https://dl.acm.org/doi/pdf/10.1109/SC41406.2024.00015</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember921"><span style="font-family: verdana;">[4] NVIDIA SC24 superchip press release:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.datacenterdynamics.com/en/news/nvidia-announces-new-gb200-nvl4-superchip-at-sc24-but-says-theres-still-value-to-be-found-in-grace-hopper/" target="_self">https://www.datacenterdynamics.com/en/news/nvidia-announces-new-gb200-nvl4-superchip-at-sc24-but-says-theres-still-value-to-be-found-in-grace-hopper/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember922"><span style="font-family: verdana;">[5] Tracking CHIPS Act funding:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.semiconductors.org/chips-incentives-awards/" target="_self">https://www.semiconductors.org/chips-incentives-awards/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember923"><span style="font-family: verdana;">[6] NVIDIA Grace Hopper architecture:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://developer-blogs.nvidia.com/wp-content/uploads/2022/11/grace-hopper-overview.png" target="_self">https://developer-blogs.nvidia.com/wp-content/uploads/2022/11/grace-hopper-overview.png</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember924"><span style="font-family: verdana;">[7] "Exploring quantum use cases for the aerospace industry", IBM white paper,<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.ibm.com/thought-leadership/institute-business-value/en-us/report/quantum-aerospace" target="_self">https://www.ibm.com/thought-leadership/institute-business-value/en-us/report/quantum-aerospace</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember925"><span style="font-family: verdana;">[8] IonQ with NVIDIA SC24 press release:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://ionq.com/news/ionq-to-advance-hybrid-quantum-computing-with-new-chemistry-application-and" target="_self">https://ionq.com/news/ionq-to-advance-hybrid-quantum-computing-with-new-chemistry-application-and</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember926"><span style="font-family: verdana;">[9] Microsoft and Atom quantum press releease:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://azure.microsoft.com/en-us/blog/quantum/2024/11/19/microsoft-and-atom-computing-offer-a-commercial-quantum-machine-with-the-largest-number-of-entangled-logical-qubits-on-record/" target="_self">https://azure.microsoft.com/en-us/blog/quantum/2024/11/19/microsoft-and-atom-computing-offer-a-commercial-quantum-machine-with-the-largest-number-of-entangled-logical-qubits-on-record/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember927"><span style="font-family: verdana;">[10] Alice &amp; Bob logical qubit lib press release :<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://alice-bob.com/newsroom/logical-qubit-emulator-felis-quantum-cloud-alice-bob/" target="_self">https://alice-bob.com/newsroom/logical-qubit-emulator-felis-quantum-cloud-alice-bob/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember928"><span style="font-family: verdana;">[11] Quantinuum stack press release:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.quantinuum.com/blog/announcing-the-launch-of-quantinuum-nexus-our-all-in-one-quantum-computing-platform" target="_self">https://www.quantinuum.com/blog/announcing-the-launch-of-quantinuum-nexus-our-all-in-one-quantum-computing-platform</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember929"><span style="font-family: verdana;">[12] RPI's experiments with HPC and quantum co-scheduling:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.ibm.com/quantum/blog/supercomputing-24" target="_self">https://www.ibm.com/quantum/blog/supercomputing-24</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember930"><span style="font-family: verdana;">[13] "Combining quantum processors with real-time classical communication", Nature, Nov 2024,<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.nature.com/articles/s41586-024-08178-2" target="_self">https://www.nature.com/articles/s41586-024-08178-2</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember931"><span style="font-family: verdana;">[14] Algorithm Zoo:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://quantumalgorithmzoo.org/" target="_self">https://quantumalgorithmzoo.org/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember932"><span style="font-family: verdana;">[15] Pattern match example code:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://github.com/agallojr/research-notes/blob/02253900f33d784402f0cd0b3ed4d9d360544605/quantum/src/qiskit/pattern_match.py" target="_self">https://github.com/agallojr/research-notes/blob/02253900f33d784402f0cd0b3ed4d9d360544605/quantum/src/qiskit/pattern_match.py</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember933"><span style="font-family: verdana;">[16] "QC â Groverâs algorithm", J. Hui,<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://jonathan-hui.medium.com/qc-grovers-algorithm-cd81e61cf248" target="_self">https://jonathan-hui.medium.com/qc-grovers-algorithm-cd81e61cf248</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember934"><span style="font-family: verdana;">[17] Codeium Windsurf IDE:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://codeium.com/windsurf" target="_self">https://codeium.com/windsurf</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember935"><span style="font-family: verdana;">[18] Cursor IDE:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.cursor.com/" target="_self">https://www.cursor.com/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember936"><span style="font-family: verdana;">[19] Dario Amodei, CEO Anthropic, on Lex Fridman podcast:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.youtube.com/watch?v=ugvHCXCOmm4&amp;t=20s&amp;pp=ygULbGV4IGZyaWRtYW4%3D" target="_self">https://www.youtube.com/watch?v=ugvHCXCOmm4&amp;t=20s&amp;pp=ygULbGV4IGZyaWRtYW4%3D</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember937"><span style="font-family: verdana;">[20] SWE-bench:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.swebench.com/" target="_self">https://www.swebench.com/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember938"><span style="font-family: verdana;">[21] IBM Qiskit Code Assistant:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.ibm.com/quantum/blog/qiskit-code-assistant" target="_self">https://www.ibm.com/quantum/blog/qiskit-code-assistant</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember939"><span style="font-family: verdana;">[22] "The Mythical Man-Month", Fred Brooks, 1975:<span class="white-space-pre" face="var(--artdeco-reset-typography-font-family-sans)"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://web.eecs.umich.edu/~weimerw/2018-481/readings/mythical-man-month.pdf" target="_self">https://web.eecs.umich.edu/~weimerw/2018-481/readings/mythical-man-month.pdf</a></span></p>
<br class="Apple-interchange-newline" /></div>
</div>
</div>
</div>
</div>]]></content><author><name>Surfing the Singularity</name></author><category term="surfthesing" /><summary type="html"><![CDATA[Hello and happy holidays to all. In this blog installment I'll report back from SuperComputing 2024, offer up a programmer-friendly view of the quantum computing space with a code tour of Grover's algorithm, and share some of my own thoughts on using the latest crop of AI programmer assistant tools. (Sadly, not this Grover.) It was a pleasant SC24 high performance computing (HPC) conference in November. Having attended in past either in-person (Atlanta this year) or virtual, this year I chose virtual again. The big loss was being unable to troll the enormous vendor hall, but otherwise, webcasts make it much easier to be in two places at one time or to skim topics of passing interest.[1] There's a new top HPC machine (that we know of) - El Capitan, and its powered by AMD, containing about a million CPU cores and about 10 million GPU cores.[2] Molecular dynamics papers presented using a GPU-accelerated exascale computer reminds that, quantum aside for a moment, the real work is still being done in the classical world.[3] NVIDIA showcased the growing fusion of AI and HPC with their "superchip" designs - incorporating a CPU and a GPU on the same chip.[4] And why not, the money keeps flowing, the current outgoing federal administration now locking in the CHIPS Act funding before the end of the term.[5] NVIDIA's Grace Hopper architecture [6] But beyond the incremental improvements in compute, storage, cooling, power consumption and the like, it seemed to me, through my remote goggles, that the real action was happening on the sidelines of SC24, in the quantum computing space. Quantum Chip on Shoulder There's significant skepticism of quantum computing from the HPC community at the moment. Quantum computers today are toys in comparison to HPC, and stakeholders in HPC and classical computing (which would include myself) might wonder aloud "what's the point?" For some applications (like the fluid dynamics apps my company uses), quantum utility is perhaps still a decade away.[7] But the groundwork is being laid today, and when we understand that there are useful problems which can be solved on quantum computers, and only on quantum computers, we might at least allow the playing to continue. And we might be surprised at how fast quantum computing is progressing, and also just churning. Even those in the industry are hedging their bets - on which qubit technologies and which companies will be the winners - and as such are changing partners on a regular basis [8,9,10], although this sometimes means needing to unproductively reinvent the wheel (how many Python quantum circuit libraries do we need?)[11] A couple of new announcements from Big Blue caught my eye. First, an early demonstrator of incorporating an IBM quantum computer into an HPC data center, unifying the resource scheduling, was shown at RPI with their AiMOS cluster and their first-in-the-nation academic installation.[12] The second, and more important, was the paper in Nature demonstrating the union of two quantum computers via classical networks, providing another avenue for scaling up hybrid quantum computing.[13] But today's QPUs are still noisy, fragile, small, expensive, and scarce. Maturity is still a ways off. QPUs are not fungible - to be successful in executing an application on a quantum computer, we must understand the error profile of that specific device! Not just that brand of quantum computer product, but this instance of that product! We need hands-on examples to grow the personal and team experience with quantum while we await stabilized hardware and the productivity-enabling software abstractions which can only come after industry maturity, and these early (head-butting) experiences. Making Your Quantum BonesToday's education in and around quantum computing is still focused on the experimental audience. We are still doing experiments about quantum more than experiments with quantum. The educational material which does exist, and there is an increasing amount, is focused on a community which is very comfortable with quantum physics and its associated mathematics. Most people, myself included, do not fit this description. As a computer science graduate, adjunct prof, and software engineer by trade, I want to see higher level programming abstractions, not those centered around qubits and gates which clearly does not scale for large programs. We will be waiting a while. So in the meantime, we need to see some examples using today's technology and syntax but which are more suited for the Comp Sci student audience, to help begin to bridge that gap. If we visit the Algorithm Zoo [14], a collection of quantum algorithms which show a computational advantage over similar classical approaches, we find some things (but not many) which might look familiar to a CS undergrad, but the implementations, when they exist, are often broken. In this current early phase of the quantum era, vendors are playing free and loose with their SDKs, and releases with significant object model refactorings and breaking changes are the norm. pattern_match.py So I offer here an example of a quantum program which itself likely has a short shelf life. You can find it here.[15, &amp; above] It shows a cooked up example of using Grover's algorithm, which is a quantum algorithm for search in unstructured (e.g. unsorted) data. Classically, "cuz Murphy's Law", you might need to walk the entire dataset to find the item of interest (or show its not there) - we call this an O(n) algorithm. Using Grover's algorithm, you can do the search with a strong probability of success in O(sqrt(n)) time - a quadratic speedup, and one worth pursuing for many applications. Note we are only saying we can perform the search with high probability - this is quantum computing, and everything is a probability. And while the example shown isn't necessarily the most common application of Grover, understanding Grover is worthwhile, as it appears as a sub-procedure in many other quantum algorithms. Here are a few key points to take away, even if you don't take the time to look at the documented code example: We're going to store a small set of strings - binary strings of 1's and 0's representing a small dataset - into a quantum system of qubits. Since our strings are chosen to be 16 binary digits long, we will use 16 qubits. This is a large enough number of qubits to show some non-trivial problems, but not so many as to not be runnable on a simulator on your laptop. (The performance does not scale linearly with the number of qubits.)A system of n qubits contains 2**n possible states (combinations of 0's and 1's). That's a lot. We will have far fewer state strings in our dataset - just a handful for this experiment.After initializing the qubits, we will mark each state in the quantum system which corresponds to a binary string in our dataset. To do this we will use the phase of the qubit, which is an extra useful lever you do not find in classical bits (among other unique quantum advantages). Three qubits in superposition.[16] Marking one of the states by flipping its phase.[16] Using Grover's algorithm, we will amplify the probability of finding the marked states relative to other background states. I.e., the signal is separated from the noise. To do this we iteratively apply an oracle quantum circuit to the initial system. The states, with our target amplified, after some number of iterations of Grover's algorithm.[16] Note that we use the same 16 qubits to encode all of the 16-digit strings in the dataset. Try that with a classical computer!We then use Grover's algorithm again using a target string, applying the oracle against the now prepared quantum system, and returning the result that the target either is or is not in the dataset. Hopefully this gives some flavor of what its like to program a quantum computer using an example most classical programmers today can understand. There are places where the code can potentially be improved - I welcome your input in the comments section below. AI AI, Oh. During these quantum coding explorations, during other coding work, and while writing documents (like this one), I've also been experimenting with a sequence of so-called "AI assistants". Starting with Copilot as a plugin for the popular VS Code IDE, I quickly switched to the Codeium plugin which performed better for my purposes, mostly because it took more of my code into context while making suggestions.[17] Since, the various vendors have leap-frogged each other in features and quality of results, and so while this tool comparison may be stale, its also the case that any new comparison would soon itself become stale. While the VS Code IDE provides hooks for plugins, some vendors, most notably Cursor [18] took the approach that to provide a true AI assistant (AIA) for a modern software developer you needed plugin hooks in many places, and control over things like the rendering of change sets. So they forked the VS Code IDE entirely. And they weren't the only ones to do this - Codeium now also has its own IDE called Windsurf - this is what I'm currently using. This can't be end state for the discussion and more leap-frogging is expected, so watch this space. I've now seen cases where people are putting "Cursor" on their resume - not a good idea to commit to that, but it is a good idea to start using one of these modern tools in your work, and to better understand how to adopt your work practices in light of their potential. In other words, to experiment while these AIA tools improve. The head of Anthropic, a major AI player and the maker of the model driving my current IDE, is proud to say their model reaches 50% success rates on a popular software engineering metric.[19,20] Do you want to pair program with an assistant which is only right 50% of the time? I can tell you that its got its ups and downs. On the positive, for mundane tasks, it can do a pretty good job. Questions like "how do you do X in Python?" which you might have previously taken to Stack Overflow can now be answered in the IDE with custom-made code samples. You can turn your question into an instruction: Me: modify this code to take the target string as a command line argument and default to the current target string if none is providedAIA: I've modified the code to...And it will describe in words and code a working solution, albeit in my case one I found to be slightly over-engineered: Me: use sys to determine if a single arg was providedAIA: I'll modify the code to use sys.argv for a simpler command line argument handling...In another interaction, we debated if an AIA-proposed solution was mathematically efficient, at one point: AIA: Would you like me to: 1) Implement a simpler but less efficient version that demonstrates the concept? 2) Or explore how to properly implement the quantum multiplexing needed for efficient database loading?Me: yes, but make it in a new fileAnd it did. The main reason for asking for a new file rather than change in place was that the AIA is still often wrong! And reviewing a large amount of inline change is hard for the human eye and mind. Me: but now your proposed solution doesn't load the database or even look at it!AIA: Ah, you're absolutely right again! And it then goes on to suggest further changes, which you might wonder why those changes weren't proposed in the first place? Keep in mind, its only (proudly) right 50% of the time. It is, as we say, "generative AI" after all - it doesn't so much "hallucinate" - it is designed to make s***... I mean, "stuff" up. (The idea that this GPT-based technology such as it is would be even capable of producing generalized AI (AGI) is an open question, indeed.) But these tools can still be useful, not just for single-line "tab" completions, but now as we see here, in higher level conversations with the programmer. It can help articulate requirements, and write test cases, and help drive CI/CD pipelines. And it will improve in scope and accuracy, and custom AIA models tuned for specific programming domains (e.g. quantum) already exist.[21] This is truly the death and rebirth of computer programming, as we have come to experience it. In 1975, IBM's Fred Brooks published the seminal book "The Mythical Man-Month" which described, among other things, the software team which one would want to wrap around a senior technical engineer - a team of as many as 10 specialized professionals to handle the documentation, testing, business communications, and more common technical tasks so your senior contributor ("the surgeon") can focus on great ideas and great architecture.[22] But however, in today's DevOps culture, where we expect our senior engineers to be "full stack", to do it all, to play all roles, the AI tooling brings back some sanity and reminds that there are tasks best left delegated. 2025It's that time in the calendar when everyone offers up their forecasts for the coming year. I'll not wade into that. My only prediction is this - that in 2025, the rate of change in key emerging and difficult to humanly understand (nearly black-box) technologies like AI and quantum computing will continue to accelerate, in many cases, beyond our ability to comprehend or predict. This is the so-called singularity, and it's evolving and emerging during a period also marked by political, military, and economic upheaval. Surf's up. Happy New Year. - andy References[0] Photo by Ben Wicks on Unsplash [1] SC24 schedule: https://sc24.conference-program.com/ [2] El Capitan hardware overview: https://hpc.llnl.gov/documentation/user-guides/using-el-capitan-systems/hardware-overview [3] "Breaking the Million-Electron and 1 EFLOP/s Barriers: Biomolecular-Scale Ab Initio Molecular Dynamics Using MP2 Potentials", https://dl.acm.org/doi/pdf/10.1109/SC41406.2024.00015 [4] NVIDIA SC24 superchip press release: https://www.datacenterdynamics.com/en/news/nvidia-announces-new-gb200-nvl4-superchip-at-sc24-but-says-theres-still-value-to-be-found-in-grace-hopper/ [5] Tracking CHIPS Act funding: https://www.semiconductors.org/chips-incentives-awards/ [6] NVIDIA Grace Hopper architecture: https://developer-blogs.nvidia.com/wp-content/uploads/2022/11/grace-hopper-overview.png [7] "Exploring quantum use cases for the aerospace industry", IBM white paper, https://www.ibm.com/thought-leadership/institute-business-value/en-us/report/quantum-aerospace [8] IonQ with NVIDIA SC24 press release: https://ionq.com/news/ionq-to-advance-hybrid-quantum-computing-with-new-chemistry-application-and [9] Microsoft and Atom quantum press releease: https://azure.microsoft.com/en-us/blog/quantum/2024/11/19/microsoft-and-atom-computing-offer-a-commercial-quantum-machine-with-the-largest-number-of-entangled-logical-qubits-on-record/ [10] Alice &amp; Bob logical qubit lib press release : https://alice-bob.com/newsroom/logical-qubit-emulator-felis-quantum-cloud-alice-bob/ [11] Quantinuum stack press release: https://www.quantinuum.com/blog/announcing-the-launch-of-quantinuum-nexus-our-all-in-one-quantum-computing-platform [12] RPI's experiments with HPC and quantum co-scheduling: https://www.ibm.com/quantum/blog/supercomputing-24 [13] "Combining quantum processors with real-time classical communication", Nature, Nov 2024, https://www.nature.com/articles/s41586-024-08178-2 [14] Algorithm Zoo: https://quantumalgorithmzoo.org/ [15] Pattern match example code: https://github.com/agallojr/research-notes/blob/02253900f33d784402f0cd0b3ed4d9d360544605/quantum/src/qiskit/pattern_match.py [16] "QC â Groverâs algorithm", J. Hui, https://jonathan-hui.medium.com/qc-grovers-algorithm-cd81e61cf248 [17] Codeium Windsurf IDE: https://codeium.com/windsurf [18] Cursor IDE: https://www.cursor.com/ [19] Dario Amodei, CEO Anthropic, on Lex Fridman podcast: https://www.youtube.com/watch?v=ugvHCXCOmm4&amp;t=20s&amp;pp=ygULbGV4IGZyaWRtYW4%3D [20] SWE-bench: https://www.swebench.com/ [21] IBM Qiskit Code Assistant: https://www.ibm.com/quantum/blog/qiskit-code-assistant [22] "The Mythical Man-Month", Fred Brooks, 1975: https://web.eecs.umich.edu/~weimerw/2018-481/readings/mythical-man-month.pdf]]></summary></entry><entry><title type="html">SCâ24 recap</title><link href="https://hpc.social/personal-blog/2024/sc-24-recap/" rel="alternate" type="text/html" title="SCâ24 recap" /><published>2024-12-02T07:30:00-07:00</published><updated>2024-12-02T07:30:00-07:00</updated><id>https://hpc.social/personal-blog/2024/sc-24-recap</id><content type="html" xml:base="https://hpc.social/personal-blog/2024/sc-24-recap/"><![CDATA[<p>The premiere annual conference of the high-performance computing community, SC24, was held in Atlanta last week, and
    it attracted a record-shattering number of attendees--<a href="https://www.hpcwire.com/2024/11/20/sc24-half-way-there/">nearly 18,000 registrants</a>, up 28% from last
    year! The conference <i>felt</i> big as well, and there seemed to be a lot more running between sessions, meetings,
    and the exhibition floor. Despite its objectively bigger size though, the content of the conference felt more diffuse this year, and I was left wondering if this reflected my own biases or was a real effect of the AI industry
    beginning to overflow into AI-adjacent technology conferences like SC.</p>
<div class="separator" style="clear: both; text-align: center;"><figure>
</figure></div>
<p></p>
<p>Of course, this isn't to say that SC24 was anything short of a great conference. Some exciting new technologies were
    announced, a new supercomputer beat out Frontier to become the fastest supercomputer on the Top500 list, and I got
    to catch up with a bunch of great people that I only get to see at shows like this. I'll touch on all of these
    things below. But this year felt different from previous SC conferences to me, and I'll try to talk about that too.</p>
<p>There's no great way to arrange all the things I jotted down in my notes, but I've tried to arrange them by what readers may be interested in. Here's the table of contents:</p>
<p></p>
<ol>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#approach">My approach to SC this year</a></li>
<li>
<a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#tech">New technology and announcements</a>
<ol>
<li>
<a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#tech-top500">Top500 and a new #1 system</a>
<ol>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#tech-top500-elcap">#1 - El Capitan</a></li>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#tech-top500-hpc6">#5 - Eni HPC6</a></li>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#tech-top500-softbank">#16 and #17 - SoftBank CHIE-2 and CHIE-3</a></li>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#tech-top500-jeti">#18 - JÃ¼lich's JUPITER Exascale Transition Instrument (JETI)</a></li>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#tech-top500-reindeer">#32 - Reindeer!</a></li>
</ol>
</li>
<li>
<a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#tech-expo">Technology on the exhibit floor</a>
<ol>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#tech-expo-gb200">GB200</a></li>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#tech-expo-ss400">Slingshot 400</a></li>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#tech-expo-gg">Grace-Grace for storage?</a></li>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#tech-expo-hbv5">Microsoft and AMD's new HBM CPU</a></li>
</ol>
</li>
</ol>
</li>
<li>
<a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#industry">The HPC industry overall</a>
<ol>
<li>
<a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#industry-attendee">What I learned about the average SC technical program attendee</a>
<ol>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#industry-attendee-sustainability">People think sustainability and energy efficiency are the same thing</a></li>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#industry-attendee-ai">AI sessions are really scientific computing sessions about AI</a></li>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#industry-attendee-ops">AI for operations is not yet real in scientific computing</a></li>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#industry-attendee-hyperscale">Some are beginning to realize that HPC exists outside of scientific computing</a></li>
</ol>
</li>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#industry-nsf">NSF's broad front vs. DOE's big bets in HPC and AI</a></li>
<li>
<a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#industry-expo">Exhibitor trends</a>
<ol>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#industry-expo-booths">Booths by the numbers</a></li>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#industry-expo-gpuaas">Proliferation of GPU-as-a-Service providers</a></li>
</ol>
</li>
</ol>
</li>
<li>
<a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#community">Community and connections</a><ol>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#community-people">Getting to know people</a></li>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#community-career">Talking to early career people</a></li>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#community-bsky">Shift in social media</a></li>
</ol>
</li>
<li><a href="https://blog.glennklockwood.com/feeds/posts/default/-/hpc?alt=rss#conclusion">So what's the takeaway?</a></li>
</ol>
<p>Before getting into the details though, I should explain how my perspective shaped what I noticed (and missed) through the conference. And to be clear: <b><i><span style="color: #cc0000;">these are my own personal opinions and do not necessarily reflect those of my employer</span></i></b>. Although Microsoft covered the cost for me to attend SC, I wrote this blog post during my own free time over the Thanksgiving holiday, and nobody had any editorial control over what follows except me.</p>
<p></p>
<h2 id="approach">My approach to SC this year</h2>
<p>Although this is the eleventh SC conference I've attended, it was the first time that I:</p>
<p></p>
<ol>
<li>attended as aÂ <a href="https://blog.glennklockwood.com/2024/08/how-has-life-after-leaving-labs-been.html#hpc-ai-development">practitioner
            of hyperscale AI</a>Â rather than traditional HPC and scientific computing</li>
<li>attended as a Microsoft engineer (I represented Microsoft as a <a href="https://blog.glennklockwood.com/2024/08/how-has-life-after-leaving-labs-been.html#storage-product-management">product manager</a> at
        SC22 and SC23)</li>
<li>did not attend SC as a designated storage person (since 2013)</li>
</ol>
<p>Because of these changes in my <b><span style="color: #990000;">identity</span></b> as an attendee, I approached the
    conference with a different set of <b><span style="color: #0b5394;">goals</span></b> in mind:</p>
<p>As a <b><span style="color: #990000;">hyperscale/AI person</span></b>, I felt that I should
    prioritizeÂ <b><span style="color: #0b5394;">attending all the cloud and AI sessions</span></b>Â whenever forced to choose between one session or another. I chose to focus on understanding the traditional HPC community's understanding of hyperscale and AI, which meant I had to spend less time in the workshops, panels and BOFs where I built my career.</p>
<p>As an <b><span style="color: #990000;">engineer</span></b> rather than a product manager,
    it wasn't my primary responsibility to run private briefings and gather HPC customers' requirements and feedback. Instead, I prioritized only those meetings where my first-hand
    knowledge of how massive-scale AI training works could have a meaningful impact. This meant IÂ <b><span style="color: #0b5394;">focused on partners and practitioners who also operate in the realm of
            hyperscale</span></b>--think massive, AI-adjacent companies and the HPC centers who have historically
    dominated the very top of the Top500 list.
</p>
<p>One thing I didn't anticipate going into SC24 is that I've inherited a third identity: there are a new cohort of people in HPC who see me as a <b><span style="color: #990000;">long-time community
            member</span></b>. This resulted in a surprising amount of my time being spent <b><span style="color: #0b5394;">talking to students and early career practitioners</span></b>Â who were looking
    for advice.</p>
<p>These three identities and goals meant I don't many notes to share on the technical program, but I did capture more observations about broader trends in the HPC industry and community.</p>
<h2 id="tech">New technology and announcements</h2>
<div>HPC is all about cutting-edge technology, so that's a fine place to start talking about what was new.</div>
<h3 id="tech-top500">Top500 and a new #1 system</h3>
<p>A cornerstone of every SC conference is the release of the new Top500 list on Monday, and
    this is especially true on years when a new #1 supercomputer is announced. As was widely anticipated in the weeks
    leading up to SC24, El Capitan unseated Frontier as the new #1 supercomputer this year, posting an impressive <a href="https://www.top500.org/system/180307/">1.74 EFLOPS</a> of FP64. In addition though, Frontier grew a
    little (it added 400 nodes), there was a notable new #5 system (Eni's HPC6), and a number of smaller systems appeared that are worth calling
    out.</p>
<h4 id="tech-top500-elcap">#1 - El Capitan</h4>
<p>The highlight of the Top500 list was undoubtedly the debut of El Capitan, Lawrence
    Livermore National Laboratory's massive new MI300A-based exascale supercomputer. Its 1.74 EF score resulted from a
    105-minute HPL run that came in under 30 MW, and a bunch of technical details about the system were disclosed by
    Livermore Computing's CTO, Bronis de Supinski, during an invited talk during the Top500 BOF. Plenty of others
    summarize the system's speeds and feeds (e.g., see <a href="https://www.nextplatform.com/2024/11/18/el-capitan-supercomputer-blazes-the-trail-for-converged-cpu-gpu-compute/">The
        Next Platform's article on El Cap</a>), so I won't do that. However, I will comment on how unusual Bronis' talk
    was.</p>
<p>Foremost, the El Capitan talk seemed haphazard and last-minute. Considering the system took over half a decade of planning and cost at least half a
    billion dollars, El Capitan's unveiling was the most unenthusiastic description of a brand-new #1 supercomputer I've
    ever seen. I can understand that the Livermore folks have debuted plenty of novel #1 systems in their careers, but El
    Capitan is objectively a fascinating system, andÂ running a full-system job for nearly two hours across first-of-a-kind APUs
    is an amazing feat. If community leaders don't get excited about their own groundbreaking achievements, what kind of message should the next generation of HPC professionals take home?</p>
<p>In sharp contrast to the blasÃ© announcement of this new system was the leading slide that was presented to describe the speeds and feeds of El Capitan:</p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>I've never seen a speaker take the main stage and put <i>a photo of himself</i> literally in the center of the slide, in front of the supercomputer they're talking about. I don't know what the communications people at Livermore were trying to do with this graphic, but I don't think it
    was intended to be evocative of the first thing that came to my mind:</p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>The supercomputer is literally named "The Captain," and there's a photo of one dude (the boss of Livermore Computing,
    who is also standing on stage giving the talk) blocking the view of the machine. It wasn't a great look, and it left me feeling very uneasy about what I was witnessing and what message it was sending to the HPC community.</p>
<p>In case it needs to be said, HPC is a team sport. The unveiling of El Capitan (or any other #1 system
    before it) is always the product of dozens, if not hundreds, of people devoting years of their professional lives to
    ensuring it all comes together. It was a big miss, both to those who put in the work, and those who will have
    to put in the work on future systems, to suggest that a single, smiling face comes before the success of the system deployment.
</p>
<h4 id="tech-top500-hpc6">#5 - Eni HPC6</h4>
<p>The other notable entrant to the Top 10 list was HPC6, an industry system deployed by Eni (a major Italian energy
    company) built on MI250X. Oil and gas companies tend to be conservative in the systems they buy since the seismic
    imaging done on their large supercomputers informs hundred-million to billion-dollar investments in drilling a new
    well, and they have much less tolerance for weird architectures than federally funded leadership computing does.
    Thus, Eni's adoption of AMD GPUs in this #5 system is a strong endorsement of their capability in mission-critical
    commercial computing.</p>
<h4 id="tech-top500-softbank">#16 and #17 - SoftBank CHIE-2 and CHIE-3</h4>
<p>SoftBank, the Japanese investment conglomerate who, among other things, owns a significant stake in Arm, made its <a href="https://www.top500.org/site/51045/">Top500 debut with two identical 256-node DGX H100 SuperPODs</a>. While
    not technologically interesting (H100 is getting old), these systems represent significant investment in HPC by
    private industry in Japan and signals that SoftBank is following the lead of large <a href="https://www.nytimes.com/2023/08/16/technology/ai-gpu-chips-shortage.html">American investment groups in
        building private AI clusters for the AI startups in their portfolios</a>. In doing this, SoftBank's investments
    aren't dependent on third-party cloud providers to supply the GPUs to make these startups successful and reduces
    their overall risk.</p>
<p>Although I didn't hear anything about these SoftBank systems at the conference, NVIDIA issued a press statement
    during the NVIDIA AI Summit Japan during the week prior to SC24 that discussed <a href="https://nvidianews.nvidia.com/news/nvidia-and-softbank-accelerate-japans-journey-to-global-ai-powerhouse">SoftBank's
        investment in large NVIDIA supercomputers</a>. The press statement states that these systems will be used "for
    [SoftBank's] own generative AI development and AI-related business, as well as that of universities, research
    institutions and businesses throughout Japan." The release also suggests we can expect B200 and GB200 SuperPODs from
    SoftBank to appear as those technologies come online.</p>
<h4 id="tech-top500-jeti">#18 - JÃ¼lich's JUPITER Exascale Transition Instrument (JETI)</h4>
<p>Just below the SoftBank systems was the precursor system to Europe's first exascale system. I was hoping that
    JUPITER, the full exascale system being deployed at FRJ, would appear in the Top 10, but it seems like we'll have to
    wait for ISC25 for that. Still, the JETI system ran HPL across 480 nodes of BullSequana XH3000, the same node that
    will be used in JUPITER, and achieved 83 TFLOPS. By comparison, the full JUPITER system will be over 10x larger ("<a href="https://www.fz-juelich.de/en/ias/jsc/jupiter/tech">roughly 6000 compute nodes</a>" in the Booster), and
    projecting the JETI run (173 TF/node) out to this full JUPITER scale indicates that JUPITER should just squeak over
    the 1.0 EFLOPS line.</p>
<p>In preparation for JUPITER, Eviden had a couple of these BullSequana XH3000 nodes out on display this year:</p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>And if you're interested in more, I've been tracking the technical details of <a href="https://glennklockwood.com/garden/systems/jupiter">JUPITER in my digital garden</a>.</p>
<h4 id="tech-top500-reindeer">#32 - Reindeer!</h4>
<p>Waay down the list was Microsoft's sole new Top500 entry this cycle, an NVIDIA H200 system that ran HPL over 120 ND
    H200 v5 nodes in Azure. It was one of only two conventional (non-Grace) H200 clusters that appeared in the top 100,
    and it had a pretty good efficiency (Rmax/Rpeak &gt; 80%). Microsoft also had a Reindeer node on display at its
    booth:</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>An astute observer may note that this node looks an awful lot like the H100 node used in its Eagle supercomputer,
    which was <a href="https://blog.glennklockwood.com/2023/11/sc23-recap.html">on display at SC23 last year</a>. That's
    because it's the same chassis, just with an upgraded HGX baseboard.</p>
<p>Reindeer was not <i>super</i> exciting, and there were no press releases about it, but I mention it here for a couple
    reasons:</p>
<p></p>
<ul>
<li>One of my teammates did the HPL run and submission, and his group got to come up with the name of the system for
        the purposes of HPL. As it turns out, generating a public name for a Top500 submission involves a comical amount
        of legal and marketing process when it comes from a giant corporation like Microsoft. And as it turns out,
        naming a cluster "Reindeer" has a low probability of offending anyone.</li>
<li>Reindeer is pretty boring--it's a relatively small cluster with a bunch of GPUs. But when you're building out AI
        infrastructure at a pace of <a href="https://build.microsoft.com/en-US/sessions/984ca69a-ffca-4729-bf72-72ea0cd8a5db">5x Eagles (70,000
            GPUs!) per month</a>, you want the clusters that those GPUs go into to be as boring, predictable, and
        automatable as possible. Seeing as how Reindeer only used 960 GPUs but still got #32, it doesn't require much
        math to realize that the big hyperscalers could flood the Top500 list with these cookie-cutter GPU clusters and
        (in this case) make any ranking below #32 completely irrelevant. Heaven help the Top500 list if they ever
        publish an API for submitting new systems; cloud providers' build validation automation could tack a Top500
        submission on at the end of burn-in and permanently ruin the list.</li>
</ul>
<div>On a personal note, the supercomputer grant that gave me my first job in the HPC business <a href="https://www.top500.org/system/177455/">debuted at #48</a>. It's mind-boggling that I now work in a place
    where standing up a #32 system is just day-to-day business.</div>
<p></p>
<h3 id="tech-expo">Technology on the exhibit floor</h3>
<p>The exhibit floor had a few new pieces of HPC technology on display this year that are
    worthy of mention, but a lot of the most HPC-centric exciting stuff actually had a soft debut at <a href="https://blog.glennklockwood.com/2024/05/isc24-recap.html">ISC24 in May</a>. For example, even though SC24 was MI300A's big splash due to
    the El Capitan announcement, some MI300A nodes (such as the <a href="https://glennklockwood.com/garden/nodes/cray-ex255a">Cray EX255a</a>) were on display in Hamburg. However,
    Eviden had their MI300A node (branded XH3406-3) on display at SC24 which was new to me:</p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>I'm unaware of anyone who's actually committed to a large Eviden MI300A system, so I was
    surprised to see that Eviden already has a full blade design. But as with Eni's HPC6 supercomputer, perhaps this is
    a sign that AMD's GPUs (and now APUs) have graduated from being built-to-order science experiments to a technology
    ecosystem that people will want to buy off the rack.</p>
<p>There was also a ton of GH200 on the exhibit hall floor, but again, these node types were
    also on display at ISC24. This wasn't a surprise since a bunch of upcoming European systems have invested in GH200
    already; in addition to JUPITER's 6,000 GH200 nodes described above, <a href="https://www.cscs.ch/computers/alps">CSCS Alps</a> has 2,688 GH200 nodes, and <a href="https://glennklockwood.com/garden/systems/isambard-ai">Bristol's Isambard-AI</a> will have 1,362 GH200
    nodes. All of these systems will have a 1:1 CPU:GPU ratio and an NVL4 domain, suggesting this is the optimal way to
    configure GH200 for HPC workloads. I didn't hear a single mention of GH200 NVL32.</p>
<h4 id="tech-expo-gb200">GB200</h4>
<p>SC24 was the debut of NVIDIA's Blackwell GPU in the flesh, and a bunch of integrators had
    material on GB200 out at their booths. Interestingly, they all followed the same pattern as GH200 with an NVL4
    domain size, and just about every smaller HPC integrator followed a similar pattern where</p>
<p></p>
<ul>
<li>their booth had a standard "NVIDIA Partner" (or "Preferred Partner!") placard on their main desk</li>
<li>they had a bare NVIDIA GB200 baseboard (superchip) on display</li>
<li>there wasn't much other differentiation</li>
</ul>
<p>From this, I gather that not many companies have manufactured GB200 nodes yet, or if they
    have, there aren't enough GB200 boards available to waste them on display models. So, we had to settle for these
    bare NVIDIA-manufactured, 4-GPU + 2-CPU superchip boards:</p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>What struck me is that these are very large FRUs--if a single component (CPU, GPU, voltage
    regulator, DRAM chip, or anything else) goes bad, you have to yank and replace four GPUs and two CPUs. And because
    all the components are soldered down, someone's going to have to do a lot of work to remanufacture these boards to
    avoid throwing out a lot of very expensive, fully functional Blackwell GPUs.</p>
<p>There were a few companies who were further along their GB200 journey and had more
    integrated nodes on display. The HPE Cray booth had this GB200 NVL4 blade (the Cray EX154n) on display:</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>It looks remarkably sparse compared to the super-dense blades that normally slot into the
    Cray EX line, but even with a single NVL4 node per blade, the Cray EX cabinet only supports 56 of these blades,
    leaving 8 blade slots empty in the optimal configuration. I assume this is a limitation of power and cooling.</p>
<p>The booth collateral around this blade suggested its use case is "machine learning and
    sovereign AI" rather than traditional HPC, and that makes sense since each node has 768 GB of HBM3e which is enough
    to support training some pretty large sovereign models. However, the choice to force all I/O traffic on to the
    high-speed network by only leaving room for one piddly node-local NVMe drive (this blade only supports one SSD per
    blade) will make training on this platform very sensitive to the quality of the global storage subsystem. This is
    great if you bundle this blade with all-flash Lustre (like Cray ClusterStor) or DAOS (handy, since <a href="https://bsky.app/profile/adrianjhpc.bsky.social/post/3lba4yfg5fc2a">Intel divested the entire DAOS
        development team to HPE</a>). But it's not how I would build an AI-optimized system.</p>
<p>I suspect the cost-per-FLOP of this Cray GB200 solution is much lower than what a pure-play
    GB200 for LLM training would be. And since GB200 is actually a solid platform for FP64 (thanks to Dan Ernst for <a href="https://bsky.app/profile/ernstdj.bsky.social/post/3lb23ipwnvc26">challenging me on this</a> and sharing
    some <a href="https://arxiv.org/abs/2411.12090">great resources on the topic</a>), I expect to see this node do well
    in situations that are not training frontier LLMs, but rather fine-tuning LLMs, training smaller models, and mixing
    in traditional scientific computing on the same general-purpose HPC/AI system.</p>
<p>Speaking of pure-play LLM training platforms, though, I was glad that very few exhibitors
    were trying to talk up GB200 NVL72 this year. It may have been the case that vendors simply aren't ready to begin
    selling NVL72 yet, but I like to be optimistic and instead believe that the exhibitors who show up to SC24 know that
    the scientific computing community likely won't get enough value out of a 72-GPU coherence domain to justify the
    additional cost and complexity of NVL72. I didn't see a single vendor with a GB200 NVL36 or NVL72 rack on display
    (or a GH200 NVL32, for that matter), and not having to think about NVL72 for the week of SC24 was a nice break from
    my day job.</p>
<p>Perhaps the closest SC24 got to NVL72 was a joint announcement at the beginning of the week
    by Dell and CoreWeave, who announced that <a href="https://www.coreweave.com/blog/coreweave-pushes-boundaries-with-gb200-and-more">they have begun bringing
        GB200 NVL72 racks online</a>. Dell did have a massive, AI-focused booth on the exhibit floor, and they did talk
    up their high-powered, liquid-cooled rack infrastructure. But in addition to supporting GB200 with NVLink Switches,
    I'm sure that rack infrastructure would be equally good at supporting nodes geared more squarely at traditional HPC.
</p>
<h4 id="tech-expo-ss400">Slingshot 400</h4>
<p>HPE Cray also debuted a new 400G Slingshot switch, appropriately named Slingshot 400. I
    didn't get a chance to ask anyone any questions about it, but from the marketing material that came out right before
    the conference, it sounds like a serdes upgrade without any significant changes to Slingshot's L2 protocol.</p>
<p>There was a Slingshot 400 switch for the Cray EX rack on display at their booth, and it
    looked pretty amazing:</p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>It looks way more dense than the original 200G Rosetta switch, and it introduces
    liquid-cooled optics. If you look closely, you can also see a ton of flyover cables connecting the switch ASIC in
    the center to the transceivers near the top; similar flyover cables are showing up in all manner of
    ultra-high-performance networking equipment, likely reflecting the inability to maintain signal integrity across PCB
    traces.</p>
<p>The port density on Slingshot 400 remains the same as it was on 200G Slingshot, so there's
    still only 64 ports per switch, and the fabric scale limits don't increase. In addition, the media is saying that
    Slingshot 400 (and the GB200 blade that will launch with it) won't start appearing until "<a href="https://www.nextplatform.com/2024/11/26/hpe-upgrades-supercomputer-lineup-top-to-bottom-in-2025/">Fall
        2025</a>." Considering 64-port 800G switches (like <a href="https://nvidianews.nvidia.com/news/networking-switches-gpu-computing-ai">NVIDIA's SN5600</a> and <a href="https://www.arista.com/en/company/news/press-release/19493-arista-unveils-etherlink-ai-networking-platforms">Arista's
        7060X6</a>) will have already been on the market by then though, Slingshot 400 will be launching with HPE Cray
    on its back foot.</p>
<p>However, there was a curious statement on the placard accompanying this Slingshot 400
    switch:</p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>It reads, "Ultra Ethernet is the future, HPE Slingshot delivers today!"</p>
<p>Does this suggest that Slingshot 400 is just a stopgap until 800G Ultra Ethernet NICs begin
    appearing? If so, I look forward to seeing HPE Cray jam third-party 800G switch ASICs into the Cray EX liquid-cooled
    form factor at future SC conferences.</p>
<h4 id="tech-expo-gg">Grace-Grace for storage?</h4>
<p>One of the weirder things I saw on the exhibit floor was a scale-out storage server built
    on NVIDIA Grace CPUs that the good folks at WEKA had on display at their booth.</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>Manufactured by Supermicro, this "ARS-121L-NE316R" server (really rolls off the tongue)
    uses a two-socket Grace superchip and its LPDDR5X instead of conventional, socketed CPUs and DDR. The rest of it
    seems like a normal scale-out storage server, with sixteen E3.S SSD slots in the front and four 400G ConnectX-7 or
    BlueField-3 NICs in the back. No fancy dual-controller failover or anything like that; the presumption is that
    whatever storage system you'd install over this server would implement its own erasure coding across drives and
    servers.</p>
<p>At a glance, this might seem like a neat idea for a compute-intensive storage system like
    WEKA or DAOS. However, one thing that you typically want in a storage server is high reliability and repairability,
    features which weren't the optimal design point for these Grace superchips. Specifically,</p>
<p></p>
<ul>
<li>The Grace-Grace superchip turn both CPU sockets into a single FRU. This means that if one CPU goes bad, you're
        shipping the whole board back to NVIDIA rather than just doing a field-swap of a socket.</li>
<li>Grace uses LPDDR5X, whose ECC is not as robust as DDR5. I'm not an expert on memory architecture, but my
        understanding is that the ECC scheme on Grace does not provide ChipKill or row failures. And as with CPU
        failure, if a single DRAM chip goes back, you're throwing out two CPUs and all the DRAM.</li>
<li>There's no way to value-engineer the exact quantity of cores, clock, and DRAM to be optimal for the storage
        software installed on top of these servers.</li>
</ul>
<p>On the upside, though, there might be a cost advantage to using this Grace-Grace server
    over a beefier AMD- or Intel-based server with a bunch of traditional DIMMs. And if you really like NVIDIA products,
    this lets you do NVIDIA storage servers to go with your NVIDIA network and NVIDIA compute. As long as your storage
    software can work with the interrupt rates of such a server (e.g., it supports rebuild-on-read) and the 144 Neoverse
    V2 cores are a good fit for its computational requirements (e.g., calculating complex erasure codes), this server
    makes sense. But building a parallel storage system on LPDDR5X still gives me the willies.</p>
<p>I could also see this thing being useful for certain analytics workloads, especially those
    which may be upstream of LLM training. I look forward to hearing about where this turns up in the field.</p>
<p></p>
<h4 id="tech-expo-hbv5">Microsoft and AMD's new HBM CPU</h4>
<p>The last bit of new and exciting HPC technology that I noted came from my very own employer
    in the form of HBv5, a new, monster four-socket node featuring custom-designed AMD CPUs with HBM. STH wrote up <a href="https://www.servethehome.com/this-is-the-microsoft-azure-hbv5-and-amd-mi300c-nvidia/">an article with
        great photos of HBv5 and its speeds and feeds</a>, but in brief, this single node has:</p>
<p></p>
<ul>
<li>384 physical Zen 4 cores (352 accessible from within the VM) that clock up to 4 GHz</li>
<li>512 GB of HBM3 (up to 450 GB accessible from the VM) with up to 6.9 TB/s STREAM bandwidth</li>
<li>4x NDR InfiniBand NICs clocked at 200G per port</li>
<li>200G Azure Boost NIC (160G accessible from the VM)</li>
<li>8x 1.84 TB NVMe SSDs with up to 50 GB/s read and 30 GB/s write bandwidth</li>
</ul>
<p></p>
<p>The node itself looks kind of wacky as well, because there just isn't a lot on it:</p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>There are the obvious four sockets of AMD EPYC 9V64H, each with 96 physical cores and 128 GB of HBM3, and giant heat
    pipes on top of them since it's 100% air-cooled. But there's no DDR at all, no power converter board (the node is
    powered by a DC bus bar), and just a few flyover cables to connect the PCIe add-in-card cages. There is a separate
    fan board with just two pairs of power cables connecting to the motherboard, and that's really about it.</p>
<p>The front end of the node shows its I/O capabilities which are similarly uncomplicated:</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>There are four NDR InfiniBand cards (one localized to each socket) which are 400G-capable but cabled up at 200G,
    eight E1.S NVMe drives, and a brand-new dual-port Azure Boost 200G NIC. Here's a close-up of the right third of the
    node's front:</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p>This is the first time I've seen an Azure Boost NIC in a server, and it looks
much better integrated than the previous-generation 100G Azure SmartNIC that put the FPGA and hard NIC on separate
boards connected by a funny little pigtail. This older 100G SmartNIC with pigtail was also on display at the Microsoft
booth in an ND MI300X v5 node:</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>And finally, although I am no expert in this new node, I did hang around the people who are all week, and I
    repeatedly heard them answer the same few questions:</p>
<p></p>
<ul>
<li><b>Is this MI300C?</b> It is if you want it to be. You can call it Sally if you want; I don't think it will
        care. But Microsoft calls it HBv5, and the processor name will show up as AMD EPYC 9V64H in /proc/cpuinfo.</li>
<li><b>Is its InfiniBand 1x800 port, 2x400 ports, ...?</b> There are four NDR InfiniBand HCA cards, and each card
        has one full 400G NDR InfiniBand port. However, each port is only connected up to top-of-rack switching at 200G.
        Each InfiniBand HCA hangs off of a different EPYC 9V64H socket so that any memory address canÂ get to
        InfiniBand without having to traverse Infinity Fabric. Running four ports of NDR InfiniBand at half speed is an
        unusual configuration, but that's what's going on here.</li>
<li><b>How can I buy this CPU?</b>Â EPYC 9V64H are "<a href="https://techcommunity.microsoft.com/blog/azurehighperformancecomputingblog/announcing-azure-hbv5-virtual-machines-a-breakthrough-in-memory-bandwidth-for-hp/4303504">custom
            AMD EPYC processors only available in Azure</a>." This means the only way to access it is by provisioning an
        HBv5 virtual machine in Azure.</li>
</ul>
<div>Amidst all the unrelenting news about new GPUs optimized for AI workloads, it was nice to see something new and
    unique launched squarely for the benefit of traditional scientific computing workloads.</div>
<p></p>
<p></p>
<h2 id="industry">The HPC industry overall</h2>
<div>
<p>New technology announcements are always exciting, but one of the main reasons I attend
        SC and ISC is to figure out the broader trends shaping the HPC industry. What concerns are top of mind for the
        community, and what blind spots remain open across all the conversations happening during the week? Answering
        these questions requires more than just walking the exhibit floor; it involves interpreting the subtext of the
        discussions happening at panels and BOF sessions. However, identifying where the industry needs more information
        or a clearer picture informs a lot of the public-facing talks and activities in which I participate throughout
        the year.</p>
</div>
<h3 id="industry-attendee">What I learned about the average SC technical program attendee</h3>
<p>The biggest realization that I confirmed this week is that <b>the SC conference is not an HPC
        conference; it is a scientific computing conference</b>. I sat in a few sessions where the phrase "HPC
    workflows" was clearly a stand-in for "scientific workflows," and "performance evaluation" still really means "MPI
    and OpenMP profiling." I found myself listening to ideas or hearing about tools that were <em>intellectually</em>
    interesting but ultimately not useful to me because they
    were so entrenched in the traditions of applying HPC to scientific computing. Let's talk about a few ways in which
    this manifested.</p>
<h4 id="industry-attendee-sustainability">People think sustainability and energy efficiency are the same thing</h4>
<p>Take, for example, the topic of sustainability. There were talks, panels, papers, and BOFs
    that touched on the environmental impact of HPC throughout the week, but the vast majority of them really weren't
    talking about sustainability at all; they were talking about energy efficiency. These talks often use the following
    narrative:</p>
<p></p>
<ol>
<li>Energy use from datacenters is predicted to reach some ridiculous number by 2030</li>
<li>We must create more energy-efficient algorithms, processors, and scheduling policies</li>
<li>Here is an idea we tested that reduced the energy consumption without impacting the performance of some
        application or workflow</li>
<li>Sustainability achieved! Success!</li>
</ol>
<p>The problem with this approach is that it declares victory when energy consumption is
    reduced. This is a great result if all you care about is spending less money on electricity for your supercomputer,
    but it completely misses the much greater issue that the electricity required to power an HPC job is often generated
    by burning fossil fuels, and that the carbon emissions that are directly attributable to HPC workloads are
    contributing to global climate change. This blind spot was exemplified by this slide, presented during a talk titled
    "Towards Sustainable Post-Exascale Leadership Computing" at the Sustainable Supercomputing workshop:</p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>I've <a href="https://blog.glennklockwood.com/2024/11/fasst-will-be-does-opportunity-to-adapt.html">written about
        this before</a> and I'll write about it again: FLOPS/Watt and PUE are not
    meaningful metrics by themselves when talking about sustainability. A PUE of 1.01 is not helpful if the datacenter
    that achieves it relies on burning coal for its power. Conversely, a PUE of 1.5 is not bad if all that electricity
    comes from a zero-carbon energy source. The biggest issue that I saw being reinforced at SC this year is that
    claims of "sustainable HPC" are accompanied by the subtext of "as long as I can keep doing everything else the way I
    always have."</p>
<p>There were glimmers of hope, though. Maciej Cytowski from Pawsey presented the opening talk
    at the Sustainable Supercomputing workshop, and he led with the right thing--he acknowledged that 60% of
    the fuel mix that powers Pawsey's supercomputers comes from burning fossil fuels:</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>Rather than patting himself on the back at his low PUE, Dr. Cytowski's described on how
    they built their datacenter atop a large aquifer from which they draw water at 21Â°C and return it at 30Â°C to avoid
    using energy-intensive chillers. To further reduce the carbon impact of this water loop, Pawsey also installed over
    200 kW of solar panels on its facility roof to power the water pumps. Given the fact that Pawsey cannot relocate to
    somewhere with a higher ratio of zero-carbon energy on account of its need to be physically near the Square
    Kilometer Array, Cytowski's talk felt like the most substantive discussion on sustainability in HPC that week.</p>
<p>Most other talks and panels on the topic really wanted to equate "sustainability" to "FLOPS
    per Watt" and pretend like where one deploys a supercomputer is not a part of the sustainability discussion. The
    reality is that, if the HPC industry wanted to take sustainability seriously, it would talk less about watts and
    more about tons of CO<sub>2</sub>. Seeing as how the average watt of electricity in Tennessee produces <a href="https://www.epa.gov/egrid/data-explorer">2.75x more carbon</a> than a watt of electricity in Washington,
    the actual environmental impact of fine-tuning Slurm scheduling or fiddling with CPU frequencies is meaningless when
    compared to the benefits that would be gained by deploying that supercomputer next to a hydroelectric dam instead of
    a coal-fired power plant.</p>
<p>I say all this because there are parts of the HPC industry (namely, the part in which I work)
    who <i>are</i> serious about sustainability. And those conversations go beyond simply building supercomputers in
    places where energy is low-carbon (thereby reducing <a href="https://www.epa.gov/climateleadership/scope-1-and-scope-2-inventory-guidance">Scope 2 emissions</a>). They
    include holding suppliers to high standards on reducing the carbon impact of transporting people and material to
    these data centers, reducing the carbon impact of all the excess packaging that accompanies components, and being
    accountable for the impact of everything in the data center after it reaches end of life (termed <a href="https://www.epa.gov/climateleadership/scope-3-inventory-guidance">Scope 3 emissions</a>).</p>
<p>The HPC community--or more precisely, the scientific computing community--is still married
    to the idea that the location of a supercomputer is non-negotiable, and "sustainability" is a nice-to-have secondary
    goal. I was
    hoping that the sessions I attended on sustainability would approach this topic at a level where the
    non-scientific HPC world has been living. Unfortunately, the discussion at SC24, which spanned workshops, BOFs, and
    Green 500, remains largely stuck on the idea that PUE and FLOPS/Watt are the end-all sustainability metrics. Those
    metrics are important, but there are global optimizations that have much greater effects on reducing the
    environmental impact of the HPC industry.</p>
<h4 id="industry-attendee-ai">AI sessions are really scientific computing sessions about AI</h4>
<p>Another area where "HPC" was revealed to really mean "scientific computing" was in the
    topic of AI. I sat in on a few BOFs and panels around AI topics to get a feel for where this community is in
    adopting AI for science, but again, I found the level of discourse to degrade to generic AI banter despite the best
    efforts of panelists and moderators. For example, I sat in the "Foundational Large Language Models for
    High-Performance Computing" BOF session, and Jeff Vetter very clearly defined what a "foundational large language
    model" was at the outset so we could have a productive discussion about their applicability in HPC (or, really,
    scientific computing):</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>The panelists did a good job of outlining their positions. On the upside, LLMs are good for
    performing source code conversion, documenting and validating code, and maximizing continuity in application codes
    that get passed around as graduate students come and go. On the downside, they have a difficult time creating
    efficient parallel code, and they struggle to debug parallel code. And that's probably where the BOF should have
    stopped, because LLMs, as defined at the outset of the session, don't actually have a ton of applicability in
    scientific computing. But as soon as the session opened up to audience questions, the session went off the rails.
</p>
<p>The first question was an extremely basic and nonspecific question: "Is AI a bubble?"</p>
<p>It's fun to ask provocative questions to a panel of experts. I get it. But the question had
    nothing to do with LLMs, any of the position statements presented by panelists, or even HPC or scientific computing.
    It turned a BOF on "LLMs for HPC" into a BOF that might as well have been titled "Let's just talk about AI!" A few
    panelists tried to get things back on track by talking about the successes of surrogate models to simulate physical
    processes, but this reduced the conversation to a point where "LLMs" really meant "any AI model" and "HPC" really
    meant "scientific simulations."</p>
<p>Perhaps the most productive statement to come out of that panel was when Rio Yokota
    asserted that "we" (the scientific community) should not train their own LLMs, because doing so would be
    "unproductive for science." But I, as well as anyone who understands the difference between LLMs and "AI," already
    knew that. And the people who don't understand the difference between an LLM and a surrogate model probably didn't
    pick up on Dr. Yokota's statement, so I suspect the meaning of his contribution was completely lost.</p>
<p>Walking out of that BOF (and, frankly, the other AI-themed BOFs and panels I attended), I
    was disappointed at how superficial the conversation was. This isn't to say these AI sessions were objectively
    <i>bad</i>; rather, I think it reflects the general state of understanding of AI amongst SC attendees. Or perhaps it
    reflects the demographic that is drawn to these sorts of sessions. If the SC community is not ready to have a
    meaningful discussion about AI in the context of HPC or scientific computing, attending BOFs with like-minded peers
    is probably a good place to begin getting immersed.
</p>
<p>But what became clear to me this past week is that SC BOFs and panels with "AI" in their
    title aren't really meant for practitioners of AI. They're meant for scientific computing people who are beginning
    to dabble in AI.</p>
<h4 id="industry-attendee-ops">AI for operations is not yet real in scientific computing</h4>
<p>I was invited to sit on a BOF panel called "Artificial Intelligence and Machine Learning
    for HPC Workload Analysis" following on a successful BOF in which I participated at ISC24. The broad intent was to
    have a discussion around the tools, methods, and neat ideas that HPC practitioners have been using to better
    understand workloads, and each of us panelists was tasked with talking about a project or idea we had in applying
    AI/ML to improve some aspect of workloads.</p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>What emerged from us speakers' lightning talks is that applying AI for operations--in this
    case, understanding user workloads--is nascent. Rather than talking about how we use AI to affect how we design or
    operate supercomputers, all of us seemed to focus more on how we are collecting data and beginning to analyze that
    data using ML techniques. And maybe that's OK, because AI won't ever do anything for workload characterization until
    you have a solid grasp of the telemetry you can capture about those workloads in the first place.</p>
<p>But when we opened the BOF up to discussion with all attendees, despite having a packed
    room, there was very little that the audience had. Our BOF lead, Kadidia KonatÃ©, tried to pull discussion out of the
    room from a couple of different fronts by asking what tools people were using, what challenges they were facing, and
    things along those lines. However, it seemed to me that the majority of the audience was in that room as spectators;
    they didn't know where to start applying AI towards understanding the operations of supercomputers. Folks attended
    to find out the art of the possible, not talk about their own challenges.</p>
<p>As such, the conversation wound up bubbling back up to the safety of traditional topics in
    scientific computing--how is LDMS working out, how do you deal with data storage challenges of collecting telemetry,
    and all the usual things that monitoring and telemetry folks worry about. It's easy to talk about the topics you
    understand, and just as the LLM conversation reverted back to generic AI for science and the sustainability topic
    reverted back to FLOPS/Watt, this topic of AI for operations reverted back to standard telemetry collection.</p>
<h4 id="industry-attendee-hyperscale">Some are beginning to realize that HPC exists outside of scientific computing</h4>
<p>Despite the pervasive belief at SC24 that "HPC" and "scientific computing" are the same thing, there are early signs
    that the leaders in the community are coming to terms with the reality that there is now a significant amount of
    leadership HPC happening outside the scope of the conference. This was most prominent at the part of the Top500 BOF
    where Erich Strohmaier typically discusses trends based on the latest publication of the list.</p>
<p>In years past, Dr. Strohmaier's talk was full of statements that strongly implied that, if a supercomputer is not
    listed on Top500, it simply does not exist. This year was different though: he acknowledged that El Capitan,
    Frontier, and Aurora were "the three exascale systems <u style="font-style: italic;">we are aware of</u>," now being
    clear that there is room for exascale systems to exist that simply never ran HPL, or never submitted HPL results to
    Top500. He explicitly acknowledged again that China has stopped making any Top500 submissions, and although he
    didn't name them outright, he spent a few minutes dancing around "hyperscalers" who have been deploying exascale
    class systems such as <a href="https://glennklockwood.com/garden/systems/meta's-h100-clusters">Meta's H100
        clusters</a>Â (2x24K H100), <a href="https://glennklockwood.com/garden/systems/colossus">xAI's
        Colossus</a>Â (100K H100), and the full system behind <a href="https://glennklockwood.com/garden/systems/eagle">Microsoft's Eagle</a>Â (14K H100 is a "<a href="https://build.microsoft.com/en-US/sessions/984ca69a-ffca-4729-bf72-72ea0cd8a5db">tiny fraction</a>").</p>
<p>Strohmaier did an interesting analysis that estimated the total power of the Top500 list's supercomputers so he could
    compare it to industry buzz around hyperscalers building gigawatt-sized datacenters:</p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>It was a fun analysis where he concluded that there are between 500-600 megawatts of supercomputers on the Top500
    list, and after you factor in storage, PUE, and other ancillary power sources, the whole Top500 list sums up to what
    hyperscalers are talking about sticking into a single datacenter facility.</p>
<p>Although he didn't say it outright, I think the implication here is that the Top500 list is rapidly losing relevance
    in the broad HPC market, because a significant amount of the world's supercomputing capacity <i>and capability</i>
    are absent from the list. Although specific hyperscale supercomputers (like Meta's, xAI's, and Microsoft's) were not
    mentioned outright, their absence from the Top500 list suggests that this list might already be more incomplete than
    it is complete--the sum of the FLOPS or power on the Top500 supercomputers may be less than the sum of the giant
    supercomputers which are known but not listed. This will only get worse as the AI giants keep building systems every
    year while the government is stuck on its 3-5 year procurement cycles.</p>
<p>It follows that the meaning of the Top500 is sprinting towards a place where it is not representative of HPC so much
    as it is representative of <i>the slice of HPC that serves scientific computing</i>. Erich Strohmaier was clearly
    aware of this in his talk this year, and I look forward to seeing how the conversation around the Top500 list
    continues to morph as the years go on.</p>
<h3 id="industry-nsf">NSF's broad front vs. DOE's big bets in HPC and AI</h3>
<p>My career was started at an NSF HPC center and <a href="https://blog.glennklockwood.com/2022/05/life-and-leaving-nersc.html">built up over my years in the
        DOE</a>, so I feel like I owe a debt to the people who provided all the opportunities and mentorship that let me
    get to the place of privilege in the hyperscale/AI industry that I now enjoy. As a result, I find myself still
    spending a lot of my free time thinking aboutÂ <a href="https://glennklockwood.com/garden/government's-role-in-ai">the role of governments in the changing face of
        HPC</a>Â (as evidenced by my critiques ofÂ <a href="https://blog.glennklockwood.com/2024/10/a-critique-of-call-for-public-ai.html">thinktank reports</a>Â andÂ <a href="https://blog.glennklockwood.com/2024/11/fasst-will-be-does-opportunity-to-adapt.html">federal RFIs</a>...) and trying to bridge the gap
    in technical understanding between my old colleagues (in DOE, NSF, and European HPC organizations) and whatever they
    call what I work on now (hyperscale AI?).</p>
<p>To that end, I found myself doing quite a bit of <i>business development</i> (more on this later) with government
    types since I think that is where I can
    offer the most impact. I used to be government, and I closely follow the state of their thinking in HPC, but I also
    know what's going on inside the hyperscale and AI world. I also have enough context in both areas to draw a line
    through all the buzzy AI press releases to demonstrate how the momentum of private-sector investment in AI might
    affect the way national HPC
    efforts do business. So, I did a lot of talking to both my old colleagues in DOE and their industry partners in an
    attempt to help them understand how the hyperscale and AI industry thinks about infrastructure, and what they should
    expect in the next year.</p>
<p>More importantly though, I also sat in on a couple of NSF-themed BOFs to get a better understanding of where their
    thinking is, where NAIRR is going, how the NSF's strategy contrasts with DOE's strategy, and where the ambitions of
    the Office of Advanced Cyberinfrastructure might intersect with the trajectory of hyperscale AI.</p>
<p>What I learned was that NSF leadership is aware of everything that the community should be concerned about: the
    growth of data, the increasing need for specialized silicon, the incursion of AI into scientific computing, new
    business models and relationships with industry, and broadening the reach of HPC investments to be globally
    competitive. But beyond that, I struggled to see a cohesive vision for the future of NSF-funded
    supercomputing.Â </p>
<p>A BOF with a broad range of stakeholders probably isn't the best place to lay out a vision for the future of NSF's
    HPC efforts, and perhaps NSF's vision is best expressed through its funding opportunities and awards. Whichever the
    case may be, it seems like the NSF remains on a path to make incremental progress on a broad front of topics. Its
    Advanced Computing Systems and Services (ACSS) program will continue to fund the acquisition of newer
    supercomputers, and a smorgasbord of other research programs will continue funding efforts across public access to
    open science, cybersecurity, sustainable software, and other areas. My biggest concern is that peanut-buttering
    funding across such a broad portfolio will make net forward progress much slower than taking big bets. Perhaps big
    bets just aren't in the NSF's mission though.</p>
<p>NAIRR was also a topic that came up in every NSF-themed session I attended, but again, I didn't get a clear picture
    of the future. Most of the discussion that I heard was around socializing the resources that are available today
    through NAIRR, suggesting that the pilot's biggest issue is not a lack of HPC resources donated by industry, but
    awareness that NAIRR is a resource that researchers can use. This was reinforced by a survey whose results were
    presented in the NAIRR BOF:</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>It seems like the biggest challenges facing the NSF community relying on NAIRR (which has its own sample bias) is
    that they don't really know where to start even though they have AI resources (both GPUs and model API services) at
    their disposal. In a sense, this is a great position for the NSF since</p>
<p></p>
<ol>
<li>its users need intellectual help more than access to GPU resources, and the NSF has been great at promoting
        education, training, and workforce development.</li>
<li>its users are unlikely to demand the same cutting-edge GPUs that AI industry leaders are snapping up. For
        example, the largest pool of GPUs in NAIRRÂ are A100 GPUs that NVIDIA donated via DGX Cloud; the big AI
        companies moved off of Ampere a year ago and are about to move off of Hopper.</li>
</ol>
<p></p>
<p>However, it also means that there's not a clear role for partnership with many industry players beyond donating
    resources to the NAIRR pilot today in the hopes of selling resources to the full NAIRR tomorrow. I asked what OAC
    leadership thought about moving beyond such a transactional relationship between NSF and industry at one of the BOFs
    I attended, and while the panelists were eager to explore specific answers to that question, I didn't hear any ideas
    that would approach some sort of truly equitable partnership where both parties contributed in-kind.</p>
<p>I also walked away from these NSF sessions struck by how different the NSF HPC community's culture is from that of
    the DOE. NSF BOF attendees seemed focused on getting answers and guidance from NSF leadership, unlike the typical
    DOE gathering, where discussions often revolve around attendees trying to shape priorities to align with their own
    agendas. A room full of DOE people tends to feel like everyone thinks they're the smartest person there, while NSF
    gatherings appear more diverse in the expertise and areas of depth of its constituents. Neither way is inherently
    better or worse, but it will make the full ambition of NAIRR (as an inter-agency collaboration) challenging to
    navigate. This is particularly relevant as DOE is now pursuing its own multi-billion-dollar AI infrastructure
    effort, FASST, that appears to sidestep NAIRR.</p>
<h3 id="industry-expo">Exhibitor trends</h3>
<p>There's no better way to figure out what's going on in the HPC industry than walking the
    exhibit floor each year, because booths cost money and reflect the priorities (and budgets) of all participants.
    This year's exhibit felt physically huge, and walking from one end to the other was an adventure. You can get a
    sense of the scale from this photo I took during the opening gala:</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>Despite having almost 18,000 registrants and the opening gala usually being a
crush of people, the gala this year felt and looked very sparse just because people and booths were more spread out.
There was also a perceptibly larger number of splashy vendors who have historically never attended before who were
promoting downstream HPC technologies like data center cooling and electrical distribution, and there was healthy
speculation online about whether the hugeness of the exhibit this year was due to these new power and cooling companies.</p>
<p></p>
<p>To put these questions to rest, I figured out how to yank down all the exhibitor metadata
    from the conference website so I could do some basic analysis on it.</p>
<h4 id="industry-expo-booths">Booths by the numbers</h4>
<p>The easiest way to find the biggest companies to appear this year was to compare the
    exhibitor list and booth sizes from SC23 to this year and see whose booth went from zero to some big square footage.
</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>I only took the top twenty new vendors, but they broadly fall into a couple of categories:</p>
<p></p>
<ul>
<li><b>Power and cooling</b>: Stulz, Delta, Airedale, Valvoline, Boundary Electric, Schneider Electric, Mara
        </li>
<li><b>Server manufacturing</b>: Wistron, AMI, Pegatron</li>
<li><b>Higher ed</b>: Tennessee Tech, SCRCC</li>
</ul>
<p>There were a couple other companies that must've just missed last SC but aren't new to
        the show (NetApp, Ansys, Samsung, Micron, Broadcom). And curiously, only one new GPU-as-a-Service provider
        (Nebius) showed up this year, suggesting last year was the year of the GPU Cloud.</p>
<p>But to confirm what others had speculated: yes, a significant amount of the new square
        footage of the exhibit floor can be attributed to companies focused on power and cooling. This is an interesting
        indicator that HPC is becoming mainstream, largely thanks to AI demanding ultra-high density of power and
        cooling. But it's also heartening to see a few new exhibitors in higher education making an appearance. Notably,
        SCRCC (South Carolina Research Computing Consortium) is a consortium between Clemon, University of South
        Carolina, and Savannah River National Laboratory that just formed last year, and I look forward to seeing what
        their combined forces can bring to bear.</p>
<p>We can also take a look at whose booths grew the most compared to SC23:</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>This distribution is much more interesting, since the top 20 exhibitors who grew their footprint comprise the
        majority of the growth in existing exhibitors. Cherry-picking a few interesting growers:</p>
<p></p>
<ul>
<li><b>Power and cooling</b>: USystems, Midas, Vertiv</li>
<li><b>Data center/GPUaaS</b>: iM, Iris Energy, and (arguably) Oracle</li>
<li><b>Software</b>: Arc Compute and CIQ</li>
<li><b>Companies facing serious financial or legal troubles</b>: I count at least three! Impressive that they
            are still pouring money into their SC booths.</li>
</ul>
<p>It's also interesting to see HLRS, the German national HPC center, grow so
        significantly. I'm not sure what prompted such a great expansion, but I take it to mean that things have been
        going well there.</p>
<p>Finally, Dell had a massive booth and showing this year. Not only did they grow the
        most since SC23, but they had the single largest booth on the exhibit floor at SC24. This was no doubt a result
        of their great successes in partnering with NVIDIA to land massive GPU buildout deals at places like <a href="https://qz.com/dell-super-micro-computer-stock-elon-musk-ai-nvidia-1851550428">xAI</a> and <a href="https://www.tomshardware.com/tech-industry/artificial-intelligence/dell-reaches-milestone-with-industrys-first-enterprise-ready-nvidia-blackwell-poweredge-xe9712-server-racks">CoreWeave</a>.
        They also had "AI factory" messaging emblazoned all over their marketing material and debuted a nice 200 kW
        liquid-cooled rack that will be the basis for their GB200 NVL72 solution, clearly leaning into the idea that
        they are leaders in AI infrastructure. Despite this messaging being off-beat for the SC audience as I've
        described earlier, their booth was surprisingly full all the time, and I didn't actually get a chance to get in
        there to talk to anyone about what they've been doing.</p>
<p>Equally interesting are the vendors who reduced their footprint at SC24 relative to
        SC23:</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>Reading too much into any of these big shrinkers is pretty easy; while a reduction in
        booth size could suggest business hasn't been as good, it could equally mean that an exhibitor just went
        overboard at SC23 and downsized to correct this year. A few noteworthy exhibitors to call out:</p>
<p></p>
<ul>
<li>Penguin and the Korea Semiconductor Industry Association both cut way back from massive 50x50 booths to
            30x30. Their booths this year were both big, but they weren't massive. Viridien, formerly known as CGG, also
            shrunk from a massive booth to a less-massive 30x40.</li>
<li>Juniper still kept an independent booth, but it is in the <a href="https://www.hpe.com/us/en/newsroom/press-release/2024/01/hpe-to-acquire-juniper-networks-to-accelerate-ai-driven-innovation.html">process
                of being absorbed into HPE</a>. Shrinking makes sense.</li>
<li>Major cloud providers Google and AWS scaled back, but Microsoft did not.</li>
<li>GPU-as-a-Service cloud providers CoreWeave and Lambda both scaled back. Since these GPUaaS providers'
            business models typically rely on courting few big customers, it may make sense to cut back on booth volume.
        </li>
<li>Major AI storage companies DDN, VAST, and (to a lesser degree) Pure also scaled back, while WEKA did not. I
            know business for DDN and VAST has been great this past year, so these may just reflect having gone
            overboard last year.</li>
</ul>
<p>Overall, almost twice as many vendors grew their booths than scaled back, so I'd
        caution anyone against trying to interpret any of this as anything beyond exhibitors right-sizing their booths
        after going all-in last year.</p>
<p>Finally, there are a handful of vendors who disappeared outright after SC23:</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>It is critical to point out that the largest booths to vanish outright were all on the
        smaller size: SUSE, Tenstorrent, and Symbiosys Alliance all disappeared this year, but their booths last year
        were only 20x30. I was surprised to see that Tenstorrent and Arm didn't have booths, but the others are either
        companies I haven't heard of (suggesting the return on investment of showing at SC might've been low), are easy
        to rationalize as only being HPC-adjacent (such as SNIA and DigitalOcean), or simply went bankrupt in the last
        year.</p>
<p>As we say at the business factory, the net-net of the exhibit hall this year is that
        the square footage of booth space increased by 15,000 square feet, so it was in fact bigger, it did take longer
        to walk from one end to the other, and there definitely were a bunch of new power and cooling companies filling
        out the space. Some exhibitors shrank or vanished, but the industry as a whole appears to be moving in a healthy
        direction.</p>
<p>And if you're interested in analyzing this data more yourself, please have a look at <a href="https://github.com/glennklockwood/sc-exhibitors">the data and the Jupyter notebook I used to generate
            the above treemaps on GitHub</a>. If you discover anything interesting, please write about it and post it
        online!</p>
<p></p>
<p></p>
<h4 id="industry-expo-gpuaas">Proliferation of GPU-as-a-Service providers</h4>
<p>As an AI infrastructure person working for a major cloud provider, I kept an eye out for all the companies trying
        to get into the GPU-as-a-Service game. <a href="https://blog.glennklockwood.com/2023/11/sc23-recap.html">I described these players last year as
            "pure-play GPU clouds,"</a> and it seems like the number of options available to customers who want to go
        this route is growing. But I found it telling that a lot of them had booths that were completely
        indistinguishable from each other. Here's an example of one:</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>As best I can tell, these companies are all NVIDIA preferred partners with
    data centers and a willingness to deploy NVIDIA GPUs, NVIDIA SmartNICs, and NVIDIA cloud stack, and sell multi-year
    commitments to consume those GPUs. I tried to accost some of these companies' booth staff to ask them my favorite
    question ("What makes you different from everyone else?"), but most of these companies' booths were staffed by
    people more interested in talking to each other than me.</p>
<p>These GPUaaS providers tend to freak me out, because, as Microsoft's CEO recently stated, these companies are
        often "<a href="https://www.microsoft.com/en-us/Investor/events/FY-2025/earnings-fy-2025-q1">just a bunch of
            tech companies still using VC money to buy a bunch of GPUs</a>." I can't help but feel like this is where
        the AI hype will come back to bite companies who have chosen to build houses upon sand. Walking the SC24 exhibit
        floor is admittedly a very narrow view of this line of business, but it seemed like some of these companies were
        content to buy up huge booths, hang a pretty banner above it, and otherwise leave the booth empty of anything
        beyond a few chairs and some generic value propositions. I didn't feel a lot of hunger or enthusiasm from these
        companies despite the fact that a bunch of them have hundreds of millions of dollars of GPUs effectively sitting
        on credit cards that they are going to have to make payments on for the next five years.</p>
<p>That all said, not all the companies in the GPUaaS are kicking back and letting the money pour in. In particular,
        I spent a few minutes chatting up someone at the CoreWeave booth, and I was surprised to hear about how much
        innovation they're adding on top of their conventional GPUaaS offering. For example, they developed <a href="https://docs.coreweave.com/coreweave-machine-learning-and-ai/training/sunk">Slurm on Kubernetes
            (SUNK)</a> with one of their key customers to close the gap between the fact that CoreWeave exposes its GPU
        service through Kubernetes, but many AI customers have built their stack around Slurm, <a href="https://github.com/NVIDIA/pyxis">pyxis</a>, and <a href="https://github.com/NVIDIA/enroot">enroot</a>.
    </p>
<p>In a weird twist of fate, I later ran into an old acquaintance who turned out to be one of the key CoreWeave
        customers for whom SUNK was developed. He commented that SUNK is the real deal and does exactly what his users
        need which, given the high standards that this person has historically had, is a strong affirmation that SUNK is
        more than just toy software that was developed and thrown on to GitHub for an easy press release. CoreWeave is
        also developing some interesting high-performance object storage caching software, and all of these software
        services are provided at no cost above whatever customers are already paying for their GPU service.</p>
<p>I bring this up because it highlights an emerging distinction in the GPUaaS market, which used to be a homogenous
        sea of bitcoin-turned-AI providers. Of course, many companies still rely on that simple business model: holding
        the bill for rapidly depreciating GPUs that NVIDIA sells and AI startups consume. However, there are now GPUaaS
        providers moving up the value chain by taking on the automation and engineering challenges that model developers
        don't want to deal with. Investing in uncertain projects like new software or diverse technology stacks is
        certainly risky, especially since they may never result in enough revenue to pay for themselves. But having a
        strong point of view, taking a stance, and investing in projects that you feel are right deserves recognition.
        My hat is off to the GPUaaS providers who are willing to take these risks and raise the tide for all of us
        rather than simply sling NVIDIA GPUs to anyone with a bag of money.</p>
<h2 id="community">Community and connections</h2>
<p>As much as I enjoy <i>increasing shareholder value</i>, the part of SC that gives me the
    greatest joy is reconnecting with the HPC community. Knowing I'll get to chat with my favorite people in the
    industry (and meet some new favorite people!) makes the long plane rides, upper respiratory infections, and weird
    hotel rooms completely worth it.</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>I wound up averaging under six hours of sleep per night this year in large part because 9pm
    or 7am were often the only free times I had to meet with people I really wanted to see. I have this unhealthy
    mindset where every hour of every day, from the day I land to the day I leave, is too precious to waste, and it's
    far too easy for me to rationalize that spending an hour talking to someone interesting is worth losing an hour of
    sleep.</p>
<p>But like I said at the outset of this blog post, this year felt different for a few
    reasons, and a lot of them revolve around the fact that I think I'm getting old. Now, it's always fun to say "I'm
    getting old" in a mostly braggadocious way, but this feeling manifested in concrete ways that affected the way I
    experienced the conference:</p>
<p></p>
<ol>
<li>I hit my limit on Monday night and couldn't get home without spending 15 minutes sitting in an unlit playground
        across from the World of Coke. I've always gotten blisters and fatigue, but this was the first time I couldn't
        just cowboy up and muscle through it. To avoid a repeat of this, I wound up "wasting" (see above) a lot more
        time to just get off my feet this year.</li>
<li>This year, I reached the pointÂ where I need to start time-box how much time I spend chatting up the folks I
        bump into. I used to just let the good times roll if I ran into someone I knew, but this year I wound up
        spending as much time attending sessions as I did missing sessions because I got caught up in a conversation.
        This isn't a bad thing per se, but I did feel a little sour when I realized I'd made a bad bet on choosing to
        chat instead of attending a session or vice versa, and this bad feeling lingered in the back of my mind just
        about every day.</li>
<li>There weren't a lot of surprises for me at the conference this year, and I worry that I am at risk of losing
        touch with the technical aspects of the conference that get newer attendees excited. Instead of hearing about,
        say, the latest research in interconnects, more of my time was spent mucking it up with the sorts of people in
        the HPC community who I used to find intimidating. On the one hand, hooray me for making it into old boys'
        clubs. But on the other, I don't want to become some HPC greybeard whose last meaningful contribution to the
        industry was twenty years ago.</li>
<li>This is the first year where I've had people accost me <i>and ask me for advice</i>. I've long been accosted by
        strangers because of my online presence, but those interactions were always lighthearted exchanges of "I follow
        you on Twitter" and "Great to meet you. Have an @HPC_Guru pin." This year, I had people specifically ask me for
        advice on industry versus postdoc, AI versus HPC, and what my master plan was when I left NERSC. Even though I
        didn't have any sage advice, I still found it really hard to tell bright-eyed students to go kick rocks just so
        I wouldn't be late for yet another mushy panel on AI.</li>
</ol>
<p>If you read this all and think "boo hoo, poor Glenn is too popular and wise for his own
    good," yeah, I get it. There are worse problems to have. But this was the first year where I felt like what I put
    into the conference was greater than what I got out of it. Presenting at SC used to be at least as good for my
    career as it was useful for my audiences, but it just doesn't count for much given my current role and career stage.
    It felt like some of the magic was gone this year in a way I've never experienced before.Â </p>
<p></p>
<h3 id="community-people">Getting to know people</h3>
<p>As the years have gone on, I spend an increasing amount of my week having one-on-one
    conversations instead of wandering aimlessly. This year though, I came to SC without really having anything to buy
    or sell:</p>
<p></p>
<ul>
<li>I am not a researcher, so I don't need to pump up the work I'm doing to impress my fellow researchers.</li>
<li>I no longer own a product market segment, so I don't directly influence the customers or vendors with whom my
        employer works.</li>
<li>I don't have any bandwidth in my day job to support any new customers or partnerships, so I don't have a strong
        reason to sell people on partnering with me or my employer.Â </li>
</ul>
<p>Much to my surprise though, a bunch of my old vendor/partner colleagues still wanted to get
    together to chat this year. Reflecting back, I was surprised to realize that it was these conversations--not the
    ones about business--that were the most fulfilling this year.</p>
<p>I learned about people's hobbies, families, and their philosophies on life, and it was
    amazing to get to know some of the people behind the companies with whom I've long dealt. I was reminded that the
    person is rarely the same as the company, and even behind some of the most aggressive and blusterous tech companies
    are often normal people with the same concerns and moments of self-doubt that everyone else has. I was also reminded
    that good engineers appreciate good engineering regardless of whether it's coming from a competitor or not. The
    public persona of a tech exec may not openly admire a competitor's product, but that doesn't mean they don't know
    good work when they see it.</p>
<p>I also surprised a colleague whose career has been in the DOE labs with an anecdote that
    amounted to the following: even though two companies may be in fierce competition, the people who work for them
    don't have to be. The HPC community is small enough that almost everyone has got a pal at a competing company, and
    when there are deals to be made, people looove to gossip. If one salesperson hears a juicy rumor about a prospective
    customer, odds are that everyone else on the market will hear about it pretty quickly too. Of course, the boundaries
    of confidentiality and professionalism are respected when it matters, but the interpersonal relationships that are
    formed between coworkers and friends don't suddenly disappear when people change jobs.</p>
<p>And so, I guess it would make sense that people still want to talk to me even though I have
    nothing to buy or sell. I love trading gossip just as much as everyone else, and I really enjoyed this aspect of the
    week.</p>
<p></p>
<h3 id="community-career">Talking to early career people</h3>
<p>I also spent an atypically significant amount of my week talking to early career people in
    HPC who knew of me one way or another and wanted career advice. This is the first year I recall having the same
    career conversations with multiple people, and this new phase of my life was perhaps most apparent during the IEEE
    TCHPC/TCPP HPCSC career panel in which I was invited to speak this year.</p>
<p></p>
<div class="separator" style="clear: both; text-align: center;"><figure></figure></div>
<p></p>
<p>It was an honor to be asked to present on a career panel, but I didn't feel very qualified to give career advice to
    up-and-coming computer science graduate students who want to pursue HPC. I am neither a computer scientist nor a
    researcher, butÂ fortunately for me, my distinguished co-panelists (Drs. Dewi Yokelson, Olga Pearce, YJ Ji, and
    Rabab Alomairy) had plenty of more relevant wisdom to share. And at the end of the panel, there were a few things we
    all seemed to agree on as good advice:</p>
<p></p>
<ol>
<li>Knowing stuff is good, but being able to learn things is better. Being eager to learn and naturally curious
        makes this much easier as well.</li>
<li>The life of a researcher sometimes requires more than working a standard nine-to-five, so it'll be hard to be
        really successful if your heart isn't in it.</li>
<li><a href="https://quoteinvestigator.com/2014/04/06/they-feel/">People will forget what you did or what you said,
            but they remember how you made them feel</a>. Don't be a jerk, because this community is small.</li>
</ol>
<p></p>
<p>In both this panel the one-on-one conversations I had with early career individuals, the best I could offer was the
    truth: I never had a master plan that got me to where I am; I just try out new things until I realize I don't like
    doing them anymore. I never knew what I wanted to be when I grew up, and I still don't really, so it now makes me
    nervous that people have started approaching me with the assumption that I've got it all figured out. Unless I
    torpedo my career and go live on a goat farm though, maybe I should prepare for this to be a significant part of my
    SC experiences going forward.</p>
<h3 id="community-bsky">Shift in social media</h3>
<p>One last, big change in the community aspect of SC this year was the mass-migration of a ton of HPC folks from
    Twitter to Bluesky during the week prior to the conference. I don't really understand what prompted it so suddenly;
    a few of us have been trying for years to get some kind of momentum on other social platforms like Mastodon, but the
    general lack of engagement meant that all the excitement around SC always wound up exclusively on Twitter. This year
    was different though, and Bluesky hit critical mass with the HPC community.</p>
<p>I personally have never experienced an SC conference without Twitter; my first SC was in 2013, and part of what made
    that first conference so exciting was being able to pull up my phone and see what other people were seeing,
    thinking, and doing across the entire convention center via Twitter. Having the social media component to the
    conference made me feel like I was a part of something that first year, and as the years went on, Twitter became an
    increasingly indispensable part of the complete SC experience for me.</p>
<p>This year, though, I decided to <a href="https://x.com/glennklockwood/status/1857571101028790498">try an
        experiment</a> and see what SC would be like if I set Twitter aside and invested my time into Bluesky instead.
</p>
<p>The verdict? <i>It was actually pretty nice.</i></p>
<p>It felt a lot like the SC13 days, where my day ended and began with me popping open Bluesky to see what new <a href="https://bsky.app/hashtag/sc24">#SC24</a> posts were made. And because many of the tech companies and HPC
    centers hadn't yet made it over, the hashtag wasn't clogged up by a bunch of prescheduled marketing blasts that
    buried the posts written by regular old conference attendees who wereÂ <a href="https://bsky.app/profile/walkingrandomly.bsky.social/post/3lbazofprgc2y">asking important questions</a>:</p>
<blockquote class="bluesky-embed"><p lang="en">Which booths at #sc24 have coffee? I noticed oracle do. Anyone else?</p>
â Mike Croucher (<a href="https://bsky.app/profile/did:plc:sd6xejkhcmyehbscxb5lz3uq?ref_src=embed">@walkingrandomly.bsky.social</a>) <a href="https://bsky.app/profile/did:plc:sd6xejkhcmyehbscxb5lz3uq/post/3lbazofprgc2y?ref_src=embed">November 18, 2024 at 3:02 PM</a></blockquote>
<p>Of course, I still clogged Bluesky up with my nonsense during the week, but there was an amazing amount of
    engagement by a diversity of thoughtful people--many who came from Twitter, but some whose names and handles I
    didn't recognize.</p>
<p>The volume of traffic on Bluesky during the week did feel a little lower than what it had been on Twitter in years
    past though. I also didn't see as many live posts of technical sessions as they happened, so I couldn't really tell
    whether I was missing something interesting in real time. This may have contributed to why I felt a little less
    connected to the pulse of the conference this year than I had in the past. It also could've been the fact that
    conference was physically smeared out across a massive space though; the sparsity of the convention center was at
    least on par with the sparsity on Bluesky.</p>
<p>At the end of the week, I didn't regret the experiment. In fact, I'll probably be putting more effort into my Bluesky
    account than my Twitter account going forward. To be clear though, this isn't a particularly political decision on
    my part, and I pass no judgment on anyone who wants to use one platform over the other. It's just that I like the
    way I feel when I scroll through my Bluesky feeds, and I don't get that same feeling when I use Twitter.</p>
<h2 id="conclusion">So what's the takeaway?</h2>
<p>SC this year was a great conference by almost every measure, as it always is, but it still felt a little different for me. I'm sure that some of that feeling is the result of my own growth, and my role with respect to the conference seems to be evolving from someone who gets a lot out of the conference to someone who is giving more to the conference. That's not to say that I don't get a lot out of it, though; I had no shortage of wonderful interactions with everyone from technology executives to rising stars who are early in their career, and I learned a lot about both them and me as whole people. But SC24, more than any SC before it, is when I realized this change was happening.</p>
<p>On the technological front, we saw the debut of a new #1 system (emblazoned with the smiling face of Bronis...) and a growing crop of massive, new clusters deployed for commercial applications. The exhibit floor was quantitatively bigger, in large part due to new power and cooling companies who are suddenly relevant to the HPC world thanks to the momentum of AI. At the same time, the SC technical program is clearly separating itself out as a conference focused on scientific computing; the level of discourse around AI remains largely superficial compared to true AI conferences, the role of hyperscalers in the HPC industry is still cast more as a threat than an opportunity.</p>
<p>For my part, I'm still trying to get a grasp on where government agencies like DOE and NSF want to take their AI ambitions so I can try to help build a better mutual understanding between the scientific computing community and the hyperscale AI community. However, it seems like the NSF is progressing slowly on a wide front, while the DOE is doing what DOE does and charging headfirst into a landscape that has changed more than I think they realize.</p>
<p>There's a lot of technical content that I know I missed on account of the increasing time I've been spending on the people and community aspect of the conference, and I'm coming to terms with the idea that this just may be the way SC is from now on. And I think I'm okay with that, since the support of the community is what helped me go from being a bored materials science student into someone whose HPC career advice is worth soliciting in the short span of eleven years. Despite any or all of the cynicism that may come out in the things I say about this conference, SC is always the highlight of my year. I always go into it with excitement, gladly burn the candle at both ends all week, and fly home feeling both grateful for and humbled by everything the HPC community has done and continues to do to keep getting me out of bed in the morning.</p>
<p></p>]]></content><author><name>Glenn K. Lockwood&apos;s Blog</name></author><category term="glennklockwood" /><summary type="html"><![CDATA[The premiere annual conference of the high-performance computing community, SC24, was held in Atlanta last week, and it attracted a record-shattering number of attendees--nearly 18,000 registrants, up 28% from last year! The conference felt big as well, and there seemed to be a lot more running between sessions, meetings, and the exhibition floor. Despite its objectively bigger size though, the content of the conference felt more diffuse this year, and I was left wondering if this reflected my own biases or was a real effect of the AI industry beginning to overflow into AI-adjacent technology conferences like SC. Of course, this isn't to say that SC24 was anything short of a great conference. Some exciting new technologies were announced, a new supercomputer beat out Frontier to become the fastest supercomputer on the Top500 list, and I got to catch up with a bunch of great people that I only get to see at shows like this. I'll touch on all of these things below. But this year felt different from previous SC conferences to me, and I'll try to talk about that too. There's no great way to arrange all the things I jotted down in my notes, but I've tried to arrange them by what readers may be interested in. Here's the table of contents: My approach to SC this year New technology and announcements Top500 and a new #1 system #1 - El Capitan #5 - Eni HPC6 #16 and #17 - SoftBank CHIE-2 and CHIE-3 #18 - JÃ¼lich's JUPITER Exascale Transition Instrument (JETI) #32 - Reindeer! Technology on the exhibit floor GB200 Slingshot 400 Grace-Grace for storage? Microsoft and AMD's new HBM CPU The HPC industry overall What I learned about the average SC technical program attendee People think sustainability and energy efficiency are the same thing AI sessions are really scientific computing sessions about AI AI for operations is not yet real in scientific computing Some are beginning to realize that HPC exists outside of scientific computing NSF's broad front vs. DOE's big bets in HPC and AI Exhibitor trends Booths by the numbers Proliferation of GPU-as-a-Service providers Community and connections Getting to know people Talking to early career people Shift in social media So what's the takeaway? Before getting into the details though, I should explain how my perspective shaped what I noticed (and missed) through the conference. And to be clear: these are my own personal opinions and do not necessarily reflect those of my employer. Although Microsoft covered the cost for me to attend SC, I wrote this blog post during my own free time over the Thanksgiving holiday, and nobody had any editorial control over what follows except me. My approach to SC this year Although this is the eleventh SC conference I've attended, it was the first time that I: attended as aÂ practitioner of hyperscale AIÂ rather than traditional HPC and scientific computing attended as a Microsoft engineer (I represented Microsoft as a product manager at SC22 and SC23) did not attend SC as a designated storage person (since 2013) Because of these changes in my identity as an attendee, I approached the conference with a different set of goals in mind: As a hyperscale/AI person, I felt that I should prioritizeÂ attending all the cloud and AI sessionsÂ whenever forced to choose between one session or another. I chose to focus on understanding the traditional HPC community's understanding of hyperscale and AI, which meant I had to spend less time in the workshops, panels and BOFs where I built my career. As an engineer rather than a product manager, it wasn't my primary responsibility to run private briefings and gather HPC customers' requirements and feedback. Instead, I prioritized only those meetings where my first-hand knowledge of how massive-scale AI training works could have a meaningful impact. This meant IÂ focused on partners and practitioners who also operate in the realm of hyperscale--think massive, AI-adjacent companies and the HPC centers who have historically dominated the very top of the Top500 list. One thing I didn't anticipate going into SC24 is that I've inherited a third identity: there are a new cohort of people in HPC who see me as a long-time community member. This resulted in a surprising amount of my time being spent talking to students and early career practitionersÂ who were looking for advice. These three identities and goals meant I don't many notes to share on the technical program, but I did capture more observations about broader trends in the HPC industry and community. New technology and announcements HPC is all about cutting-edge technology, so that's a fine place to start talking about what was new. Top500 and a new #1 system A cornerstone of every SC conference is the release of the new Top500 list on Monday, and this is especially true on years when a new #1 supercomputer is announced. As was widely anticipated in the weeks leading up to SC24, El Capitan unseated Frontier as the new #1 supercomputer this year, posting an impressive 1.74 EFLOPS of FP64. In addition though, Frontier grew a little (it added 400 nodes), there was a notable new #5 system (Eni's HPC6), and a number of smaller systems appeared that are worth calling out. #1 - El Capitan The highlight of the Top500 list was undoubtedly the debut of El Capitan, Lawrence Livermore National Laboratory's massive new MI300A-based exascale supercomputer. Its 1.74 EF score resulted from a 105-minute HPL run that came in under 30 MW, and a bunch of technical details about the system were disclosed by Livermore Computing's CTO, Bronis de Supinski, during an invited talk during the Top500 BOF. Plenty of others summarize the system's speeds and feeds (e.g., see The Next Platform's article on El Cap), so I won't do that. However, I will comment on how unusual Bronis' talk was. Foremost, the El Capitan talk seemed haphazard and last-minute. Considering the system took over half a decade of planning and cost at least half a billion dollars, El Capitan's unveiling was the most unenthusiastic description of a brand-new #1 supercomputer I've ever seen. I can understand that the Livermore folks have debuted plenty of novel #1 systems in their careers, but El Capitan is objectively a fascinating system, andÂ running a full-system job for nearly two hours across first-of-a-kind APUs is an amazing feat. If community leaders don't get excited about their own groundbreaking achievements, what kind of message should the next generation of HPC professionals take home? In sharp contrast to the blasÃ© announcement of this new system was the leading slide that was presented to describe the speeds and feeds of El Capitan: I've never seen a speaker take the main stage and put a photo of himself literally in the center of the slide, in front of the supercomputer they're talking about. I don't know what the communications people at Livermore were trying to do with this graphic, but I don't think it was intended to be evocative of the first thing that came to my mind: The supercomputer is literally named "The Captain," and there's a photo of one dude (the boss of Livermore Computing, who is also standing on stage giving the talk) blocking the view of the machine. It wasn't a great look, and it left me feeling very uneasy about what I was witnessing and what message it was sending to the HPC community. In case it needs to be said, HPC is a team sport. The unveiling of El Capitan (or any other #1 system before it) is always the product of dozens, if not hundreds, of people devoting years of their professional lives to ensuring it all comes together. It was a big miss, both to those who put in the work, and those who will have to put in the work on future systems, to suggest that a single, smiling face comes before the success of the system deployment. #5 - Eni HPC6 The other notable entrant to the Top 10 list was HPC6, an industry system deployed by Eni (a major Italian energy company) built on MI250X. Oil and gas companies tend to be conservative in the systems they buy since the seismic imaging done on their large supercomputers informs hundred-million to billion-dollar investments in drilling a new well, and they have much less tolerance for weird architectures than federally funded leadership computing does. Thus, Eni's adoption of AMD GPUs in this #5 system is a strong endorsement of their capability in mission-critical commercial computing. #16 and #17 - SoftBank CHIE-2 and CHIE-3 SoftBank, the Japanese investment conglomerate who, among other things, owns a significant stake in Arm, made its Top500 debut with two identical 256-node DGX H100 SuperPODs. While not technologically interesting (H100 is getting old), these systems represent significant investment in HPC by private industry in Japan and signals that SoftBank is following the lead of large American investment groups in building private AI clusters for the AI startups in their portfolios. In doing this, SoftBank's investments aren't dependent on third-party cloud providers to supply the GPUs to make these startups successful and reduces their overall risk. Although I didn't hear anything about these SoftBank systems at the conference, NVIDIA issued a press statement during the NVIDIA AI Summit Japan during the week prior to SC24 that discussed SoftBank's investment in large NVIDIA supercomputers. The press statement states that these systems will be used "for [SoftBank's] own generative AI development and AI-related business, as well as that of universities, research institutions and businesses throughout Japan." The release also suggests we can expect B200 and GB200 SuperPODs from SoftBank to appear as those technologies come online. #18 - JÃ¼lich's JUPITER Exascale Transition Instrument (JETI) Just below the SoftBank systems was the precursor system to Europe's first exascale system. I was hoping that JUPITER, the full exascale system being deployed at FRJ, would appear in the Top 10, but it seems like we'll have to wait for ISC25 for that. Still, the JETI system ran HPL across 480 nodes of BullSequana XH3000, the same node that will be used in JUPITER, and achieved 83 TFLOPS. By comparison, the full JUPITER system will be over 10x larger ("roughly 6000 compute nodes" in the Booster), and projecting the JETI run (173 TF/node) out to this full JUPITER scale indicates that JUPITER should just squeak over the 1.0 EFLOPS line. In preparation for JUPITER, Eviden had a couple of these BullSequana XH3000 nodes out on display this year: And if you're interested in more, I've been tracking the technical details of JUPITER in my digital garden. #32 - Reindeer! Waay down the list was Microsoft's sole new Top500 entry this cycle, an NVIDIA H200 system that ran HPL over 120 ND H200 v5 nodes in Azure. It was one of only two conventional (non-Grace) H200 clusters that appeared in the top 100, and it had a pretty good efficiency (Rmax/Rpeak &gt; 80%). Microsoft also had a Reindeer node on display at its booth: An astute observer may note that this node looks an awful lot like the H100 node used in its Eagle supercomputer, which was on display at SC23 last year. That's because it's the same chassis, just with an upgraded HGX baseboard. Reindeer was not super exciting, and there were no press releases about it, but I mention it here for a couple reasons: One of my teammates did the HPL run and submission, and his group got to come up with the name of the system for the purposes of HPL. As it turns out, generating a public name for a Top500 submission involves a comical amount of legal and marketing process when it comes from a giant corporation like Microsoft. And as it turns out, naming a cluster "Reindeer" has a low probability of offending anyone. Reindeer is pretty boring--it's a relatively small cluster with a bunch of GPUs. But when you're building out AI infrastructure at a pace of 5x Eagles (70,000 GPUs!) per month, you want the clusters that those GPUs go into to be as boring, predictable, and automatable as possible. Seeing as how Reindeer only used 960 GPUs but still got #32, it doesn't require much math to realize that the big hyperscalers could flood the Top500 list with these cookie-cutter GPU clusters and (in this case) make any ranking below #32 completely irrelevant. Heaven help the Top500 list if they ever publish an API for submitting new systems; cloud providers' build validation automation could tack a Top500 submission on at the end of burn-in and permanently ruin the list. On a personal note, the supercomputer grant that gave me my first job in the HPC business debuted at #48. It's mind-boggling that I now work in a place where standing up a #32 system is just day-to-day business. Technology on the exhibit floor The exhibit floor had a few new pieces of HPC technology on display this year that are worthy of mention, but a lot of the most HPC-centric exciting stuff actually had a soft debut at ISC24 in May. For example, even though SC24 was MI300A's big splash due to the El Capitan announcement, some MI300A nodes (such as the Cray EX255a) were on display in Hamburg. However, Eviden had their MI300A node (branded XH3406-3) on display at SC24 which was new to me: I'm unaware of anyone who's actually committed to a large Eviden MI300A system, so I was surprised to see that Eviden already has a full blade design. But as with Eni's HPC6 supercomputer, perhaps this is a sign that AMD's GPUs (and now APUs) have graduated from being built-to-order science experiments to a technology ecosystem that people will want to buy off the rack. There was also a ton of GH200 on the exhibit hall floor, but again, these node types were also on display at ISC24. This wasn't a surprise since a bunch of upcoming European systems have invested in GH200 already; in addition to JUPITER's 6,000 GH200 nodes described above, CSCS Alps has 2,688 GH200 nodes, and Bristol's Isambard-AI will have 1,362 GH200 nodes. All of these systems will have a 1:1 CPU:GPU ratio and an NVL4 domain, suggesting this is the optimal way to configure GH200 for HPC workloads. I didn't hear a single mention of GH200 NVL32. GB200 SC24 was the debut of NVIDIA's Blackwell GPU in the flesh, and a bunch of integrators had material on GB200 out at their booths. Interestingly, they all followed the same pattern as GH200 with an NVL4 domain size, and just about every smaller HPC integrator followed a similar pattern where their booth had a standard "NVIDIA Partner" (or "Preferred Partner!") placard on their main desk they had a bare NVIDIA GB200 baseboard (superchip) on display there wasn't much other differentiation From this, I gather that not many companies have manufactured GB200 nodes yet, or if they have, there aren't enough GB200 boards available to waste them on display models. So, we had to settle for these bare NVIDIA-manufactured, 4-GPU + 2-CPU superchip boards: What struck me is that these are very large FRUs--if a single component (CPU, GPU, voltage regulator, DRAM chip, or anything else) goes bad, you have to yank and replace four GPUs and two CPUs. And because all the components are soldered down, someone's going to have to do a lot of work to remanufacture these boards to avoid throwing out a lot of very expensive, fully functional Blackwell GPUs. There were a few companies who were further along their GB200 journey and had more integrated nodes on display. The HPE Cray booth had this GB200 NVL4 blade (the Cray EX154n) on display: It looks remarkably sparse compared to the super-dense blades that normally slot into the Cray EX line, but even with a single NVL4 node per blade, the Cray EX cabinet only supports 56 of these blades, leaving 8 blade slots empty in the optimal configuration. I assume this is a limitation of power and cooling. The booth collateral around this blade suggested its use case is "machine learning and sovereign AI" rather than traditional HPC, and that makes sense since each node has 768 GB of HBM3e which is enough to support training some pretty large sovereign models. However, the choice to force all I/O traffic on to the high-speed network by only leaving room for one piddly node-local NVMe drive (this blade only supports one SSD per blade) will make training on this platform very sensitive to the quality of the global storage subsystem. This is great if you bundle this blade with all-flash Lustre (like Cray ClusterStor) or DAOS (handy, since Intel divested the entire DAOS development team to HPE). But it's not how I would build an AI-optimized system. I suspect the cost-per-FLOP of this Cray GB200 solution is much lower than what a pure-play GB200 for LLM training would be. And since GB200 is actually a solid platform for FP64 (thanks to Dan Ernst for challenging me on this and sharing some great resources on the topic), I expect to see this node do well in situations that are not training frontier LLMs, but rather fine-tuning LLMs, training smaller models, and mixing in traditional scientific computing on the same general-purpose HPC/AI system. Speaking of pure-play LLM training platforms, though, I was glad that very few exhibitors were trying to talk up GB200 NVL72 this year. It may have been the case that vendors simply aren't ready to begin selling NVL72 yet, but I like to be optimistic and instead believe that the exhibitors who show up to SC24 know that the scientific computing community likely won't get enough value out of a 72-GPU coherence domain to justify the additional cost and complexity of NVL72. I didn't see a single vendor with a GB200 NVL36 or NVL72 rack on display (or a GH200 NVL32, for that matter), and not having to think about NVL72 for the week of SC24 was a nice break from my day job. Perhaps the closest SC24 got to NVL72 was a joint announcement at the beginning of the week by Dell and CoreWeave, who announced that they have begun bringing GB200 NVL72 racks online. Dell did have a massive, AI-focused booth on the exhibit floor, and they did talk up their high-powered, liquid-cooled rack infrastructure. But in addition to supporting GB200 with NVLink Switches, I'm sure that rack infrastructure would be equally good at supporting nodes geared more squarely at traditional HPC. Slingshot 400 HPE Cray also debuted a new 400G Slingshot switch, appropriately named Slingshot 400. I didn't get a chance to ask anyone any questions about it, but from the marketing material that came out right before the conference, it sounds like a serdes upgrade without any significant changes to Slingshot's L2 protocol. There was a Slingshot 400 switch for the Cray EX rack on display at their booth, and it looked pretty amazing: It looks way more dense than the original 200G Rosetta switch, and it introduces liquid-cooled optics. If you look closely, you can also see a ton of flyover cables connecting the switch ASIC in the center to the transceivers near the top; similar flyover cables are showing up in all manner of ultra-high-performance networking equipment, likely reflecting the inability to maintain signal integrity across PCB traces. The port density on Slingshot 400 remains the same as it was on 200G Slingshot, so there's still only 64 ports per switch, and the fabric scale limits don't increase. In addition, the media is saying that Slingshot 400 (and the GB200 blade that will launch with it) won't start appearing until "Fall 2025." Considering 64-port 800G switches (like NVIDIA's SN5600 and Arista's 7060X6) will have already been on the market by then though, Slingshot 400 will be launching with HPE Cray on its back foot. However, there was a curious statement on the placard accompanying this Slingshot 400 switch: It reads, "Ultra Ethernet is the future, HPE Slingshot delivers today!" Does this suggest that Slingshot 400 is just a stopgap until 800G Ultra Ethernet NICs begin appearing? If so, I look forward to seeing HPE Cray jam third-party 800G switch ASICs into the Cray EX liquid-cooled form factor at future SC conferences. Grace-Grace for storage? One of the weirder things I saw on the exhibit floor was a scale-out storage server built on NVIDIA Grace CPUs that the good folks at WEKA had on display at their booth. Manufactured by Supermicro, this "ARS-121L-NE316R" server (really rolls off the tongue) uses a two-socket Grace superchip and its LPDDR5X instead of conventional, socketed CPUs and DDR. The rest of it seems like a normal scale-out storage server, with sixteen E3.S SSD slots in the front and four 400G ConnectX-7 or BlueField-3 NICs in the back. No fancy dual-controller failover or anything like that; the presumption is that whatever storage system you'd install over this server would implement its own erasure coding across drives and servers. At a glance, this might seem like a neat idea for a compute-intensive storage system like WEKA or DAOS. However, one thing that you typically want in a storage server is high reliability and repairability, features which weren't the optimal design point for these Grace superchips. Specifically, The Grace-Grace superchip turn both CPU sockets into a single FRU. This means that if one CPU goes bad, you're shipping the whole board back to NVIDIA rather than just doing a field-swap of a socket. Grace uses LPDDR5X, whose ECC is not as robust as DDR5. I'm not an expert on memory architecture, but my understanding is that the ECC scheme on Grace does not provide ChipKill or row failures. And as with CPU failure, if a single DRAM chip goes back, you're throwing out two CPUs and all the DRAM. There's no way to value-engineer the exact quantity of cores, clock, and DRAM to be optimal for the storage software installed on top of these servers. On the upside, though, there might be a cost advantage to using this Grace-Grace server over a beefier AMD- or Intel-based server with a bunch of traditional DIMMs. And if you really like NVIDIA products, this lets you do NVIDIA storage servers to go with your NVIDIA network and NVIDIA compute. As long as your storage software can work with the interrupt rates of such a server (e.g., it supports rebuild-on-read) and the 144 Neoverse V2 cores are a good fit for its computational requirements (e.g., calculating complex erasure codes), this server makes sense. But building a parallel storage system on LPDDR5X still gives me the willies. I could also see this thing being useful for certain analytics workloads, especially those which may be upstream of LLM training. I look forward to hearing about where this turns up in the field. Microsoft and AMD's new HBM CPU The last bit of new and exciting HPC technology that I noted came from my very own employer in the form of HBv5, a new, monster four-socket node featuring custom-designed AMD CPUs with HBM. STH wrote up an article with great photos of HBv5 and its speeds and feeds, but in brief, this single node has: 384 physical Zen 4 cores (352 accessible from within the VM) that clock up to 4 GHz 512 GB of HBM3 (up to 450 GB accessible from the VM) with up to 6.9 TB/s STREAM bandwidth 4x NDR InfiniBand NICs clocked at 200G per port 200G Azure Boost NIC (160G accessible from the VM) 8x 1.84 TB NVMe SSDs with up to 50 GB/s read and 30 GB/s write bandwidth The node itself looks kind of wacky as well, because there just isn't a lot on it: There are the obvious four sockets of AMD EPYC 9V64H, each with 96 physical cores and 128 GB of HBM3, and giant heat pipes on top of them since it's 100% air-cooled. But there's no DDR at all, no power converter board (the node is powered by a DC bus bar), and just a few flyover cables to connect the PCIe add-in-card cages. There is a separate fan board with just two pairs of power cables connecting to the motherboard, and that's really about it. The front end of the node shows its I/O capabilities which are similarly uncomplicated: There are four NDR InfiniBand cards (one localized to each socket) which are 400G-capable but cabled up at 200G, eight E1.S NVMe drives, and a brand-new dual-port Azure Boost 200G NIC. Here's a close-up of the right third of the node's front: This is the first time I've seen an Azure Boost NIC in a server, and it looks much better integrated than the previous-generation 100G Azure SmartNIC that put the FPGA and hard NIC on separate boards connected by a funny little pigtail. This older 100G SmartNIC with pigtail was also on display at the Microsoft booth in an ND MI300X v5 node: And finally, although I am no expert in this new node, I did hang around the people who are all week, and I repeatedly heard them answer the same few questions: Is this MI300C? It is if you want it to be. You can call it Sally if you want; I don't think it will care. But Microsoft calls it HBv5, and the processor name will show up as AMD EPYC 9V64H in /proc/cpuinfo. Is its InfiniBand 1x800 port, 2x400 ports, ...? There are four NDR InfiniBand HCA cards, and each card has one full 400G NDR InfiniBand port. However, each port is only connected up to top-of-rack switching at 200G. Each InfiniBand HCA hangs off of a different EPYC 9V64H socket so that any memory address canÂ get to InfiniBand without having to traverse Infinity Fabric. Running four ports of NDR InfiniBand at half speed is an unusual configuration, but that's what's going on here. How can I buy this CPU?Â EPYC 9V64H are "custom AMD EPYC processors only available in Azure." This means the only way to access it is by provisioning an HBv5 virtual machine in Azure. Amidst all the unrelenting news about new GPUs optimized for AI workloads, it was nice to see something new and unique launched squarely for the benefit of traditional scientific computing workloads. The HPC industry overall New technology announcements are always exciting, but one of the main reasons I attend SC and ISC is to figure out the broader trends shaping the HPC industry. What concerns are top of mind for the community, and what blind spots remain open across all the conversations happening during the week? Answering these questions requires more than just walking the exhibit floor; it involves interpreting the subtext of the discussions happening at panels and BOF sessions. However, identifying where the industry needs more information or a clearer picture informs a lot of the public-facing talks and activities in which I participate throughout the year. What I learned about the average SC technical program attendee The biggest realization that I confirmed this week is that the SC conference is not an HPC conference; it is a scientific computing conference. I sat in a few sessions where the phrase "HPC workflows" was clearly a stand-in for "scientific workflows," and "performance evaluation" still really means "MPI and OpenMP profiling." I found myself listening to ideas or hearing about tools that were intellectually interesting but ultimately not useful to me because they were so entrenched in the traditions of applying HPC to scientific computing. Let's talk about a few ways in which this manifested. People think sustainability and energy efficiency are the same thing Take, for example, the topic of sustainability. There were talks, panels, papers, and BOFs that touched on the environmental impact of HPC throughout the week, but the vast majority of them really weren't talking about sustainability at all; they were talking about energy efficiency. These talks often use the following narrative: Energy use from datacenters is predicted to reach some ridiculous number by 2030 We must create more energy-efficient algorithms, processors, and scheduling policies Here is an idea we tested that reduced the energy consumption without impacting the performance of some application or workflow Sustainability achieved! Success! The problem with this approach is that it declares victory when energy consumption is reduced. This is a great result if all you care about is spending less money on electricity for your supercomputer, but it completely misses the much greater issue that the electricity required to power an HPC job is often generated by burning fossil fuels, and that the carbon emissions that are directly attributable to HPC workloads are contributing to global climate change. This blind spot was exemplified by this slide, presented during a talk titled "Towards Sustainable Post-Exascale Leadership Computing" at the Sustainable Supercomputing workshop: I've written about this before and I'll write about it again: FLOPS/Watt and PUE are not meaningful metrics by themselves when talking about sustainability. A PUE of 1.01 is not helpful if the datacenter that achieves it relies on burning coal for its power. Conversely, a PUE of 1.5 is not bad if all that electricity comes from a zero-carbon energy source. The biggest issue that I saw being reinforced at SC this year is that claims of "sustainable HPC" are accompanied by the subtext of "as long as I can keep doing everything else the way I always have." There were glimmers of hope, though. Maciej Cytowski from Pawsey presented the opening talk at the Sustainable Supercomputing workshop, and he led with the right thing--he acknowledged that 60% of the fuel mix that powers Pawsey's supercomputers comes from burning fossil fuels: Rather than patting himself on the back at his low PUE, Dr. Cytowski's described on how they built their datacenter atop a large aquifer from which they draw water at 21Â°C and return it at 30Â°C to avoid using energy-intensive chillers. To further reduce the carbon impact of this water loop, Pawsey also installed over 200 kW of solar panels on its facility roof to power the water pumps. Given the fact that Pawsey cannot relocate to somewhere with a higher ratio of zero-carbon energy on account of its need to be physically near the Square Kilometer Array, Cytowski's talk felt like the most substantive discussion on sustainability in HPC that week. Most other talks and panels on the topic really wanted to equate "sustainability" to "FLOPS per Watt" and pretend like where one deploys a supercomputer is not a part of the sustainability discussion. The reality is that, if the HPC industry wanted to take sustainability seriously, it would talk less about watts and more about tons of CO2. Seeing as how the average watt of electricity in Tennessee produces 2.75x more carbon than a watt of electricity in Washington, the actual environmental impact of fine-tuning Slurm scheduling or fiddling with CPU frequencies is meaningless when compared to the benefits that would be gained by deploying that supercomputer next to a hydroelectric dam instead of a coal-fired power plant. I say all this because there are parts of the HPC industry (namely, the part in which I work) who are serious about sustainability. And those conversations go beyond simply building supercomputers in places where energy is low-carbon (thereby reducing Scope 2 emissions). They include holding suppliers to high standards on reducing the carbon impact of transporting people and material to these data centers, reducing the carbon impact of all the excess packaging that accompanies components, and being accountable for the impact of everything in the data center after it reaches end of life (termed Scope 3 emissions). The HPC community--or more precisely, the scientific computing community--is still married to the idea that the location of a supercomputer is non-negotiable, and "sustainability" is a nice-to-have secondary goal. I was hoping that the sessions I attended on sustainability would approach this topic at a level where the non-scientific HPC world has been living. Unfortunately, the discussion at SC24, which spanned workshops, BOFs, and Green 500, remains largely stuck on the idea that PUE and FLOPS/Watt are the end-all sustainability metrics. Those metrics are important, but there are global optimizations that have much greater effects on reducing the environmental impact of the HPC industry. AI sessions are really scientific computing sessions about AI Another area where "HPC" was revealed to really mean "scientific computing" was in the topic of AI. I sat in on a few BOFs and panels around AI topics to get a feel for where this community is in adopting AI for science, but again, I found the level of discourse to degrade to generic AI banter despite the best efforts of panelists and moderators. For example, I sat in the "Foundational Large Language Models for High-Performance Computing" BOF session, and Jeff Vetter very clearly defined what a "foundational large language model" was at the outset so we could have a productive discussion about their applicability in HPC (or, really, scientific computing): The panelists did a good job of outlining their positions. On the upside, LLMs are good for performing source code conversion, documenting and validating code, and maximizing continuity in application codes that get passed around as graduate students come and go. On the downside, they have a difficult time creating efficient parallel code, and they struggle to debug parallel code. And that's probably where the BOF should have stopped, because LLMs, as defined at the outset of the session, don't actually have a ton of applicability in scientific computing. But as soon as the session opened up to audience questions, the session went off the rails. The first question was an extremely basic and nonspecific question: "Is AI a bubble?" It's fun to ask provocative questions to a panel of experts. I get it. But the question had nothing to do with LLMs, any of the position statements presented by panelists, or even HPC or scientific computing. It turned a BOF on "LLMs for HPC" into a BOF that might as well have been titled "Let's just talk about AI!" A few panelists tried to get things back on track by talking about the successes of surrogate models to simulate physical processes, but this reduced the conversation to a point where "LLMs" really meant "any AI model" and "HPC" really meant "scientific simulations." Perhaps the most productive statement to come out of that panel was when Rio Yokota asserted that "we" (the scientific community) should not train their own LLMs, because doing so would be "unproductive for science." But I, as well as anyone who understands the difference between LLMs and "AI," already knew that. And the people who don't understand the difference between an LLM and a surrogate model probably didn't pick up on Dr. Yokota's statement, so I suspect the meaning of his contribution was completely lost. Walking out of that BOF (and, frankly, the other AI-themed BOFs and panels I attended), I was disappointed at how superficial the conversation was. This isn't to say these AI sessions were objectively bad; rather, I think it reflects the general state of understanding of AI amongst SC attendees. Or perhaps it reflects the demographic that is drawn to these sorts of sessions. If the SC community is not ready to have a meaningful discussion about AI in the context of HPC or scientific computing, attending BOFs with like-minded peers is probably a good place to begin getting immersed. But what became clear to me this past week is that SC BOFs and panels with "AI" in their title aren't really meant for practitioners of AI. They're meant for scientific computing people who are beginning to dabble in AI. AI for operations is not yet real in scientific computing I was invited to sit on a BOF panel called "Artificial Intelligence and Machine Learning for HPC Workload Analysis" following on a successful BOF in which I participated at ISC24. The broad intent was to have a discussion around the tools, methods, and neat ideas that HPC practitioners have been using to better understand workloads, and each of us panelists was tasked with talking about a project or idea we had in applying AI/ML to improve some aspect of workloads. What emerged from us speakers' lightning talks is that applying AI for operations--in this case, understanding user workloads--is nascent. Rather than talking about how we use AI to affect how we design or operate supercomputers, all of us seemed to focus more on how we are collecting data and beginning to analyze that data using ML techniques. And maybe that's OK, because AI won't ever do anything for workload characterization until you have a solid grasp of the telemetry you can capture about those workloads in the first place. But when we opened the BOF up to discussion with all attendees, despite having a packed room, there was very little that the audience had. Our BOF lead, Kadidia KonatÃ©, tried to pull discussion out of the room from a couple of different fronts by asking what tools people were using, what challenges they were facing, and things along those lines. However, it seemed to me that the majority of the audience was in that room as spectators; they didn't know where to start applying AI towards understanding the operations of supercomputers. Folks attended to find out the art of the possible, not talk about their own challenges. As such, the conversation wound up bubbling back up to the safety of traditional topics in scientific computing--how is LDMS working out, how do you deal with data storage challenges of collecting telemetry, and all the usual things that monitoring and telemetry folks worry about. It's easy to talk about the topics you understand, and just as the LLM conversation reverted back to generic AI for science and the sustainability topic reverted back to FLOPS/Watt, this topic of AI for operations reverted back to standard telemetry collection. Some are beginning to realize that HPC exists outside of scientific computing Despite the pervasive belief at SC24 that "HPC" and "scientific computing" are the same thing, there are early signs that the leaders in the community are coming to terms with the reality that there is now a significant amount of leadership HPC happening outside the scope of the conference. This was most prominent at the part of the Top500 BOF where Erich Strohmaier typically discusses trends based on the latest publication of the list. In years past, Dr. Strohmaier's talk was full of statements that strongly implied that, if a supercomputer is not listed on Top500, it simply does not exist. This year was different though: he acknowledged that El Capitan, Frontier, and Aurora were "the three exascale systems we are aware of," now being clear that there is room for exascale systems to exist that simply never ran HPL, or never submitted HPL results to Top500. He explicitly acknowledged again that China has stopped making any Top500 submissions, and although he didn't name them outright, he spent a few minutes dancing around "hyperscalers" who have been deploying exascale class systems such as Meta's H100 clustersÂ (2x24K H100), xAI's ColossusÂ (100K H100), and the full system behind Microsoft's EagleÂ (14K H100 is a "tiny fraction"). Strohmaier did an interesting analysis that estimated the total power of the Top500 list's supercomputers so he could compare it to industry buzz around hyperscalers building gigawatt-sized datacenters: It was a fun analysis where he concluded that there are between 500-600 megawatts of supercomputers on the Top500 list, and after you factor in storage, PUE, and other ancillary power sources, the whole Top500 list sums up to what hyperscalers are talking about sticking into a single datacenter facility. Although he didn't say it outright, I think the implication here is that the Top500 list is rapidly losing relevance in the broad HPC market, because a significant amount of the world's supercomputing capacity and capability are absent from the list. Although specific hyperscale supercomputers (like Meta's, xAI's, and Microsoft's) were not mentioned outright, their absence from the Top500 list suggests that this list might already be more incomplete than it is complete--the sum of the FLOPS or power on the Top500 supercomputers may be less than the sum of the giant supercomputers which are known but not listed. This will only get worse as the AI giants keep building systems every year while the government is stuck on its 3-5 year procurement cycles. It follows that the meaning of the Top500 is sprinting towards a place where it is not representative of HPC so much as it is representative of the slice of HPC that serves scientific computing. Erich Strohmaier was clearly aware of this in his talk this year, and I look forward to seeing how the conversation around the Top500 list continues to morph as the years go on. NSF's broad front vs. DOE's big bets in HPC and AI My career was started at an NSF HPC center and built up over my years in the DOE, so I feel like I owe a debt to the people who provided all the opportunities and mentorship that let me get to the place of privilege in the hyperscale/AI industry that I now enjoy. As a result, I find myself still spending a lot of my free time thinking aboutÂ the role of governments in the changing face of HPCÂ (as evidenced by my critiques ofÂ thinktank reportsÂ andÂ federal RFIs...) and trying to bridge the gap in technical understanding between my old colleagues (in DOE, NSF, and European HPC organizations) and whatever they call what I work on now (hyperscale AI?). To that end, I found myself doing quite a bit of business development (more on this later) with government types since I think that is where I can offer the most impact. I used to be government, and I closely follow the state of their thinking in HPC, but I also know what's going on inside the hyperscale and AI world. I also have enough context in both areas to draw a line through all the buzzy AI press releases to demonstrate how the momentum of private-sector investment in AI might affect the way national HPC efforts do business. So, I did a lot of talking to both my old colleagues in DOE and their industry partners in an attempt to help them understand how the hyperscale and AI industry thinks about infrastructure, and what they should expect in the next year. More importantly though, I also sat in on a couple of NSF-themed BOFs to get a better understanding of where their thinking is, where NAIRR is going, how the NSF's strategy contrasts with DOE's strategy, and where the ambitions of the Office of Advanced Cyberinfrastructure might intersect with the trajectory of hyperscale AI. What I learned was that NSF leadership is aware of everything that the community should be concerned about: the growth of data, the increasing need for specialized silicon, the incursion of AI into scientific computing, new business models and relationships with industry, and broadening the reach of HPC investments to be globally competitive. But beyond that, I struggled to see a cohesive vision for the future of NSF-funded supercomputing.Â  A BOF with a broad range of stakeholders probably isn't the best place to lay out a vision for the future of NSF's HPC efforts, and perhaps NSF's vision is best expressed through its funding opportunities and awards. Whichever the case may be, it seems like the NSF remains on a path to make incremental progress on a broad front of topics. Its Advanced Computing Systems and Services (ACSS) program will continue to fund the acquisition of newer supercomputers, and a smorgasbord of other research programs will continue funding efforts across public access to open science, cybersecurity, sustainable software, and other areas. My biggest concern is that peanut-buttering funding across such a broad portfolio will make net forward progress much slower than taking big bets. Perhaps big bets just aren't in the NSF's mission though. NAIRR was also a topic that came up in every NSF-themed session I attended, but again, I didn't get a clear picture of the future. Most of the discussion that I heard was around socializing the resources that are available today through NAIRR, suggesting that the pilot's biggest issue is not a lack of HPC resources donated by industry, but awareness that NAIRR is a resource that researchers can use. This was reinforced by a survey whose results were presented in the NAIRR BOF: It seems like the biggest challenges facing the NSF community relying on NAIRR (which has its own sample bias) is that they don't really know where to start even though they have AI resources (both GPUs and model API services) at their disposal. In a sense, this is a great position for the NSF since its users need intellectual help more than access to GPU resources, and the NSF has been great at promoting education, training, and workforce development. its users are unlikely to demand the same cutting-edge GPUs that AI industry leaders are snapping up. For example, the largest pool of GPUs in NAIRRÂ are A100 GPUs that NVIDIA donated via DGX Cloud; the big AI companies moved off of Ampere a year ago and are about to move off of Hopper. However, it also means that there's not a clear role for partnership with many industry players beyond donating resources to the NAIRR pilot today in the hopes of selling resources to the full NAIRR tomorrow. I asked what OAC leadership thought about moving beyond such a transactional relationship between NSF and industry at one of the BOFs I attended, and while the panelists were eager to explore specific answers to that question, I didn't hear any ideas that would approach some sort of truly equitable partnership where both parties contributed in-kind. I also walked away from these NSF sessions struck by how different the NSF HPC community's culture is from that of the DOE. NSF BOF attendees seemed focused on getting answers and guidance from NSF leadership, unlike the typical DOE gathering, where discussions often revolve around attendees trying to shape priorities to align with their own agendas. A room full of DOE people tends to feel like everyone thinks they're the smartest person there, while NSF gatherings appear more diverse in the expertise and areas of depth of its constituents. Neither way is inherently better or worse, but it will make the full ambition of NAIRR (as an inter-agency collaboration) challenging to navigate. This is particularly relevant as DOE is now pursuing its own multi-billion-dollar AI infrastructure effort, FASST, that appears to sidestep NAIRR. Exhibitor trends There's no better way to figure out what's going on in the HPC industry than walking the exhibit floor each year, because booths cost money and reflect the priorities (and budgets) of all participants. This year's exhibit felt physically huge, and walking from one end to the other was an adventure. You can get a sense of the scale from this photo I took during the opening gala: Despite having almost 18,000 registrants and the opening gala usually being a crush of people, the gala this year felt and looked very sparse just because people and booths were more spread out. There was also a perceptibly larger number of splashy vendors who have historically never attended before who were promoting downstream HPC technologies like data center cooling and electrical distribution, and there was healthy speculation online about whether the hugeness of the exhibit this year was due to these new power and cooling companies. To put these questions to rest, I figured out how to yank down all the exhibitor metadata from the conference website so I could do some basic analysis on it. Booths by the numbers The easiest way to find the biggest companies to appear this year was to compare the exhibitor list and booth sizes from SC23 to this year and see whose booth went from zero to some big square footage. I only took the top twenty new vendors, but they broadly fall into a couple of categories: Power and cooling: Stulz, Delta, Airedale, Valvoline, Boundary Electric, Schneider Electric, Mara Server manufacturing: Wistron, AMI, Pegatron Higher ed: Tennessee Tech, SCRCC There were a couple other companies that must've just missed last SC but aren't new to the show (NetApp, Ansys, Samsung, Micron, Broadcom). And curiously, only one new GPU-as-a-Service provider (Nebius) showed up this year, suggesting last year was the year of the GPU Cloud. But to confirm what others had speculated: yes, a significant amount of the new square footage of the exhibit floor can be attributed to companies focused on power and cooling. This is an interesting indicator that HPC is becoming mainstream, largely thanks to AI demanding ultra-high density of power and cooling. But it's also heartening to see a few new exhibitors in higher education making an appearance. Notably, SCRCC (South Carolina Research Computing Consortium) is a consortium between Clemon, University of South Carolina, and Savannah River National Laboratory that just formed last year, and I look forward to seeing what their combined forces can bring to bear. We can also take a look at whose booths grew the most compared to SC23: This distribution is much more interesting, since the top 20 exhibitors who grew their footprint comprise the majority of the growth in existing exhibitors. Cherry-picking a few interesting growers: Power and cooling: USystems, Midas, Vertiv Data center/GPUaaS: iM, Iris Energy, and (arguably) Oracle Software: Arc Compute and CIQ Companies facing serious financial or legal troubles: I count at least three! Impressive that they are still pouring money into their SC booths. It's also interesting to see HLRS, the German national HPC center, grow so significantly. I'm not sure what prompted such a great expansion, but I take it to mean that things have been going well there. Finally, Dell had a massive booth and showing this year. Not only did they grow the most since SC23, but they had the single largest booth on the exhibit floor at SC24. This was no doubt a result of their great successes in partnering with NVIDIA to land massive GPU buildout deals at places like xAI and CoreWeave. They also had "AI factory" messaging emblazoned all over their marketing material and debuted a nice 200 kW liquid-cooled rack that will be the basis for their GB200 NVL72 solution, clearly leaning into the idea that they are leaders in AI infrastructure. Despite this messaging being off-beat for the SC audience as I've described earlier, their booth was surprisingly full all the time, and I didn't actually get a chance to get in there to talk to anyone about what they've been doing. Equally interesting are the vendors who reduced their footprint at SC24 relative to SC23: Reading too much into any of these big shrinkers is pretty easy; while a reduction in booth size could suggest business hasn't been as good, it could equally mean that an exhibitor just went overboard at SC23 and downsized to correct this year. A few noteworthy exhibitors to call out: Penguin and the Korea Semiconductor Industry Association both cut way back from massive 50x50 booths to 30x30. Their booths this year were both big, but they weren't massive. Viridien, formerly known as CGG, also shrunk from a massive booth to a less-massive 30x40. Juniper still kept an independent booth, but it is in the process of being absorbed into HPE. Shrinking makes sense. Major cloud providers Google and AWS scaled back, but Microsoft did not. GPU-as-a-Service cloud providers CoreWeave and Lambda both scaled back. Since these GPUaaS providers' business models typically rely on courting few big customers, it may make sense to cut back on booth volume. Major AI storage companies DDN, VAST, and (to a lesser degree) Pure also scaled back, while WEKA did not. I know business for DDN and VAST has been great this past year, so these may just reflect having gone overboard last year. Overall, almost twice as many vendors grew their booths than scaled back, so I'd caution anyone against trying to interpret any of this as anything beyond exhibitors right-sizing their booths after going all-in last year. Finally, there are a handful of vendors who disappeared outright after SC23: It is critical to point out that the largest booths to vanish outright were all on the smaller size: SUSE, Tenstorrent, and Symbiosys Alliance all disappeared this year, but their booths last year were only 20x30. I was surprised to see that Tenstorrent and Arm didn't have booths, but the others are either companies I haven't heard of (suggesting the return on investment of showing at SC might've been low), are easy to rationalize as only being HPC-adjacent (such as SNIA and DigitalOcean), or simply went bankrupt in the last year. As we say at the business factory, the net-net of the exhibit hall this year is that the square footage of booth space increased by 15,000 square feet, so it was in fact bigger, it did take longer to walk from one end to the other, and there definitely were a bunch of new power and cooling companies filling out the space. Some exhibitors shrank or vanished, but the industry as a whole appears to be moving in a healthy direction. And if you're interested in analyzing this data more yourself, please have a look at the data and the Jupyter notebook I used to generate the above treemaps on GitHub. If you discover anything interesting, please write about it and post it online! Proliferation of GPU-as-a-Service providers As an AI infrastructure person working for a major cloud provider, I kept an eye out for all the companies trying to get into the GPU-as-a-Service game. I described these players last year as "pure-play GPU clouds," and it seems like the number of options available to customers who want to go this route is growing. But I found it telling that a lot of them had booths that were completely indistinguishable from each other. Here's an example of one: As best I can tell, these companies are all NVIDIA preferred partners with data centers and a willingness to deploy NVIDIA GPUs, NVIDIA SmartNICs, and NVIDIA cloud stack, and sell multi-year commitments to consume those GPUs. I tried to accost some of these companies' booth staff to ask them my favorite question ("What makes you different from everyone else?"), but most of these companies' booths were staffed by people more interested in talking to each other than me. These GPUaaS providers tend to freak me out, because, as Microsoft's CEO recently stated, these companies are often "just a bunch of tech companies still using VC money to buy a bunch of GPUs." I can't help but feel like this is where the AI hype will come back to bite companies who have chosen to build houses upon sand. Walking the SC24 exhibit floor is admittedly a very narrow view of this line of business, but it seemed like some of these companies were content to buy up huge booths, hang a pretty banner above it, and otherwise leave the booth empty of anything beyond a few chairs and some generic value propositions. I didn't feel a lot of hunger or enthusiasm from these companies despite the fact that a bunch of them have hundreds of millions of dollars of GPUs effectively sitting on credit cards that they are going to have to make payments on for the next five years. That all said, not all the companies in the GPUaaS are kicking back and letting the money pour in. In particular, I spent a few minutes chatting up someone at the CoreWeave booth, and I was surprised to hear about how much innovation they're adding on top of their conventional GPUaaS offering. For example, they developed Slurm on Kubernetes (SUNK) with one of their key customers to close the gap between the fact that CoreWeave exposes its GPU service through Kubernetes, but many AI customers have built their stack around Slurm, pyxis, and enroot. In a weird twist of fate, I later ran into an old acquaintance who turned out to be one of the key CoreWeave customers for whom SUNK was developed. He commented that SUNK is the real deal and does exactly what his users need which, given the high standards that this person has historically had, is a strong affirmation that SUNK is more than just toy software that was developed and thrown on to GitHub for an easy press release. CoreWeave is also developing some interesting high-performance object storage caching software, and all of these software services are provided at no cost above whatever customers are already paying for their GPU service. I bring this up because it highlights an emerging distinction in the GPUaaS market, which used to be a homogenous sea of bitcoin-turned-AI providers. Of course, many companies still rely on that simple business model: holding the bill for rapidly depreciating GPUs that NVIDIA sells and AI startups consume. However, there are now GPUaaS providers moving up the value chain by taking on the automation and engineering challenges that model developers don't want to deal with. Investing in uncertain projects like new software or diverse technology stacks is certainly risky, especially since they may never result in enough revenue to pay for themselves. But having a strong point of view, taking a stance, and investing in projects that you feel are right deserves recognition. My hat is off to the GPUaaS providers who are willing to take these risks and raise the tide for all of us rather than simply sling NVIDIA GPUs to anyone with a bag of money. Community and connections As much as I enjoy increasing shareholder value, the part of SC that gives me the greatest joy is reconnecting with the HPC community. Knowing I'll get to chat with my favorite people in the industry (and meet some new favorite people!) makes the long plane rides, upper respiratory infections, and weird hotel rooms completely worth it. I wound up averaging under six hours of sleep per night this year in large part because 9pm or 7am were often the only free times I had to meet with people I really wanted to see. I have this unhealthy mindset where every hour of every day, from the day I land to the day I leave, is too precious to waste, and it's far too easy for me to rationalize that spending an hour talking to someone interesting is worth losing an hour of sleep. But like I said at the outset of this blog post, this year felt different for a few reasons, and a lot of them revolve around the fact that I think I'm getting old. Now, it's always fun to say "I'm getting old" in a mostly braggadocious way, but this feeling manifested in concrete ways that affected the way I experienced the conference: I hit my limit on Monday night and couldn't get home without spending 15 minutes sitting in an unlit playground across from the World of Coke. I've always gotten blisters and fatigue, but this was the first time I couldn't just cowboy up and muscle through it. To avoid a repeat of this, I wound up "wasting" (see above) a lot more time to just get off my feet this year. This year, I reached the pointÂ where I need to start time-box how much time I spend chatting up the folks I bump into. I used to just let the good times roll if I ran into someone I knew, but this year I wound up spending as much time attending sessions as I did missing sessions because I got caught up in a conversation. This isn't a bad thing per se, but I did feel a little sour when I realized I'd made a bad bet on choosing to chat instead of attending a session or vice versa, and this bad feeling lingered in the back of my mind just about every day. There weren't a lot of surprises for me at the conference this year, and I worry that I am at risk of losing touch with the technical aspects of the conference that get newer attendees excited. Instead of hearing about, say, the latest research in interconnects, more of my time was spent mucking it up with the sorts of people in the HPC community who I used to find intimidating. On the one hand, hooray me for making it into old boys' clubs. But on the other, I don't want to become some HPC greybeard whose last meaningful contribution to the industry was twenty years ago. This is the first year where I've had people accost me and ask me for advice. I've long been accosted by strangers because of my online presence, but those interactions were always lighthearted exchanges of "I follow you on Twitter" and "Great to meet you. Have an @HPC_Guru pin." This year, I had people specifically ask me for advice on industry versus postdoc, AI versus HPC, and what my master plan was when I left NERSC. Even though I didn't have any sage advice, I still found it really hard to tell bright-eyed students to go kick rocks just so I wouldn't be late for yet another mushy panel on AI. If you read this all and think "boo hoo, poor Glenn is too popular and wise for his own good," yeah, I get it. There are worse problems to have. But this was the first year where I felt like what I put into the conference was greater than what I got out of it. Presenting at SC used to be at least as good for my career as it was useful for my audiences, but it just doesn't count for much given my current role and career stage. It felt like some of the magic was gone this year in a way I've never experienced before.Â  Getting to know people As the years have gone on, I spend an increasing amount of my week having one-on-one conversations instead of wandering aimlessly. This year though, I came to SC without really having anything to buy or sell: I am not a researcher, so I don't need to pump up the work I'm doing to impress my fellow researchers. I no longer own a product market segment, so I don't directly influence the customers or vendors with whom my employer works. I don't have any bandwidth in my day job to support any new customers or partnerships, so I don't have a strong reason to sell people on partnering with me or my employer.Â  Much to my surprise though, a bunch of my old vendor/partner colleagues still wanted to get together to chat this year. Reflecting back, I was surprised to realize that it was these conversations--not the ones about business--that were the most fulfilling this year. I learned about people's hobbies, families, and their philosophies on life, and it was amazing to get to know some of the people behind the companies with whom I've long dealt. I was reminded that the person is rarely the same as the company, and even behind some of the most aggressive and blusterous tech companies are often normal people with the same concerns and moments of self-doubt that everyone else has. I was also reminded that good engineers appreciate good engineering regardless of whether it's coming from a competitor or not. The public persona of a tech exec may not openly admire a competitor's product, but that doesn't mean they don't know good work when they see it. I also surprised a colleague whose career has been in the DOE labs with an anecdote that amounted to the following: even though two companies may be in fierce competition, the people who work for them don't have to be. The HPC community is small enough that almost everyone has got a pal at a competing company, and when there are deals to be made, people looove to gossip. If one salesperson hears a juicy rumor about a prospective customer, odds are that everyone else on the market will hear about it pretty quickly too. Of course, the boundaries of confidentiality and professionalism are respected when it matters, but the interpersonal relationships that are formed between coworkers and friends don't suddenly disappear when people change jobs. And so, I guess it would make sense that people still want to talk to me even though I have nothing to buy or sell. I love trading gossip just as much as everyone else, and I really enjoyed this aspect of the week. Talking to early career people I also spent an atypically significant amount of my week talking to early career people in HPC who knew of me one way or another and wanted career advice. This is the first year I recall having the same career conversations with multiple people, and this new phase of my life was perhaps most apparent during the IEEE TCHPC/TCPP HPCSC career panel in which I was invited to speak this year. It was an honor to be asked to present on a career panel, but I didn't feel very qualified to give career advice to up-and-coming computer science graduate students who want to pursue HPC. I am neither a computer scientist nor a researcher, butÂ fortunately for me, my distinguished co-panelists (Drs. Dewi Yokelson, Olga Pearce, YJ Ji, and Rabab Alomairy) had plenty of more relevant wisdom to share. And at the end of the panel, there were a few things we all seemed to agree on as good advice: Knowing stuff is good, but being able to learn things is better. Being eager to learn and naturally curious makes this much easier as well. The life of a researcher sometimes requires more than working a standard nine-to-five, so it'll be hard to be really successful if your heart isn't in it. People will forget what you did or what you said, but they remember how you made them feel. Don't be a jerk, because this community is small. In both this panel the one-on-one conversations I had with early career individuals, the best I could offer was the truth: I never had a master plan that got me to where I am; I just try out new things until I realize I don't like doing them anymore. I never knew what I wanted to be when I grew up, and I still don't really, so it now makes me nervous that people have started approaching me with the assumption that I've got it all figured out. Unless I torpedo my career and go live on a goat farm though, maybe I should prepare for this to be a significant part of my SC experiences going forward. Shift in social media One last, big change in the community aspect of SC this year was the mass-migration of a ton of HPC folks from Twitter to Bluesky during the week prior to the conference. I don't really understand what prompted it so suddenly; a few of us have been trying for years to get some kind of momentum on other social platforms like Mastodon, but the general lack of engagement meant that all the excitement around SC always wound up exclusively on Twitter. This year was different though, and Bluesky hit critical mass with the HPC community. I personally have never experienced an SC conference without Twitter; my first SC was in 2013, and part of what made that first conference so exciting was being able to pull up my phone and see what other people were seeing, thinking, and doing across the entire convention center via Twitter. Having the social media component to the conference made me feel like I was a part of something that first year, and as the years went on, Twitter became an increasingly indispensable part of the complete SC experience for me. This year, though, I decided to try an experiment and see what SC would be like if I set Twitter aside and invested my time into Bluesky instead. The verdict? It was actually pretty nice. It felt a lot like the SC13 days, where my day ended and began with me popping open Bluesky to see what new #SC24 posts were made. And because many of the tech companies and HPC centers hadn't yet made it over, the hashtag wasn't clogged up by a bunch of prescheduled marketing blasts that buried the posts written by regular old conference attendees who wereÂ asking important questions: Which booths at #sc24 have coffee? I noticed oracle do. Anyone else? â Mike Croucher (@walkingrandomly.bsky.social) November 18, 2024 at 3:02 PM Of course, I still clogged Bluesky up with my nonsense during the week, but there was an amazing amount of engagement by a diversity of thoughtful people--many who came from Twitter, but some whose names and handles I didn't recognize. The volume of traffic on Bluesky during the week did feel a little lower than what it had been on Twitter in years past though. I also didn't see as many live posts of technical sessions as they happened, so I couldn't really tell whether I was missing something interesting in real time. This may have contributed to why I felt a little less connected to the pulse of the conference this year than I had in the past. It also could've been the fact that conference was physically smeared out across a massive space though; the sparsity of the convention center was at least on par with the sparsity on Bluesky. At the end of the week, I didn't regret the experiment. In fact, I'll probably be putting more effort into my Bluesky account than my Twitter account going forward. To be clear though, this isn't a particularly political decision on my part, and I pass no judgment on anyone who wants to use one platform over the other. It's just that I like the way I feel when I scroll through my Bluesky feeds, and I don't get that same feeling when I use Twitter. So what's the takeaway? SC this year was a great conference by almost every measure, as it always is, but it still felt a little different for me. I'm sure that some of that feeling is the result of my own growth, and my role with respect to the conference seems to be evolving from someone who gets a lot out of the conference to someone who is giving more to the conference. That's not to say that I don't get a lot out of it, though; I had no shortage of wonderful interactions with everyone from technology executives to rising stars who are early in their career, and I learned a lot about both them and me as whole people. But SC24, more than any SC before it, is when I realized this change was happening. On the technological front, we saw the debut of a new #1 system (emblazoned with the smiling face of Bronis...) and a growing crop of massive, new clusters deployed for commercial applications. The exhibit floor was quantitatively bigger, in large part due to new power and cooling companies who are suddenly relevant to the HPC world thanks to the momentum of AI. At the same time, the SC technical program is clearly separating itself out as a conference focused on scientific computing; the level of discourse around AI remains largely superficial compared to true AI conferences, the role of hyperscalers in the HPC industry is still cast more as a threat than an opportunity. For my part, I'm still trying to get a grasp on where government agencies like DOE and NSF want to take their AI ambitions so I can try to help build a better mutual understanding between the scientific computing community and the hyperscale AI community. However, it seems like the NSF is progressing slowly on a wide front, while the DOE is doing what DOE does and charging headfirst into a landscape that has changed more than I think they realize. There's a lot of technical content that I know I missed on account of the increasing time I've been spending on the people and community aspect of the conference, and I'm coming to terms with the idea that this just may be the way SC is from now on. And I think I'm okay with that, since the support of the community is what helped me go from being a bored materials science student into someone whose HPC career advice is worth soliciting in the short span of eleven years. Despite any or all of the cynicism that may come out in the things I say about this conference, SC is always the highlight of my year. I always go into it with excitement, gladly burn the candle at both ends all week, and fly home feeling both grateful for and humbled by everything the HPC community has done and continues to do to keep getting me out of bed in the morning.]]></summary></entry><entry><title type="html">Surfing the Singularity - âthe Workflow is the Appâ</title><link href="https://hpc.social/personal-blog/2024/surfing-the-singularity-the-workflow-is-the-app/" rel="alternate" type="text/html" title="Surfing the Singularity - âthe Workflow is the Appâ" /><published>2024-11-12T17:00:00-07:00</published><updated>2024-11-12T17:00:00-07:00</updated><id>https://hpc.social/personal-blog/2024/surfing-the-singularity-the-workflow-is-the-app-</id><content type="html" xml:base="https://hpc.social/personal-blog/2024/surfing-the-singularity-the-workflow-is-the-app/"><![CDATA[<p class="ember-view reader-text-block__paragraph" id="ember2131"><span color="rgba(255, 255, 255, 0.9)" style="font-family: verdana;">Hello and happy fall holidays to you and yours.</span><span class="white-space-pre" color="rgba(255, 255, 255, 0.9)"> </span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2131"><span style="font-family: verdana;">As I wrote about in the last blog post [<a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.linkedin.com/pulse/surfing-singularity-universe-computes-andy-gallo-6fgle" target="_self">1</a>], as quantum computing hardware matures over the next 5 to 10 years from an experimental toy through to utility and then perhaps advantage over classical (for some applications), it will be included into an already diverse and hybrid computing and applications landscape - on-prem computing, mobile and edge, cloud, and now novel types of computing devices which require new thinking and wholly new means of addressing them. How to deal with the burgeoning heterogeneity of the computing landscape - how to write and run apps which produce and consume data across a widening array of devices- is the topic of this post.<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2131"><span style="font-family: verdana;"><span class="white-space-pre"><br /></span></span></p>
<h2><span style="font-family: verdana; font-size: x-large;">Language Landscape<span class="white-space-pre"> </span></span></h2>
<p class="ember-view reader-text-block__paragraph" id="ember2133"><span style="font-family: verdana;">The Java programming language, once touted in the glory days of "the World Wide Web" as being "write once, deploy anywhere", and in its heyday representing 25% of new application development, is now down below 10%. What's hot? Python (23%), and "the C's", a collection of C, C++, C# and their kin (&gt;24% in total) which are traditionally recompiled for specific hardware platforms. [2] And while Python provides portability, often for performance in math operations it depends on native libraries, built in, you guessed it, the C's. Into this mix wades the US government which has come out recently with a potentially disruptive statement against the use of the C's, citing security concerns due to their free-wheeling memory management, and in spite of efforts like Safe C++, the government is recommending movement to memory safe languages like Rust, currently with just 1% market share, but "with a bullet". [3] Whether it is better to port to Rust or just update to Safe C++ depends on many factors - for example, how good are your docs and test cases - and while there may exist conceptual impedance mismatches between languages, modern AI coding assistants will only increase in capability especially for more rote tasks like porting.</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2134"><span style="font-family: verdana;">Add to this mix the coding of Graphical Processing Units (GPUs) - originally intended for visualizations but now used in applications for almost anything involving matrix math (turns out, lots of stuff). GPUs today are mostly sold by NVIDIA and are programmed in the C's (sometimes with a Python interface) using the NVIDIA CUDA library. These pieces of the application, the "kernels", are hardware dependent, and while many attempts have been made to create hardware-portable frameworks for GPU programming (see SYCL for example [4]), nearly always the newest fastest GPU features are available in the native non-portable form first, leading to vendor lock. (This might be a good time to remember that<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.linkedin.com/company/nvidiausa/">NVIDIA</a><span class="white-space-pre"> </span>does not themselves manufacture chips - they design chips which others produce.)</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2135"><span style="font-family: verdana;">The manner in which we program GPUs is similar to the way we program quantum computers, i.e. QPUs - we delegate to them the portions of the application to which they are best suited, program them using device-specific instructions, and weave them back into the holistic solution. Rather than wielding the Java hammer where everything is a virtualized nail, we use the best tool for the job. In quantum computing, for example, "variational" hybrid algorithms are a common theme, where some part of the work and preparation are performed on classical hardware as a setup for a quantum step, and then post-processing the results back on classical hardware for potential iteration to an optimal solution.<span class="white-space-pre"> </span></span></p>
<div class="reader-image-block reader-image-block--full-width"><figure class="reader-image-block__figure"><div class="ivm-image-view-model"><div class="ivm-view-attr__img-wrapper"><img alt="" class="ivm-view-attr__img--centered reader-image-block__img evi-image lazy-image ember-view" id="ember2136" src="https://media.licdn.com/dms/image/v2/D4E12AQHHLPGy-FVQ7g/article-inline_image-shrink_1500_2232/article-inline_image-shrink_1500_2232/0/1731379488723?e=1740009600&amp;v=beta&amp;t=rBfADA-gBrGoIdiIzfxE-P90i-WNLV2EFP7uYQzam20" /></div>
</div>
<figcaption class="reader-image-block__figure-image-caption display-block full-width text-body-small-open t-sans text-align-center t-black--light"><span style="font-family: verdana;">Two of several emerging patterns for integrating quantum computing into an application solution. [5]</span></figcaption></figure></div>
<p class="ember-view reader-text-block__paragraph" id="ember2137"><span style="font-family: verdana;">This pattern is analogous to what is also common in classical high performance computing (HPC) for applications like weather modeling and other complex simulations - pre-process on commodity hardware, run an HPC job on the big box, and post-process the results. The introduction into the mix of steerage provided by AI models increases the heterogeneity of the complete solution.<span class="white-space-pre"> </span></span></p>
<div class="reader-image-block reader-image-block--full-width"><figure class="reader-image-block__figure"><div class="ivm-image-view-model"><div class="ivm-view-attr__img-wrapper"><img alt="" class="ivm-view-attr__img--centered reader-image-block__img evi-image lazy-image ember-view" id="ember2138" src="https://media.licdn.com/dms/image/v2/D4E12AQGVu8gKIzDRLg/article-inline_image-shrink_1000_1488/article-inline_image-shrink_1000_1488/0/1731379555676?e=1740009600&amp;v=beta&amp;t=Bt4u6m8pi0i6xVNmfWxkxGK4bXBGkWuP3_zxrab1R3M" /></div>
</div>
<figcaption class="reader-image-block__figure-image-caption display-block full-width text-body-small-open t-sans text-align-center t-black--light"><span style="font-family: verdana;">A blended computing landscape, enabling for example, quantum computing to produce highly precise data to train AI to steer a classical HPC simulation. [6]</span></figcaption></figure></div>
<p class="ember-view reader-text-block__paragraph" id="ember2139"><span style="font-family: verdana;">All these hardware-dependent application pieces for an ever widening array of hardware means that compilers are cool again, and compiler pipelines like LLVM are critical to application development and deployment. [7] Included in this class of development tools are circuit transpilers for quantum hardware which must take into consideration not only the architectural differences between QPUs (e.g. which gates are supported, what's the inter-qubit connectivity like, etc.), but also the changes which can occur in a quantum data center on a daily basis as these new, noisy, and fragile qubits simply fail and go offline, potentially altering the machine's topology. Just-in-time compilation is needed, and compiler optimization is therefore also cool again. Thank you, Frances Allen. [8]<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2139"><span style="font-family: verdana;"><span class="white-space-pre"><br /></span></span></p>
<h3 class="ember-view reader-text-block__heading-3" id="ember2140"><span style="font-family: verdana; font-size: x-large;">Parts is Parts</span></h3>
<p class="ember-view reader-text-block__paragraph" id="ember2141"><span style="font-family: verdana;">What emerges from this landscape is not a singular executable running on one computer, but rather, multiple application piece parts, written in different languages, running on radically different hardware in sequence and simultaneously, being orchestrated into a complete solution.</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2142"><span style="font-family: verdana;">In other words, a workflow. Back in the day Java's Sun Microsystems (remember them?) asserted "the network is the computer". Now we assert "the workflow is the app".<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2143"><span style="font-family: verdana;">Or more likely, a workflow of workflows. We like to think of these nested workflows in three types: [9]</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2144"></p>
<ol><li><span style="font-family: verdana;"><span>in-situ</span>: the workflow is running all on the same machine (e.g. a local process, an HPC job)</span></li><li><span style="font-family: verdana;"><span>intra-site</span>: the workflow is running on different machines within the same connected enterprise (e.g. within the same data center, virtual network, etc.)</span></li><li><span style="font-family: verdana;"><span>inter-site</span>: the workflow is running across different machines in different enterprises (e.g. hybrid on-prem and perhaps multi-vendor cloud)</span></li></ol>
<p></p>
<p class="ember-view reader-text-block__paragraph" id="ember2145"><span style="font-family: verdana;">With all these compute types, languages, and locations working together to realize the workflow and solution, loose coupling is key - components connected but not dependent - each part minding its own business. In other words, to paraphrase the poet, good interfaces make good neighbors. [10]</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2146"><span style="font-family: verdana;">We use the convenience term "Site" to mean a provider of secure compute and data services. What interfaces must a Site provide? The interface or API can include lots of things, but it must at least provide: 1) authentication and authorization, 2) a means to run components through their lifecycle, 3) a means to manage data being operated on and produced, perhaps being moved into and out of the Site, and 4) some way to get an inventory of the Site's service offerings and provision them for the purposes of running components or holding data. We call these by four functional nicknames: Auth, Run, Repo, and Spin.<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2147"><span style="font-family: verdana;"><br /></span></p>
<div class="reader-image-block reader-image-block--resize"><figure class="reader-image-block__figure"><div class="ivm-image-view-model"><div class="ivm-view-attr__img-wrapper"><img alt="" class="ivm-view-attr__img--centered reader-image-block__img evi-image lazy-image ember-view" id="ember2148" src="https://media.licdn.com/dms/image/v2/D4E12AQGVO-K51OaPPw/article-inline_image-shrink_1500_2232/article-inline_image-shrink_1500_2232/0/1731379758535?e=1740009600&amp;v=beta&amp;t=t0p27qST2ZLG6ETfkhu-0OppATVBXdcfX7Mgnw1Qk2A" /></div>
</div>
<figcaption class="reader-image-block__figure-image-caption display-block full-width text-body-small-open t-sans text-align-center t-black--light"><span style="font-family: verdana;">Four functional pillars of an interoperable computing site.</span></figcaption></figure></div>
<p class="ember-view reader-text-block__paragraph" id="ember2149"><span style="font-family: verdana;">We can see in each of the three types of workflows the need for each of these four functional pillars, albeit some as a no-op or inherited from a higher order workflow. For example, in a "type 1" workflow of components running on a single machine or within an HPC allocation the Auth aspects may be implied to be already addressed - i.e. the user is already logged into the machine or authorized to run on the HPC cluster. But a workflow which utilizes compute resources both on-prem and in the cloud will have to interact at runtime with the "auth" aspects of the cloud provider prior to being able to "run" workloads, or put and get data to various "repos". Most cloud providers provide a means to list available computing resources, to "spin" them up and down. This provisioning itself can be part of an end-to-end workflow: authenticate, get an inventory of available services, spin some up, run jobs on them storing the results, and spin them down.</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2149"><span style="font-family: verdana;"><span class="white-space-pre"> </span></span></p>
<h3 class="ember-view reader-text-block__heading-3" id="ember2150"><span style="font-family: verdana; font-size: x-large;">Stuck in the Middle</span></h3>
<p class="ember-view reader-text-block__paragraph" id="ember2151"><span style="font-family: verdana;">Most cloud providers - from Amazon to IBM Quantum cloud - provide a callable API interface which can be viewed through the lens of Auth, Run, Repo, Spin. So do some of the supercomputers and cutting edge resources provided by the Federal government, most notably those provided by the<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.linkedin.com/company/national-energy-research-scientific-computing-center/">National Energy Research Scientific Computing Center (NERSC)</a>. [11]<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2152"><span style="font-family: verdana;">As Sites, these providers expose their offerings to internal and external workflows, however, they do not themselves promote a means to author these cross-site workflows, to manage them, track them, or keep tabs on all that distributed data. What else is needed? First, since cloud and other service providers have no motivation to standardize their interfaces, a framework super-interface could exist with the ability to plug in drivers for specific service providers. This in theory is the Auth, Run, Repo, Spin interface. Second, since each provider defines their own service and runtime component lifecycle (loosely: start, run, and stop with success or fail end states) there needs to be a way to normalize the status terminology - a "fail" on one site is the same as an "error" on another, "success" means the same thing as "done". This permits the third aspect of a middleware framework - the ability to track running jobs on Sites and trigger other jobs on any Site to run accordingly - i.e. the control flow of the workflow.<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2153"><span style="font-family: verdana;">What about the data? Commonly we need the ability to put data to a Site and get some back - this is the Repo interface of the Site. And while most (but not all) Sites provide some means to store and retrieve data, be it filesystem or S3 object store or database or something else, it would also be nice to be able to say something "meta" about the data - which Site did it come from, what job or application produced it, what other workflow steps on this Site or others consumed it? Some Sites provide storage with metadata (e.g. Amazon S3) but most don't. This metadata comprises the provenance of the data - like a Civil War sword on the Antiques Roadshow, its the paper trail showing where the item came from, proving the item is legit. In a workflow which perhaps produces many pieces of data, perhaps iteratively as it converges on a solution - keeping track of all the data pieces seems, well, important. The acronym FAIR - findable, accessible, interoperable, reusable - seems a good starting point. [12]</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2153"><span style="font-family: verdana;"><br /></span></p>
<h3 class="ember-view reader-text-block__heading-3" id="ember2154"><span style="font-family: verdana; font-size: x-large;">Open Says Me</span></h3>
<p class="ember-view reader-text-block__paragraph" id="ember2155"><span style="font-family: verdana;">Our open source project lwfm, the "local workflow manager", attempts to render these concepts as a reference implementation. [13] Its small with minimal Python lib dependencies and can be taken anywhere easily as a single runnable component, its provenancial metadata also easily portable and importable. A typical Site driver - a Python class which implements the Site interface - weighs in around 200 lines of code including the whitespace. Armed with a Site driver for a cloud service, you can author long-running workflows which utilize a mix of compute resources, storage, and data infrastructures, and automatically track the provenancial paper trail.<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2156"><span style="font-family: verdana;">The lwfm middleware component provides some very recognizable services:</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2157"></p>
<ul><li><span style="font-family: verdana;">polling of remote job status<span class="white-space-pre"> </span></span></li><li><span style="font-family: verdana;">status normalization and persistence</span></li><li><span style="font-family: verdana;">system and user metadata persistence</span></li><li><span style="font-family: verdana;">event handling, control flow and data flow triggered</span></li></ul>
<p></p>
<p class="ember-view reader-text-block__paragraph" id="ember2158"><span style="font-family: verdana;">Should you use this tooling? I wouldn't recommend it. (Huh? Did I hear you correctly?) How many people are working maintaining it? (Two?) What about the community? (Next to none.) The software would fare poorly on a "spider web" analysis of its overall quality - you would not want to recommend it to your boss.</span></p>
<div class="reader-image-block reader-image-block--resize"><figure class="reader-image-block__figure"><div class="ivm-image-view-model"><div class="ivm-view-attr__img-wrapper"><img alt="" class="ivm-view-attr__img--centered reader-image-block__img evi-image lazy-image ember-view" id="ember2159" src="https://media.licdn.com/dms/image/v2/D4E12AQEs4kk5AG5gIA/article-inline_image-shrink_1500_2232/article-inline_image-shrink_1500_2232/0/1731379896216?e=1740009600&amp;v=beta&amp;t=AMlOWYzQl60i9SQsBL77teawfvRVlFW_7l_yHoT4Nnk" /></div>
</div>
<figcaption class="reader-image-block__figure-image-caption display-block full-width text-body-small-open t-sans text-align-center t-black--light"><span style="font-family: verdana;">A convenient multi-axis assessment framework for software model maturity. [14]</span></figcaption></figure></div>
<p class="ember-view reader-text-block__paragraph" id="ember2160"><span style="font-family: verdana;">The lwfm is a reference implementation of a workflow interop framework, at best. Are there alternatives? OMG are there alternatives! The workflow landscape is notoriously rich, fragmented, and super-niched. But portability and interoperability are often neglected as is data provenance. Government or university projects, while well meaning and sometimes directionally correct, quickly go stale when the funding elapses [15], and commercial solutions while often suffering some of the same deficiencies offer the added trap of vendor lock and can come with a hefty price tag.</span></p>
<h3 class="ember-view reader-text-block__heading-3" id="ember2161"><span style="font-family: verdana;">Order, Order</span></h3>
<p class="ember-view reader-text-block__paragraph" id="ember2162"><span style="font-family: verdana;">So its back to committee. [16] Next week the high performance computing community will be meeting again at the<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.linkedin.com/company/sc-conference/">SC Conference Series</a><span class="white-space-pre"> </span>Supercomputing 2024, this year in Atlanta. Hybrid workflows for scientific and engineering applications - involving classical HPC, AI-focused clusters, and now also quantum computers - will be among the very many topics discussed.[17] And we should expect some surprises - in the new rankings for example of top machines on the planet, at least, the ones they want us to know about. [18]</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2163"><span style="font-family: verdana;">Perhaps I'll report back on some of those returns in a future blog. Best regards. - andy<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2164"><span style="font-family: verdana;"><br /></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2165"><span><span style="font-family: verdana; font-size: x-large;">References &amp; Amusements<span class="white-space-pre"> </span></span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2166"><span style="font-family: verdana;">[0] Banner photo by Ben Wicks on Unsplash</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2167"><span style="font-family: verdana;">[1] "Surfing the Singularity: The Universe Computes", A. Gallo,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.linkedin.com/pulse/surfing-singularity-universe-computes-andy-gallo-6fgle" target="_self">https://www.linkedin.com/pulse/surfing-singularity-universe-computes-andy-gallo-6fgle</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2168"><span style="font-family: verdana;">[2] TIOBE ranking of programming language popularity:<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.tiobe.com/tiobe-index/" target="_self">https://www.tiobe.com/tiobe-index/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2169"><span style="font-family: verdana;">[3] Safe C++, with some chronology of the government statements:<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://safecpp.org/" target="_self">https://safecpp.org/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2170"><span style="font-family: verdana;">[4] SYCL:<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.khronos.org/sycl/" target="_self">https://www.khronos.org/sycl/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2171"><span style="font-family: verdana;">[5] "Post-variational quantum neural networks",<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://pennylane.ai/qml/demos/tutorial_post-variational_quantum_neural_networks" target="_self">https://pennylane.ai/qml/demos/tutorial_post-variational_quantum_neural_networks</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2172"><span style="font-family: verdana;">[6] "Hope Versus Hype: Quantum, AI and the Path to Commercial Advantage", Matthias Troyer, presentation at IEEE Quantum Week, Montreal, September 2024.</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2173"><span style="font-family: verdana;">[7] LLVM:<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://llvm.org/" target="_self">https://llvm.org/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2174"><span style="font-family: verdana;">[8]<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://amturing.acm.org/award_winners/allen_1012327.cfm" target="_self">https://amturing.acm.org/award_winners/allen_1012327.cfm</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2175"><span style="font-family: verdana;">[9] "Industrial Experience Deploying Heterogeneous Platforms for Use in Multi-Modal Power Systems Design Workflows", A. Gallo et al,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://drive.google.com/file/d/1c3YEVmEAUjbI5urj4PiV2TtjzBUzLlws" target="_self">https://drive.google.com/file/d/1c3YEVmEAUjbI5urj4PiV2TtjzBUzLlws</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2176"><span style="font-family: verdana;">[10] "Mending Wall, Robert Frost,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://www.poetryfoundation.org/poems/44266/mending-wall" target="_self">https://www.poetryfoundation.org/poems/44266/mending-wall</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2177"><span style="font-family: verdana;">[11] NERSC SuperFacility API:<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://docs.nersc.gov/services/sfapi/" target="_self">https://docs.nersc.gov/services/sfapi/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2178"><span style="font-family: verdana;">[12] "The FAIR Guiding</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2179"><span style="font-family: verdana;">Principles for scientific data management and stewardship", Mark D. Wilkinson et al.,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://pmc.ncbi.nlm.nih.gov/articles/PMC4792175/pdf/sdata201618.pdf" target="_self">https://pmc.ncbi.nlm.nih.gov/articles/PMC4792175/pdf/sdata201618.pdf</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2180"><span style="font-family: verdana;">[13] lwfm,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://github.com/lwfm-proj/lwfm" target="_self">https://github.com/lwfm-proj/lwfm</a><span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2181"><span style="font-family: verdana;">[14] "Model Maturity Web",<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://richardarthur.medium.com/co-design-web-6f37664ac1e1" target="_self">https://richardarthur.medium.com/co-design-web-6f37664ac1e1</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2182"><span style="font-family: verdana;">[15] Them's fighting words, and I expect to be roasted for it. But it seems to me that even the most popular software tool kits (no names) which emerged from the massively government funded ExaScale Computing Project failed to gain traction outside of a narrow community, failed to provide sustainable maintenance in the face of the funded end of the ECP, and would thus fair similarly poorly on a spider web analysis of their sustainability, their recommendability.<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2183"><span style="font-family: verdana;">[16] "Workflows Community Summit 2024: Future Trends and Challenges in Scientific Workflows", da Silva et al, "<a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://zenodo.org/records/13844759" target="_self">https://zenodo.org/records/13844759</a>. I participated in the event, as well as the prior in 2022, and you can compare to that report as well: "Workflows Community Summit 2022: A Roadmap Revolution", also da Silva et al,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://zenodo.org/records/7750670" target="_self">https://zenodo.org/records/7750670</a>.</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2184"><span style="font-family: verdana;">[17] SC24,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://sc24.conference-program.com/" target="_self">https://sc24.conference-program.com/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember2185"><span style="font-family: verdana;">[18] TOP 500 supercomputers, June 2024,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo" href="https://top500.org/lists/top500/list/2024/06/" target="_self">https://top500.org/lists/top500/list/2024/06/</a><span class="white-space-pre"> </span>- to be updated again before Thanksgiving.<span class="white-space-pre"> </span></span></p>]]></content><author><name>Surfing the Singularity</name></author><category term="surfthesing" /><summary type="html"><![CDATA[Hello and happy fall holidays to you and yours. As I wrote about in the last blog post [1], as quantum computing hardware matures over the next 5 to 10 years from an experimental toy through to utility and then perhaps advantage over classical (for some applications), it will be included into an already diverse and hybrid computing and applications landscape - on-prem computing, mobile and edge, cloud, and now novel types of computing devices which require new thinking and wholly new means of addressing them. How to deal with the burgeoning heterogeneity of the computing landscape - how to write and run apps which produce and consume data across a widening array of devices- is the topic of this post. Language Landscape The Java programming language, once touted in the glory days of "the World Wide Web" as being "write once, deploy anywhere", and in its heyday representing 25% of new application development, is now down below 10%. What's hot? Python (23%), and "the C's", a collection of C, C++, C# and their kin (&gt;24% in total) which are traditionally recompiled for specific hardware platforms. [2] And while Python provides portability, often for performance in math operations it depends on native libraries, built in, you guessed it, the C's. Into this mix wades the US government which has come out recently with a potentially disruptive statement against the use of the C's, citing security concerns due to their free-wheeling memory management, and in spite of efforts like Safe C++, the government is recommending movement to memory safe languages like Rust, currently with just 1% market share, but "with a bullet". [3] Whether it is better to port to Rust or just update to Safe C++ depends on many factors - for example, how good are your docs and test cases - and while there may exist conceptual impedance mismatches between languages, modern AI coding assistants will only increase in capability especially for more rote tasks like porting. Add to this mix the coding of Graphical Processing Units (GPUs) - originally intended for visualizations but now used in applications for almost anything involving matrix math (turns out, lots of stuff). GPUs today are mostly sold by NVIDIA and are programmed in the C's (sometimes with a Python interface) using the NVIDIA CUDA library. These pieces of the application, the "kernels", are hardware dependent, and while many attempts have been made to create hardware-portable frameworks for GPU programming (see SYCL for example [4]), nearly always the newest fastest GPU features are available in the native non-portable form first, leading to vendor lock. (This might be a good time to remember that NVIDIA does not themselves manufacture chips - they design chips which others produce.) The manner in which we program GPUs is similar to the way we program quantum computers, i.e. QPUs - we delegate to them the portions of the application to which they are best suited, program them using device-specific instructions, and weave them back into the holistic solution. Rather than wielding the Java hammer where everything is a virtualized nail, we use the best tool for the job. In quantum computing, for example, "variational" hybrid algorithms are a common theme, where some part of the work and preparation are performed on classical hardware as a setup for a quantum step, and then post-processing the results back on classical hardware for potential iteration to an optimal solution. Two of several emerging patterns for integrating quantum computing into an application solution. [5] This pattern is analogous to what is also common in classical high performance computing (HPC) for applications like weather modeling and other complex simulations - pre-process on commodity hardware, run an HPC job on the big box, and post-process the results. The introduction into the mix of steerage provided by AI models increases the heterogeneity of the complete solution. A blended computing landscape, enabling for example, quantum computing to produce highly precise data to train AI to steer a classical HPC simulation. [6] All these hardware-dependent application pieces for an ever widening array of hardware means that compilers are cool again, and compiler pipelines like LLVM are critical to application development and deployment. [7] Included in this class of development tools are circuit transpilers for quantum hardware which must take into consideration not only the architectural differences between QPUs (e.g. which gates are supported, what's the inter-qubit connectivity like, etc.), but also the changes which can occur in a quantum data center on a daily basis as these new, noisy, and fragile qubits simply fail and go offline, potentially altering the machine's topology. Just-in-time compilation is needed, and compiler optimization is therefore also cool again. Thank you, Frances Allen. [8] Parts is Parts What emerges from this landscape is not a singular executable running on one computer, but rather, multiple application piece parts, written in different languages, running on radically different hardware in sequence and simultaneously, being orchestrated into a complete solution. In other words, a workflow. Back in the day Java's Sun Microsystems (remember them?) asserted "the network is the computer". Now we assert "the workflow is the app". Or more likely, a workflow of workflows. We like to think of these nested workflows in three types: [9] in-situ: the workflow is running all on the same machine (e.g. a local process, an HPC job)intra-site: the workflow is running on different machines within the same connected enterprise (e.g. within the same data center, virtual network, etc.)inter-site: the workflow is running across different machines in different enterprises (e.g. hybrid on-prem and perhaps multi-vendor cloud) With all these compute types, languages, and locations working together to realize the workflow and solution, loose coupling is key - components connected but not dependent - each part minding its own business. In other words, to paraphrase the poet, good interfaces make good neighbors. [10] We use the convenience term "Site" to mean a provider of secure compute and data services. What interfaces must a Site provide? The interface or API can include lots of things, but it must at least provide: 1) authentication and authorization, 2) a means to run components through their lifecycle, 3) a means to manage data being operated on and produced, perhaps being moved into and out of the Site, and 4) some way to get an inventory of the Site's service offerings and provision them for the purposes of running components or holding data. We call these by four functional nicknames: Auth, Run, Repo, and Spin. Four functional pillars of an interoperable computing site. We can see in each of the three types of workflows the need for each of these four functional pillars, albeit some as a no-op or inherited from a higher order workflow. For example, in a "type 1" workflow of components running on a single machine or within an HPC allocation the Auth aspects may be implied to be already addressed - i.e. the user is already logged into the machine or authorized to run on the HPC cluster. But a workflow which utilizes compute resources both on-prem and in the cloud will have to interact at runtime with the "auth" aspects of the cloud provider prior to being able to "run" workloads, or put and get data to various "repos". Most cloud providers provide a means to list available computing resources, to "spin" them up and down. This provisioning itself can be part of an end-to-end workflow: authenticate, get an inventory of available services, spin some up, run jobs on them storing the results, and spin them down. Stuck in the Middle Most cloud providers - from Amazon to IBM Quantum cloud - provide a callable API interface which can be viewed through the lens of Auth, Run, Repo, Spin. So do some of the supercomputers and cutting edge resources provided by the Federal government, most notably those provided by the National Energy Research Scientific Computing Center (NERSC). [11] As Sites, these providers expose their offerings to internal and external workflows, however, they do not themselves promote a means to author these cross-site workflows, to manage them, track them, or keep tabs on all that distributed data. What else is needed? First, since cloud and other service providers have no motivation to standardize their interfaces, a framework super-interface could exist with the ability to plug in drivers for specific service providers. This in theory is the Auth, Run, Repo, Spin interface. Second, since each provider defines their own service and runtime component lifecycle (loosely: start, run, and stop with success or fail end states) there needs to be a way to normalize the status terminology - a "fail" on one site is the same as an "error" on another, "success" means the same thing as "done". This permits the third aspect of a middleware framework - the ability to track running jobs on Sites and trigger other jobs on any Site to run accordingly - i.e. the control flow of the workflow. What about the data? Commonly we need the ability to put data to a Site and get some back - this is the Repo interface of the Site. And while most (but not all) Sites provide some means to store and retrieve data, be it filesystem or S3 object store or database or something else, it would also be nice to be able to say something "meta" about the data - which Site did it come from, what job or application produced it, what other workflow steps on this Site or others consumed it? Some Sites provide storage with metadata (e.g. Amazon S3) but most don't. This metadata comprises the provenance of the data - like a Civil War sword on the Antiques Roadshow, its the paper trail showing where the item came from, proving the item is legit. In a workflow which perhaps produces many pieces of data, perhaps iteratively as it converges on a solution - keeping track of all the data pieces seems, well, important. The acronym FAIR - findable, accessible, interoperable, reusable - seems a good starting point. [12] Open Says Me Our open source project lwfm, the "local workflow manager", attempts to render these concepts as a reference implementation. [13] Its small with minimal Python lib dependencies and can be taken anywhere easily as a single runnable component, its provenancial metadata also easily portable and importable. A typical Site driver - a Python class which implements the Site interface - weighs in around 200 lines of code including the whitespace. Armed with a Site driver for a cloud service, you can author long-running workflows which utilize a mix of compute resources, storage, and data infrastructures, and automatically track the provenancial paper trail. The lwfm middleware component provides some very recognizable services: polling of remote job status status normalization and persistencesystem and user metadata persistenceevent handling, control flow and data flow triggered Should you use this tooling? I wouldn't recommend it. (Huh? Did I hear you correctly?) How many people are working maintaining it? (Two?) What about the community? (Next to none.) The software would fare poorly on a "spider web" analysis of its overall quality - you would not want to recommend it to your boss. A convenient multi-axis assessment framework for software model maturity. [14] The lwfm is a reference implementation of a workflow interop framework, at best. Are there alternatives? OMG are there alternatives! The workflow landscape is notoriously rich, fragmented, and super-niched. But portability and interoperability are often neglected as is data provenance. Government or university projects, while well meaning and sometimes directionally correct, quickly go stale when the funding elapses [15], and commercial solutions while often suffering some of the same deficiencies offer the added trap of vendor lock and can come with a hefty price tag. Order, Order So its back to committee. [16] Next week the high performance computing community will be meeting again at the SC Conference Series Supercomputing 2024, this year in Atlanta. Hybrid workflows for scientific and engineering applications - involving classical HPC, AI-focused clusters, and now also quantum computers - will be among the very many topics discussed.[17] And we should expect some surprises - in the new rankings for example of top machines on the planet, at least, the ones they want us to know about. [18] Perhaps I'll report back on some of those returns in a future blog. Best regards. - andy References &amp; Amusements [0] Banner photo by Ben Wicks on Unsplash [1] "Surfing the Singularity: The Universe Computes", A. Gallo, https://www.linkedin.com/pulse/surfing-singularity-universe-computes-andy-gallo-6fgle [2] TIOBE ranking of programming language popularity: https://www.tiobe.com/tiobe-index/ [3] Safe C++, with some chronology of the government statements: https://safecpp.org/ [4] SYCL: https://www.khronos.org/sycl/ [5] "Post-variational quantum neural networks", https://pennylane.ai/qml/demos/tutorial_post-variational_quantum_neural_networks [6] "Hope Versus Hype: Quantum, AI and the Path to Commercial Advantage", Matthias Troyer, presentation at IEEE Quantum Week, Montreal, September 2024. [7] LLVM: https://llvm.org/ [8] https://amturing.acm.org/award_winners/allen_1012327.cfm [9] "Industrial Experience Deploying Heterogeneous Platforms for Use in Multi-Modal Power Systems Design Workflows", A. Gallo et al, https://drive.google.com/file/d/1c3YEVmEAUjbI5urj4PiV2TtjzBUzLlws [10] "Mending Wall, Robert Frost, https://www.poetryfoundation.org/poems/44266/mending-wall [11] NERSC SuperFacility API: https://docs.nersc.gov/services/sfapi/ [12] "The FAIR Guiding Principles for scientific data management and stewardship", Mark D. Wilkinson et al., https://pmc.ncbi.nlm.nih.gov/articles/PMC4792175/pdf/sdata201618.pdf [13] lwfm, https://github.com/lwfm-proj/lwfm [14] "Model Maturity Web", https://richardarthur.medium.com/co-design-web-6f37664ac1e1 [15] Them's fighting words, and I expect to be roasted for it. But it seems to me that even the most popular software tool kits (no names) which emerged from the massively government funded ExaScale Computing Project failed to gain traction outside of a narrow community, failed to provide sustainable maintenance in the face of the funded end of the ECP, and would thus fair similarly poorly on a spider web analysis of their sustainability, their recommendability. [16] "Workflows Community Summit 2024: Future Trends and Challenges in Scientific Workflows", da Silva et al, "https://zenodo.org/records/13844759. I participated in the event, as well as the prior in 2022, and you can compare to that report as well: "Workflows Community Summit 2022: A Roadmap Revolution", also da Silva et al, https://zenodo.org/records/7750670. [17] SC24, https://sc24.conference-program.com/ [18] TOP 500 supercomputers, June 2024, https://top500.org/lists/top500/list/2024/06/ - to be updated again before Thanksgiving.]]></summary></entry><entry><title type="html">Surfing the Singularity - The Universe Computes</title><link href="https://hpc.social/personal-blog/2024/surfing-the-singularity-the-universe-computes/" rel="alternate" type="text/html" title="Surfing the Singularity - The Universe Computes" /><published>2024-09-30T16:00:00-06:00</published><updated>2024-09-30T16:00:00-06:00</updated><id>https://hpc.social/personal-blog/2024/surfing-the-singularity-the-universe-computes</id><content type="html" xml:base="https://hpc.social/personal-blog/2024/surfing-the-singularity-the-universe-computes/"><![CDATA[<p><span style="font-family: verdana;"><span>Just back from the</span><span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.linkedin.com/company/ieee-computer-society/" target="_self">IEEE Computer Society</a><span class="white-space-pre"> </span><span>Quantum Week in Montreal, and besides eating my weight in pastry and bagels [1], it was a great conference. The collective hardware roadmaps from the major players leaves us thinking the big wave in quantum computing is not here yet, but soon - perhaps in 5 years time for scientific applications, and within a decade for commercial utility. While the current software continues to be sparse and low-level, there are inklings of software engineers starting to build up a stack in anticipation of needing one. But besides that, and at the risk of sounding like the other hot topic - AI marketeer hype [2] - there is the sense with quantum of being present at a new phase in computing at least, if not something larger still.</span><span class="white-space-pre"> </span></span></p>
<blockquote class="ember-view reader-text-block__blockquote" id="ember3175"><span style="color: #04ff00; font-family: verdana;">The concept of the computing universe is still just a hypothesis; nothing has been proved. However, I am confident that this idea can help unveil the secrets of nature. - Konrad Zuse, 1969 [3]</span></blockquote>
<p class="ember-view reader-text-block__paragraph" id="ember3176"><span style="font-family: verdana;">It seems, at its core, that the universe computes. Conch shells grow in logarithmic spirals, bees and orb weavers understand structural geometry. Many animals - not including Mr. Ed or Clever Hans [4], but including primates, fish, and rats - have been shown to use simple arithmetic or approximations, and in other cases can show ability to order objects in a list. There are lizards and sea shells with surface patterns constructed by cellular automata processes - simple rules which can produce complex structures, like Conway's "Game of Life". Ducks, using an inherently quantum mechanical biological process, can see magnetic fields giving them a kind of "heads up" display when migrating. [5]<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3177"><span style="font-family: verdana;"><br /></span></p>
<div class="reader-image-block reader-image-block--full-width"><figure class="reader-image-block__figure"><div class="ivm-image-view-model   "><div class="ivm-view-attr__img-wrapper
        
        "><img alt="" class="ivm-view-attr__img--centered  reader-image-block__img evi-image lazy-image ember-view" id="ember3178" src="https://media.licdn.com/dms/image/v2/D4E12AQF2LHaealtiYA/article-inline_image-shrink_1000_1488/article-inline_image-shrink_1000_1488/0/1727727559513?e=1740009600&amp;v=beta&amp;t=vLl0WFGaEuH2xJfhffuvIBSRwDXRnMtGU8m-kADT2c4" /></div>
</div>
<figcaption class="reader-image-block__figure-image-caption display-block full-width text-body-small-open t-sans text-align-center t-black--light"><span style="font-family: verdana;">A variation on Conway's "Game of Life" [6]</span></figcaption></figure></div>
<p class="ember-view reader-text-block__paragraph" id="ember3179"><span style="font-family: verdana;">Our own eyes are themselves literally photon detectors, our retinas and optic nerves pre-processing the signals before they even get to the brain. DNA stores vast amounts of information in simple patterns of four "letters" (effectively two classical bits), recipes to manufacture from the raw material of the universe a wide array of proteins for all manner of biological purposes, including of course growing your own brain. Humans can themselves perform the manual calculations necessary to build bridges and other structures which can span and withstand the forces of nature for centuries. Its also not hard to see computation of a kind in plants and their systemic networks of roots. Is the universe computing, or is the universe doing the only thing it can based on the rules? Water flowing downhill. Lightning finding its own path of least resistance. Entangled electrons separated at distance flipping their spin in response to their partner, in real time. [7]</span></p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p><br />&lt;div class="reader-embed-block__iframe-embed"&gt;<br />&lt;/div&gt;</p>
<div class="reader-embed-block__iframe-embed"><br /></div>
<div class="reader-embed-block__iframe-embed"></div>
<h3 class="ember-view reader-text-block__heading-3" id="ember3181"><span style="font-family: verdana; font-size: x-large;">An Entangled History</span></h3>
<blockquote class="ember-view reader-text-block__blockquote" id="ember3182"><span style="color: #04ff00; font-family: verdana;">Nature isn't classical, dammit, and if you want to make a simulation of nature, you'd better make it quantum mechanical. - Richard Feynman [8]<span class="white-space-pre"> </span></span></blockquote>
<blockquote class="ember-view reader-text-block__blockquote" id="ember3183"><span style="color: #04ff00; font-family: verdana;">I think I can safely say that nobody understands quantum mechanics. - Richard Feynman [9]</span></blockquote>
<p class="ember-view reader-text-block__paragraph" id="ember3184"><span style="font-family: verdana;">In the 1920s physicists like Heisenberg, Born, Pauli, and SchrÃ¶dinger convinced their peers of the validity of a new formulation of the laws of physics they called (in German) "quantum mechanics", describing the behavior of nature and the universe even below the scale of atoms. This then led computing pioneer John Von Neumann in the 1930s to solidify some of the necessary maths to perform discrete quantum mechanical calculations. Von Neumann, a member of the Manhattan Project, would go on to formulate the hardware architecture for today's "classical" computers, the approach to computing being challenged by quantum computing today.<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3185"><span style="font-family: verdana;">Since then, mostly notably in the 1940s with the Manhattan Project, humans have shown an increasing ability to harness the basic quantum physics into a new range of applications. We learned how to make superconductors, and how to park and manipulate individual atoms like tinkertoys [10], and now we've learned how to use these skills to make computers, with most immediate applications in modeling quantum systems like atoms and molecules, as Nobel laureate and Manhattan Project member Feynman predicted more than 40 years ago. We learned how to make lasers and LEDs, and we can now also harness photons for computing. The scientists have had nearly a century to refine their theories, and are now handing off to the engineers to prove the depth of human understanding by building things in the real world, with the business people eagerly waiting on the sidelines in anticipation (think: MRI machines). It seems that the universe computes - we now endeavor to make use of that knowledge for our own human purposes.<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3186"><span style="font-family: verdana;"><br /></span></p>
<h3 class="ember-view reader-text-block__heading-3" id="ember3187"><span style="font-family: verdana; font-size: x-large;">Qubits, Gates, and Error Everywhere</span></h3>
<p class="ember-view reader-text-block__paragraph" id="ember3188"><span style="font-family: verdana;">What is a qubit? Like the early video game Q*bert which showed a simulated 3D world on a 2D screen back in 1982, a qubit is a little hard to visualize as it goes deeper than a classical binary bit - much deeper. While a bit can be either a zero or a one but nothing else, a qubit can model the<span class="white-space-pre"> </span><span>probability</span><span class="white-space-pre"> </span>of a zero or a one and probabilistically anything in between. It might be a zero, or it might be a one, with some probability of each. It might start off a zero, and then noise from the environment might cause it to drift, or it might move off the zero purposefully as a result of acting on the qubit with one of several kinds of single and multi-qubit gates. Like gates in classical computing, a quantum gate can flip the qubit, or unique to quantum just nudge it a little. As in classical computing, its the acting on the qubit by gates which results in the computing. A native quantum program is a circuit, a directed graph, composed of gates.<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3189"><span style="font-family: verdana;"><br /></span></p>
<div class="reader-image-block reader-image-block--full-width"><figure class="reader-image-block__figure"><div class="ivm-image-view-model   "><div class="ivm-view-attr__img-wrapper
        
        "><img alt="" class="ivm-view-attr__img--centered  reader-image-block__img evi-image lazy-image ember-view" id="ember3190" src="https://media.licdn.com/dms/image/v2/D4E12AQFAklbbJReWZA/article-inline_image-shrink_1500_2232/article-inline_image-shrink_1500_2232/0/1727726980638?e=1740009600&amp;v=beta&amp;t=vnbWE-YUgsGxlQf5M2FnYJ7DLtJl-P7NvK_b0j3YVw0" /></div>
</div>
<figcaption class="reader-image-block__figure-image-caption display-block full-width text-body-small-open t-sans text-align-center t-black--light"><span style="font-family: verdana;">Visualizing the effect of various quantum gates on a single qubit. [11]</span></figcaption></figure></div>
<p class="ember-view reader-text-block__paragraph" id="ember3191"><span class="white-space-pre"><span style="font-family: verdana;"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3192"><span style="font-family: verdana;">How fast can we flip a qubit? Heisenberg 100 years ago gave us a way to compute the lower bound on the time to flip a spin given an energy - in short, its fast. But this doesn't even tell the whole performance story because of superposition and the ability of wide circuits to act on multiple qubits simultaneously - the speed advantage of quantum over classical can be exponential, albeit application-specific, making a class of problems which would be classically uncomputable in any human lifetime now well within reach.<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3193"><span style="font-family: verdana;">The main challenge in realizing these potentials is the noise. Qubits are noisy, meaning they don't stay fixed where you think you last left them, and the seemingly magical entanglement also can show decoherence over time and distance. The gates necessary for computation can themselves introduce noisy error, as can the act of measuring the qubit to sample the solution result. Software algorithms can also just be estimates, and thus introduce their own error term relative to experiment. The prevalence of error in quantum computing means the algorithms themselves must be aware the results might be unpredictable, might need to be computed more then once to improve confidence, and might need to allocate and use a good number of precious qubits just to help mitigate the errors. We call the period we are in today the "NISQ era", meaning, noisy intermediate scale quantum computing.<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3194"><span style="font-family: verdana;">Beyond the noise, how do we quantify "scale" or other metrics for sizing up the capabilities of quantum computers, now, in future, and as compared to classical? One aspect of the problem is that when comparing quantum to classical we're not comparing apples to apples, and even within "quantum apples" as we have seen, there are different kinds. [12] In one simple measure we can count qubits, but we must also know their error rate, and we must notice something about their connectedness - some quantum hardware use an all-to-all grid, and others use other topologies - racetracks and the like. And qubits can fail. Because of the limitations of qubits in the NISQ era the connectedness matters, is necessary to be known at time of circuit transpilation, and may result in swaps or other strategies employed by the transpiler toolchain to minimize errors due to the physical layout. Qubit coherence in superposition can be measured and reported as a hardware spec. Quantum<span class="white-space-pre"> </span><span>volume</span><span class="white-space-pre"> </span>is a number which expresses the size of a circuit N qubits wide by d gates deep which can be executed on a given machine. Gate errors especially for 2-qubit gates can be reported by the vendor. CLOPS - circuit layer operations per second - is another proposed metric which takes into consideration the time to prepare the qubits, execute the gates, and take the measurement of the result. [13] The US government in the form of<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.linkedin.com/company/darpa/">Defense Advanced Research Projects Agency (DARPA)</a><span class="white-space-pre"> </span>has gotten into the game of studying this varied performance landscape, towards being able to help pick winners and losers and accelerate innovation with funding awards. [14]<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3195"><span style="font-family: verdana;"><br /></span></p>
<h3 class="ember-view reader-text-block__heading-3" id="ember3196"><span style="font-family: verdana; font-size: x-large;">Quantum Hardware Roadmap</span></h3>
<blockquote class="ember-view reader-text-block__blockquote" id="ember3197"><span style="color: #04ff00; font-family: verdana;">I build quantum computers that store information on individual atoms and then massage the normal interactions between atoms to make them compute. - Seth Lloyd [15]</span></blockquote>
<p class="ember-view reader-text-block__paragraph" id="ember3198"><span style="font-family: verdana;">This year's IEEE Quantum Week was an opportunity to see and hear from most of the major players in quantum computing R&amp;D - those focused on quantum processors, systems control, networking, and software. The software topic we'll leave as a topic of a future blog, but focusing on hardware, the vendors collectively represented multiple distinct technical mechanisms to making a quantum computing machine. There's superconducting qubits from US companies like<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.linkedin.com/showcase/ibm-quantum/">IBM Quantum</a><span class="white-space-pre"> </span>,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.linkedin.com/company/google/">Google</a><span class="white-space-pre"> </span>, and<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.linkedin.com/company/rigetti-computing/">Rigetti Computing</a>, which refrigerate and maintain the qubit between a ground and an excited state. Trapped ion computers from companies like<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.linkedin.com/company/ionq-co/">IonQ</a><span class="white-space-pre"> </span>and<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.linkedin.com/company/quantinuumqc/">Quantinuum</a><span class="white-space-pre"> </span>, and neutral atom computers from<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.linkedin.com/company/quera-computing-inc/">QuEra Computing Inc.</a><span class="white-space-pre"> </span>use novel methods to again cool the system qubits to near absolute zero. But there are quantum computers which also operate quite differently. Quantum annealing, or algorithmically simulating an adiabatic process for slowly evolving a system to an optimal state, could be simulated on one of the above general quantum machines, or shown more directly on a specialized quantum machine from a Canadian company like<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.linkedin.com/company/d-wave-quantum/">D-Wave</a>.<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.linkedin.com/company/xanaduai/">Xanadu</a>, also based in Canada, performs its quantum tricks with photonics. And while Google may jump the gun on announcing successes from time to time, they and<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.linkedin.com/company/microsoft/">Microsoft</a><span class="white-space-pre"> </span>and others are working on a "topological qubit" based on previously only-hypothesized Majorana particles which provide the great advantage relative to other qubit implementations of being able to be controlled digitally. [16, 17]<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3199"><span style="font-family: verdana;">Staying within the NISQ era as the machines scale up, a good chunk of the available qubits will continue to be allocated to error correction schemes, a task which may later as these systems mature be allocated to a software layer. At 100s of useful error-corrected qubits we can start to gain real scientific utility from quantum computing - begin to do research<span class="white-space-pre"> </span><span>with</span><span class="white-space-pre"> </span>quantum rather than research<span class="white-space-pre"> </span><span>about</span><span class="white-space-pre"> </span>quantum. Vendors such as Quantinuum promise a fully connected machine of that size in 5 years. In 10 years, vendors expect to deliver machines with 1000s of QEC, which will usher in commercial utility, and the era of "cryptographically relevant" quantum computing (i.e. DARPA wants the US to get there first [18]).<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3200"><span style="font-family: verdana;">In the meantime, certain scientific domains, those which study things most closely associated with real quantum systems, will be early adopters of the technology. Molecular biology. Chemistry, for example, studying better ways to perform synthetic nitrogen fixation (think: energy-costly ammonia production for fertilizers).<span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3201"><span style="font-family: verdana;"><br /></span></p>
<h3 class="ember-view reader-text-block__heading-3" id="ember3202"><span style="font-family: verdana; font-size: x-large;">Conclusion<span class="white-space-pre"> </span></span></h3>
<p class="ember-view reader-text-block__paragraph" id="ember3203"><span style="font-family: verdana;">The quantum hardware industry is in its infancy. From this gaggle of eager go-getters itâs reasonable to assume there will be technical and business winners and losers. For reasons of national security, governments will ramp up their involvement. But current machines are small, flaky, and limited in usefulness. It will be 5 to 10 years before there are quantum computers being used more commonly. A new but also a familiar approach to software will be needed - more on that in a future blog. Until utility some industries will be early leaders, ready to capitalize on an exponential increase in computing capability, one which promises to get us closer to harnessing the grand computing engine of the universe which is all around and within.</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3204"><span style="font-family: verdana;"><br /></span></p>
<h3 class="ember-view reader-text-block__heading-3" id="ember3205"><span style="font-family: verdana; font-size: x-large;">References &amp; Trivia</span></h3>
<p class="ember-view reader-text-block__paragraph" id="ember3206"><span style="font-family: verdana;">[0] Photo by Ben Wicks on Unsplash</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3207"><span style="font-family: verdana;">[1] Montreal bagels:<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.mtl.org/en/experience/the-famous-montreal-bagel" target="_self">https://www.mtl.org/en/experience/the-famous-montreal-bagel</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3208"><span style="font-family: verdana;">[2] Gartner AI Hype Cycle 2024 explained:<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.youtube.com/watch?v=qXKYOR3KqxQ" target="_self">https://www.youtube.com/watch?v=qXKYOR3KqxQ</a><span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3209"><span style="font-family: verdana;">[3] "Calculating Space", Konrad Zuse, 1969,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://philpapers.org/archive/ZUSRR.pdf" target="_self">https://philpapers.org/archive/ZUSRR.pdf</a><span class="white-space-pre"> </span>Its worth noting that while having worked for Ford Motor Co. in his early career, and like Von Neumann doing very important early work on computers, Zuse was a conscripted employee of the German Nazi government from 1939-1945.</span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3210"><span style="font-family: verdana;">[4] Clever Hans:<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.horsejournals.com/popular/history-heritage/clever-hans" target="_self">https://www.horsejournals.com/popular/history-heritage/clever-hans</a><span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3211"><span style="font-family: verdana;">[5] "How Migrating Birds Use Quantum Effects to Navigate", Scientific American, April 2022,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.scientificamerican.com/article/how-migrating-birds-use-quantum-effects-to-navigate/" target="_self">https://www.scientificamerican.com/article/how-migrating-birds-use-quantum-effects-to-navigate/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3212"><span style="font-family: verdana;">[6] A variation on Conway's Game of Life,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://stackoverflow.com/questions/70019538/simple-animation-for-conways-game-of-life-with-funcanimation" target="_self">https://stackoverflow.com/questions/70019538/simple-animation-for-conways-game-of-life-with-funcanimation</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3213"><span style="font-family: verdana;">[7] "Real-Time Imaging of Quantum Entanglement", 2013,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://youtu.be/wGkx1MUw2TU?si=mnIExRs2ZOwv46Bh" target="_self">https://youtu.be/wGkx1MUw2TU?si=mnIExRs2ZOwv46Bh</a>, but not strangely enough "Entanglement between superconducting qubits and a tardigrade",<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://arxiv.org/pdf/2112.07978" target="_self">https://arxiv.org/pdf/2112.07978</a><span class="white-space-pre"> </span></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3214"><span style="font-family: verdana;">[8] "Simulating Physics with Computers", International Journal of Theoretical Physics vol 21, transcript of a talk at MIT by Richard Feynman, 1981,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://s2.smu.edu/~mitch/class/5395/papers/feynman-quantum-1981.pdf" target="_self">https://s2.smu.edu/~mitch/class/5395/papers/feynman-quantum-1981.pdf</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3215"><span style="font-family: verdana;">[9] "The Character of Physical Law", transcript of lectures by Richard Feynman at Cornell U, 1967,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://archive.org/details/characterofphysi0000feyn/page/12/mode/2up" target="_self">https://archive.org/details/characterofphysi0000feyn/page/12/mode/2up</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3216"><span style="font-family: verdana;">[10] "2 Researchers Spell 'I.B.M.' Atom by Atom", New York Times, April 5, 1990,<a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://timesmachine.nytimes.com/timesmachine/1990/04/05/356490.html?pageNumber=41" target="_self">https://timesmachine.nytimes.com/timesmachine/1990/04/05/356490.html?pageNumber=41</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3217"><span style="font-family: verdana;">[11] "Qubit Bloch Sphere Visualization", Casey Duckering,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://raw.githubusercontent.com/cduck/bloch_sphere/master/examples/xyss_gate.gif" target="_self">https://raw.githubusercontent.com/cduck/bloch_sphere/master/examples/xyss_gate.gif</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3218"><span style="font-family: verdana;">[12] Its apple picking season here in New York:<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.applesfromny.com/varieties/" target="_self">https://www.applesfromny.com/varieties/</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3219"><span style="font-family: verdana;">[13] "Driving quantum performance: more qubits, higher Quantum Volume, and now a proper measure of speed",<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.ibm.com/quantum/blog/circuit-layer-operations-per-second" target="_self">https://www.ibm.com/quantum/blog/circuit-layer-operations-per-second</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3220"><span style="font-family: verdana;">[14] DARPA Quantum Benchmarking Initiative,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.darpa.mil/work-with-us/quantum-benchmarking-initiative" target="_self">https://www.darpa.mil/work-with-us/quantum-benchmarking-initiative</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3221"><span style="font-family: verdana;">[15] "The Computational Universe", Seth Lloyd, 2002,<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.edge.org/conversation/seth_lloyd-the-computational-universe" target="_self">https://www.edge.org/conversation/seth_lloyd-the-computational-universe</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3222"><span style="font-family: verdana;">[16] "Google Claims To Achieve Quantum Supremacy â IBM Pushes Back",<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.npr.org/2019/10/23/772710977/google-claims-to-achieve-quantum-supremacy-ibm-pushes-back" target="_self">https://www.npr.org/2019/10/23/772710977/google-claims-to-achieve-quantum-supremacy-ibm-pushes-back</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3223"><span style="font-family: verdana;">[17] "A route to scalable Majorana qubits",<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://phys.org/news/2024-06-route-scalable-majorana-qubits.html" target="_self">https://phys.org/news/2024-06-route-scalable-majorana-qubits.html</a></span></p>
<p class="ember-view reader-text-block__paragraph" id="ember3224"><span style="font-family: verdana;">[18] "DARPA's quantum computing is powered by ... FOMO",<span class="white-space-pre"> </span><a class="bpCpipVrrjRHIWtfjEjtbNsDescTJyo " href="https://www.theregister.com/2023/02/02/darpa_quantum_microsoft/" target="_self">https://www.theregister.com/2023/02/02/darpa_quantum_microsoft/</a></span></p>
<div><br /></div>]]></content><author><name>Surfing the Singularity</name></author><category term="surfthesing" /><summary type="html"><![CDATA[Just back from the IEEE Computer Society Quantum Week in Montreal, and besides eating my weight in pastry and bagels [1], it was a great conference. The collective hardware roadmaps from the major players leaves us thinking the big wave in quantum computing is not here yet, but soon - perhaps in 5 years time for scientific applications, and within a decade for commercial utility. While the current software continues to be sparse and low-level, there are inklings of software engineers starting to build up a stack in anticipation of needing one. But besides that, and at the risk of sounding like the other hot topic - AI marketeer hype [2] - there is the sense with quantum of being present at a new phase in computing at least, if not something larger still. The concept of the computing universe is still just a hypothesis; nothing has been proved. However, I am confident that this idea can help unveil the secrets of nature. - Konrad Zuse, 1969 [3] It seems, at its core, that the universe computes. Conch shells grow in logarithmic spirals, bees and orb weavers understand structural geometry. Many animals - not including Mr. Ed or Clever Hans [4], but including primates, fish, and rats - have been shown to use simple arithmetic or approximations, and in other cases can show ability to order objects in a list. There are lizards and sea shells with surface patterns constructed by cellular automata processes - simple rules which can produce complex structures, like Conway's "Game of Life". Ducks, using an inherently quantum mechanical biological process, can see magnetic fields giving them a kind of "heads up" display when migrating. [5] A variation on Conway's "Game of Life" [6] Our own eyes are themselves literally photon detectors, our retinas and optic nerves pre-processing the signals before they even get to the brain. DNA stores vast amounts of information in simple patterns of four "letters" (effectively two classical bits), recipes to manufacture from the raw material of the universe a wide array of proteins for all manner of biological purposes, including of course growing your own brain. Humans can themselves perform the manual calculations necessary to build bridges and other structures which can span and withstand the forces of nature for centuries. Its also not hard to see computation of a kind in plants and their systemic networks of roots. Is the universe computing, or is the universe doing the only thing it can based on the rules? Water flowing downhill. Lightning finding its own path of least resistance. Entangled electrons separated at distance flipping their spin in response to their partner, in real time. [7] &lt;div class="reader-embed-block__iframe-embed"&gt;&lt;/div&gt; An Entangled History Nature isn't classical, dammit, and if you want to make a simulation of nature, you'd better make it quantum mechanical. - Richard Feynman [8] I think I can safely say that nobody understands quantum mechanics. - Richard Feynman [9] In the 1920s physicists like Heisenberg, Born, Pauli, and SchrÃ¶dinger convinced their peers of the validity of a new formulation of the laws of physics they called (in German) "quantum mechanics", describing the behavior of nature and the universe even below the scale of atoms. This then led computing pioneer John Von Neumann in the 1930s to solidify some of the necessary maths to perform discrete quantum mechanical calculations. Von Neumann, a member of the Manhattan Project, would go on to formulate the hardware architecture for today's "classical" computers, the approach to computing being challenged by quantum computing today. Since then, mostly notably in the 1940s with the Manhattan Project, humans have shown an increasing ability to harness the basic quantum physics into a new range of applications. We learned how to make superconductors, and how to park and manipulate individual atoms like tinkertoys [10], and now we've learned how to use these skills to make computers, with most immediate applications in modeling quantum systems like atoms and molecules, as Nobel laureate and Manhattan Project member Feynman predicted more than 40 years ago. We learned how to make lasers and LEDs, and we can now also harness photons for computing. The scientists have had nearly a century to refine their theories, and are now handing off to the engineers to prove the depth of human understanding by building things in the real world, with the business people eagerly waiting on the sidelines in anticipation (think: MRI machines). It seems that the universe computes - we now endeavor to make use of that knowledge for our own human purposes. Qubits, Gates, and Error Everywhere What is a qubit? Like the early video game Q*bert which showed a simulated 3D world on a 2D screen back in 1982, a qubit is a little hard to visualize as it goes deeper than a classical binary bit - much deeper. While a bit can be either a zero or a one but nothing else, a qubit can model the probability of a zero or a one and probabilistically anything in between. It might be a zero, or it might be a one, with some probability of each. It might start off a zero, and then noise from the environment might cause it to drift, or it might move off the zero purposefully as a result of acting on the qubit with one of several kinds of single and multi-qubit gates. Like gates in classical computing, a quantum gate can flip the qubit, or unique to quantum just nudge it a little. As in classical computing, its the acting on the qubit by gates which results in the computing. A native quantum program is a circuit, a directed graph, composed of gates. Visualizing the effect of various quantum gates on a single qubit. [11] How fast can we flip a qubit? Heisenberg 100 years ago gave us a way to compute the lower bound on the time to flip a spin given an energy - in short, its fast. But this doesn't even tell the whole performance story because of superposition and the ability of wide circuits to act on multiple qubits simultaneously - the speed advantage of quantum over classical can be exponential, albeit application-specific, making a class of problems which would be classically uncomputable in any human lifetime now well within reach. The main challenge in realizing these potentials is the noise. Qubits are noisy, meaning they don't stay fixed where you think you last left them, and the seemingly magical entanglement also can show decoherence over time and distance. The gates necessary for computation can themselves introduce noisy error, as can the act of measuring the qubit to sample the solution result. Software algorithms can also just be estimates, and thus introduce their own error term relative to experiment. The prevalence of error in quantum computing means the algorithms themselves must be aware the results might be unpredictable, might need to be computed more then once to improve confidence, and might need to allocate and use a good number of precious qubits just to help mitigate the errors. We call the period we are in today the "NISQ era", meaning, noisy intermediate scale quantum computing. Beyond the noise, how do we quantify "scale" or other metrics for sizing up the capabilities of quantum computers, now, in future, and as compared to classical? One aspect of the problem is that when comparing quantum to classical we're not comparing apples to apples, and even within "quantum apples" as we have seen, there are different kinds. [12] In one simple measure we can count qubits, but we must also know their error rate, and we must notice something about their connectedness - some quantum hardware use an all-to-all grid, and others use other topologies - racetracks and the like. And qubits can fail. Because of the limitations of qubits in the NISQ era the connectedness matters, is necessary to be known at time of circuit transpilation, and may result in swaps or other strategies employed by the transpiler toolchain to minimize errors due to the physical layout. Qubit coherence in superposition can be measured and reported as a hardware spec. Quantum volume is a number which expresses the size of a circuit N qubits wide by d gates deep which can be executed on a given machine. Gate errors especially for 2-qubit gates can be reported by the vendor. CLOPS - circuit layer operations per second - is another proposed metric which takes into consideration the time to prepare the qubits, execute the gates, and take the measurement of the result. [13] The US government in the form of Defense Advanced Research Projects Agency (DARPA) has gotten into the game of studying this varied performance landscape, towards being able to help pick winners and losers and accelerate innovation with funding awards. [14] Quantum Hardware Roadmap I build quantum computers that store information on individual atoms and then massage the normal interactions between atoms to make them compute. - Seth Lloyd [15] This year's IEEE Quantum Week was an opportunity to see and hear from most of the major players in quantum computing R&amp;D - those focused on quantum processors, systems control, networking, and software. The software topic we'll leave as a topic of a future blog, but focusing on hardware, the vendors collectively represented multiple distinct technical mechanisms to making a quantum computing machine. There's superconducting qubits from US companies like IBM Quantum , Google , and Rigetti Computing, which refrigerate and maintain the qubit between a ground and an excited state. Trapped ion computers from companies like IonQ and Quantinuum , and neutral atom computers from QuEra Computing Inc. use novel methods to again cool the system qubits to near absolute zero. But there are quantum computers which also operate quite differently. Quantum annealing, or algorithmically simulating an adiabatic process for slowly evolving a system to an optimal state, could be simulated on one of the above general quantum machines, or shown more directly on a specialized quantum machine from a Canadian company like D-Wave. Xanadu, also based in Canada, performs its quantum tricks with photonics. And while Google may jump the gun on announcing successes from time to time, they and Microsoft and others are working on a "topological qubit" based on previously only-hypothesized Majorana particles which provide the great advantage relative to other qubit implementations of being able to be controlled digitally. [16, 17] Staying within the NISQ era as the machines scale up, a good chunk of the available qubits will continue to be allocated to error correction schemes, a task which may later as these systems mature be allocated to a software layer. At 100s of useful error-corrected qubits we can start to gain real scientific utility from quantum computing - begin to do research with quantum rather than research about quantum. Vendors such as Quantinuum promise a fully connected machine of that size in 5 years. In 10 years, vendors expect to deliver machines with 1000s of QEC, which will usher in commercial utility, and the era of "cryptographically relevant" quantum computing (i.e. DARPA wants the US to get there first [18]). In the meantime, certain scientific domains, those which study things most closely associated with real quantum systems, will be early adopters of the technology. Molecular biology. Chemistry, for example, studying better ways to perform synthetic nitrogen fixation (think: energy-costly ammonia production for fertilizers). Conclusion The quantum hardware industry is in its infancy. From this gaggle of eager go-getters itâs reasonable to assume there will be technical and business winners and losers. For reasons of national security, governments will ramp up their involvement. But current machines are small, flaky, and limited in usefulness. It will be 5 to 10 years before there are quantum computers being used more commonly. A new but also a familiar approach to software will be needed - more on that in a future blog. Until utility some industries will be early leaders, ready to capitalize on an exponential increase in computing capability, one which promises to get us closer to harnessing the grand computing engine of the universe which is all around and within. References &amp; Trivia [0] Photo by Ben Wicks on Unsplash [1] Montreal bagels: https://www.mtl.org/en/experience/the-famous-montreal-bagel [2] Gartner AI Hype Cycle 2024 explained: https://www.youtube.com/watch?v=qXKYOR3KqxQ [3] "Calculating Space", Konrad Zuse, 1969, https://philpapers.org/archive/ZUSRR.pdf Its worth noting that while having worked for Ford Motor Co. in his early career, and like Von Neumann doing very important early work on computers, Zuse was a conscripted employee of the German Nazi government from 1939-1945. [4] Clever Hans: https://www.horsejournals.com/popular/history-heritage/clever-hans [5] "How Migrating Birds Use Quantum Effects to Navigate", Scientific American, April 2022, https://www.scientificamerican.com/article/how-migrating-birds-use-quantum-effects-to-navigate/ [6] A variation on Conway's Game of Life, https://stackoverflow.com/questions/70019538/simple-animation-for-conways-game-of-life-with-funcanimation [7] "Real-Time Imaging of Quantum Entanglement", 2013, https://youtu.be/wGkx1MUw2TU?si=mnIExRs2ZOwv46Bh, but not strangely enough "Entanglement between superconducting qubits and a tardigrade", https://arxiv.org/pdf/2112.07978 [8] "Simulating Physics with Computers", International Journal of Theoretical Physics vol 21, transcript of a talk at MIT by Richard Feynman, 1981, https://s2.smu.edu/~mitch/class/5395/papers/feynman-quantum-1981.pdf [9] "The Character of Physical Law", transcript of lectures by Richard Feynman at Cornell U, 1967, https://archive.org/details/characterofphysi0000feyn/page/12/mode/2up [10] "2 Researchers Spell 'I.B.M.' Atom by Atom", New York Times, April 5, 1990,https://timesmachine.nytimes.com/timesmachine/1990/04/05/356490.html?pageNumber=41 [11] "Qubit Bloch Sphere Visualization", Casey Duckering, https://raw.githubusercontent.com/cduck/bloch_sphere/master/examples/xyss_gate.gif [12] Its apple picking season here in New York: https://www.applesfromny.com/varieties/ [13] "Driving quantum performance: more qubits, higher Quantum Volume, and now a proper measure of speed", https://www.ibm.com/quantum/blog/circuit-layer-operations-per-second [14] DARPA Quantum Benchmarking Initiative, https://www.darpa.mil/work-with-us/quantum-benchmarking-initiative [15] "The Computational Universe", Seth Lloyd, 2002, https://www.edge.org/conversation/seth_lloyd-the-computational-universe [16] "Google Claims To Achieve Quantum Supremacy â IBM Pushes Back", https://www.npr.org/2019/10/23/772710977/google-claims-to-achieve-quantum-supremacy-ibm-pushes-back [17] "A route to scalable Majorana qubits", https://phys.org/news/2024-06-route-scalable-majorana-qubits.html [18] "DARPA's quantum computing is powered by ... FOMO", https://www.theregister.com/2023/02/02/darpa_quantum_microsoft/]]></summary></entry></feed>