<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-US"><generator uri="https://jekyllrb.com/" version="3.9.5">Jekyll</generator><link href="https://hpc.social/personal-blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hpc.social/personal-blog/" rel="alternate" type="text/html" hreflang="en-US" /><updated>2024-04-19T20:34:57-06:00</updated><id>https://hpc.social/personal-blog/feed.xml</id><title type="html">hpc.social - Aggregated Personal Blog</title><subtitle>Shared personal experiences and stories</subtitle><author><name>hpc.social</name><email>info@hpc.social</email></author><entry><title type="html">Centralized system and LSF logging on a Turing Pi system</title><link href="https://hpc.social/personal-blog/2024/centralized-system-and-lsf-logging-on-a-turing-pi-system/" rel="alternate" type="text/html" title="Centralized system and LSF logging on a Turing Pi system" /><published>2024-04-05T12:34:38-06:00</published><updated>2024-04-05T12:34:38-06:00</updated><id>https://hpc.social/personal-blog/2024/centralized-system-and-lsf-logging-on-a-turing-pi-system</id><content type="html" xml:base="https://hpc.social/personal-blog/2024/centralized-system-and-lsf-logging-on-a-turing-pi-system/"><![CDATA[<p>Logs are one of those indispensable things in IT when things go wrong. Having worked in technical support for software products in a past life, I’ve likely looked at hundreds (or more) logs over the years, helping to identify issues. So, I really appreciate the importance of logs, but I can honestly say that I never really thought about a logging strategy for the systems on my home network - primarily those running Linux.</p>

<p>One of my longtime friends, <a href="https://peter.czanik.hu/">Peter Czanik</a>, who also works in IT, happens to be a logging guru as well as an IBM Champion for Power Systems (yeah!). So it’s only natural that we get to talking about logging. He is often complaining that even at IT security conferences people are unaware of the importance of central logging. So, why is it so important? For security it’s obvious: logs are stored independently from the compromised system, so they cannot be modified or deleted by the attacker. But central logging is beneficial for the HPC operator as well. First of all, it’s availability. You can read the logs even if one of your nodes becomes unreachable. Instead of trying to breath life into the failed node, you can just take a look at the logs and see a broken hard drive, or a similar deadly problem. And it is also convenience, as all logs are available at a single location. Logging into each node on the 3 node cluster to check locally saved logs is inconvenient but doable. On a 10 node cluster it takes a long time. On a 100 node cluster a couple of working days. While, if your logs are collected to a central location, maybe a single grep command, or search in a Kibana or similar web interface.</p>

<p>Those who follow my blog will know that I’ve been tinkering with a Turing Pi V1 system lately. You can read my latest post <a href="https://www.gaborsamu.com/blog/turingpi_noctua/">here</a>. For me, the Turing Pi has always been a cluster in a box. My Turing Pi is fully populated with 7 compute modules. I’ve designed Node 1 to be the NFS server and LSF manager for the cluster. LSF is a workload scheduler for high-performance computing (HPC) from IBM. Naturally I turned to Peter for his guidance on this, and the result is this blog. Peter recommended that I  use <a href="https://www.syslog-ng.com/">syslog-ng</a> for log aggregation and also helped me through some of my first steps with <em>syslog-ng</em>. And the goal was to aggregate both the system (syslog) as well as LSF logs on Node 1. TL;DR it was easy to get it all working. But I encourage you to read on to better understand the nuances and necessary configuration both syslog-ng and LSF that was needed.</p>

<p><strong>The environment</strong></p>

<p>The following software has been deployed on the Turing Pi:</p>

<ul>
<li>Raspberry Pi OS (<em>2023-02-21-raspios-bullseye-arm64-lite.img</em>)</li>
<li>syslog-ng 3 – (3.28.1 as supplied with Raspberry Pi OS)</li>
<li>IBM LSF Standard Edition V10.1.0.13</li>
</ul>
<p>The Turing Pi system is configured as follows:</p>

<p>Node 1 (<em>turingpi</em>) is the manager node of this cluster in a box and has by far the most storage. Naturally we want to use that as the centralized logging server.</p>

<hr />

<table>
<thead>
<tr>
<th><strong>Node</strong></th>
<th><strong>Hostname</strong></th>
<th><strong>Hardware</strong></th>
<th><strong>Notes</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>turingpi</td>
<td>CM3+</td>
<td>LSF manager, NFS server, 128GB SDcard</td>
</tr>
<tr>
<td>2</td>
<td>kemeny</td>
<td>CM3</td>
<td>4GB eMMC flash</td>
</tr>
<tr>
<td>3</td>
<td>neumann</td>
<td>CM3+</td>
<td>8GB SDcard</td>
</tr>
<tr>
<td>4</td>
<td>szilard</td>
<td>CM3+</td>
<td>8GB SDcard</td>
</tr>
<tr>
<td>5</td>
<td>teller</td>
<td>CM3+</td>
<td>8GB SDcard</td>
</tr>
<tr>
<td>6</td>
<td>vonkarman</td>
<td>CM3+</td>
<td>8GB SDcard</td>
</tr>
<tr>
<td>7</td>
<td>wigner</td>
<td>CM3+</td>
<td>8GB SDcard</td>
</tr>
</tbody>
</table>
<hr />

<p><strong>Syslog-ng &amp; LSF setup</strong></p>

<ol>
<li>Raspberry Pi OS configures <em>rsyslog</em> out of the box. The first step is to install <em>syslog-ng</em> on Node 1 in the environment. Note that installing syslog-ng automatically disables <em>rsyslog</em> on the nodes.</li>
</ol>
<p><details>
  <strong>Output of <em>apt update; apt-get install syslog-ng -y</em>. Click to expand</strong>
  <div class="highlight"><pre><code class="language-python">root<span style="color: #a6e22e;">@turingpi</span>:<span style="color: #f92672;">~</span><span style="color: #75715e;"># apt update; apt-get install syslog-ng -y </span>
Hit:<span style="color: #ae81ff;">1</span> http:<span style="color: #f92672;">//</span>security<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian<span style="color: #f92672;">-</span>security bullseye<span style="color: #f92672;">-</span>security InRelease
Hit:<span style="color: #ae81ff;">2</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye InRelease                                                        
Hit:<span style="color: #ae81ff;">3</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">-</span>updates InRelease                                                
Hit:<span style="color: #ae81ff;">4</span> https:<span style="color: #f92672;">//</span>repos<span style="color: #f92672;">.</span>influxdata<span style="color: #f92672;">.</span>com<span style="color: #f92672;">/</span>debian stable InRelease                                                   
Hit:<span style="color: #ae81ff;">5</span> https:<span style="color: #f92672;">//</span>repos<span style="color: #f92672;">.</span>influxdata<span style="color: #f92672;">.</span>com<span style="color: #f92672;">/</span>debian bullseye InRelease                                                 
Hit:<span style="color: #ae81ff;">6</span> http:<span style="color: #f92672;">//</span>archive<span style="color: #f92672;">.</span>raspberrypi<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye InRelease                                  
Hit:<span style="color: #ae81ff;">7</span> https:<span style="color: #f92672;">//</span>packagecloud<span style="color: #f92672;">.</span>io<span style="color: #f92672;">/</span>ookla<span style="color: #f92672;">/</span>speedtest<span style="color: #f92672;">-</span>cli<span style="color: #f92672;">/</span>debian bullseye InRelease                     
Reading package lists<span style="color: #f92672;">...</span> Done
Building dependency tree<span style="color: #f92672;">...</span> Done
Reading state information<span style="color: #f92672;">...</span> Done
All packages are up to date<span style="color: #f92672;">.</span>
Reading package lists<span style="color: #f92672;">...</span> Done
Building dependency tree<span style="color: #f92672;">...</span> Done
Reading state information<span style="color: #f92672;">...</span> Done
The following additional packages will be installed:
  libbson<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> libdbi1 libesmtp6 libhiredis0<span style="color: #ae81ff;">.14</span> libivykis0 libmaxminddb0 libmongoc<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> libmongocrypt0
  libnet1 libprotobuf<span style="color: #f92672;">-</span>c1 librabbitmq4 librdkafka1 libriemann<span style="color: #f92672;">-</span>client0 libsnappy1v5 libsnmp<span style="color: #f92672;">-</span>base libsnmp40
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>core syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>add<span style="color: #f92672;">-</span>contextual<span style="color: #f92672;">-</span>data syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>amqp syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>examples
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>extra syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>geoip2 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>getent syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>graphite syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>http
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>map<span style="color: #f92672;">-</span>value<span style="color: #f92672;">-</span>pairs syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>mongodb syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>python syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>rdkafka
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>redis syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>riemann syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>slog syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>smtp syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>snmp
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>sql syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stardate syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stomp syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>xml<span style="color: #f92672;">-</span>parser
Suggested packages:
  mmdb<span style="color: #f92672;">-</span>bin snmp<span style="color: #f92672;">-</span>mibs<span style="color: #f92672;">-</span>downloader rabbitmq<span style="color: #f92672;">-</span>server graphite<span style="color: #f92672;">-</span>web mongodb<span style="color: #f92672;">-</span>server libdbd<span style="color: #f92672;">-</span>mysql libdbd<span style="color: #f92672;">-</span>pgsql
  libdbd<span style="color: #f92672;">-</span>sqlite3 activemq
The following packages will be REMOVED:
  rsyslog
The following NEW packages will be installed:
  libbson<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> libdbi1 libesmtp6 libhiredis0<span style="color: #ae81ff;">.14</span> libivykis0 libmaxminddb0 libmongoc<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> libmongocrypt0
  libnet1 libprotobuf<span style="color: #f92672;">-</span>c1 librabbitmq4 librdkafka1 libriemann<span style="color: #f92672;">-</span>client0 libsnappy1v5 libsnmp<span style="color: #f92672;">-</span>base libsnmp40
  syslog<span style="color: #f92672;">-</span>ng syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>core syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>add<span style="color: #f92672;">-</span>contextual<span style="color: #f92672;">-</span>data syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>amqp syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>examples
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>extra syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>geoip2 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>getent syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>graphite syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>http
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>map<span style="color: #f92672;">-</span>value<span style="color: #f92672;">-</span>pairs syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>mongodb syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>python syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>rdkafka
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>redis syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>riemann syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>slog syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>smtp syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>snmp
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>sql syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stardate syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stomp syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>xml<span style="color: #f92672;">-</span>parser
<span style="color: #ae81ff;">0</span> upgraded, <span style="color: #ae81ff;">39</span> newly installed, <span style="color: #ae81ff;">1</span> to remove <span style="color: #f92672;">and</span> <span style="color: #ae81ff;">0</span> <span style="color: #f92672;">not</span> upgraded<span style="color: #f92672;">.</span>
Need to get <span style="color: #ae81ff;">7</span>,<span style="color: #ae81ff;">015</span> kB of archives<span style="color: #f92672;">.</span>
After this operation, <span style="color: #ae81ff;">15.1</span> MB of additional disk space will be used<span style="color: #f92672;">.</span>
Get:<span style="color: #ae81ff;">1</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libbson<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> arm64 <span style="color: #ae81ff;">1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">69.7</span> kB]
Get:<span style="color: #ae81ff;">2</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libmongocrypt0 arm64 <span style="color: #ae81ff;">1.1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">114</span> kB]
Get:<span style="color: #ae81ff;">3</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libsnappy1v5 arm64 <span style="color: #ae81ff;">1.1.8</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">17.2</span> kB]
Get:<span style="color: #ae81ff;">4</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libmongoc<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> arm64 <span style="color: #ae81ff;">1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">257</span> kB]
Get:<span style="color: #ae81ff;">5</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libivykis0 arm64 <span style="color: #ae81ff;">0.42.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">25.3</span> kB]
Get:<span style="color: #ae81ff;">6</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libnet1 arm64 <span style="color: #ae81ff;">1.1.6</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">3.1</span> [<span style="color: #ae81ff;">56.8</span> kB]
Get:<span style="color: #ae81ff;">7</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>core arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">591</span> kB]
Get:<span style="color: #ae81ff;">8</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>mongodb arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">37.9</span> kB]
Get:<span style="color: #ae81ff;">9</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libdbi1 arm64 <span style="color: #ae81ff;">0.9.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">6</span> [<span style="color: #ae81ff;">27.8</span> kB]
Get:<span style="color: #ae81ff;">10</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>sql arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">41.5</span> kB]
Get:<span style="color: #ae81ff;">11</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libesmtp6 arm64 <span style="color: #ae81ff;">1.0.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">4.3</span> [<span style="color: #ae81ff;">52.0</span> kB]
Get:<span style="color: #ae81ff;">12</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libhiredis0<span style="color: #ae81ff;">.14</span> arm64 <span style="color: #ae81ff;">0.14.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">33.7</span> kB]
Get:<span style="color: #ae81ff;">13</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libmaxminddb0 arm64 <span style="color: #ae81ff;">1.5.2</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">29.6</span> kB]
Get:<span style="color: #ae81ff;">14</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libprotobuf<span style="color: #f92672;">-</span>c1 arm64 <span style="color: #ae81ff;">1.3.3</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span><span style="color: #f92672;">+</span>b2 [<span style="color: #ae81ff;">26.8</span> kB]
Get:<span style="color: #ae81ff;">15</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 librabbitmq4 arm64 <span style="color: #ae81ff;">0.10.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">39.7</span> kB]
Get:<span style="color: #ae81ff;">16</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 librdkafka1 arm64 <span style="color: #ae81ff;">1.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">515</span> kB]
Get:<span style="color: #ae81ff;">17</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libriemann<span style="color: #f92672;">-</span>client0 arm64 <span style="color: #ae81ff;">1.10.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>b2 [<span style="color: #ae81ff;">21.9</span> kB]
Get:<span style="color: #ae81ff;">18</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libsnmp<span style="color: #f92672;">-</span>base all <span style="color: #ae81ff;">5.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">1</span>,<span style="color: #ae81ff;">736</span> kB]
Get:<span style="color: #ae81ff;">19</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libsnmp40 arm64 <span style="color: #ae81ff;">5.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">2</span>,<span style="color: #ae81ff;">497</span> kB]
Get:<span style="color: #ae81ff;">20</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng all <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">25.9</span> kB]
Get:<span style="color: #ae81ff;">21</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>add<span style="color: #f92672;">-</span>contextual<span style="color: #f92672;">-</span>data arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">40.5</span> kB]
Get:<span style="color: #ae81ff;">22</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>amqp arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">48.8</span> kB]
Get:<span style="color: #ae81ff;">23</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>examples arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">57.3</span> kB]
Get:<span style="color: #ae81ff;">24</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>extra all <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">35.7</span> kB]
Get:<span style="color: #ae81ff;">25</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>geoip2 arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">36.9</span> kB]
Get:<span style="color: #ae81ff;">26</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>graphite arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">29.4</span> kB]
Get:<span style="color: #ae81ff;">27</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>http arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">50.5</span> kB]
Get:<span style="color: #ae81ff;">28</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>python arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">69.9</span> kB]
Get:<span style="color: #ae81ff;">29</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>rdkafka arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">41.5</span> kB]
Get:<span style="color: #ae81ff;">30</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>redis arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">37.6</span> kB]
Get:<span style="color: #ae81ff;">31</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>riemann arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">40.1</span> kB]
Get:<span style="color: #ae81ff;">32</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>slog arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">63.3</span> kB]
Get:<span style="color: #ae81ff;">33</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>smtp arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">38.0</span> kB]
Get:<span style="color: #ae81ff;">34</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>snmp arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">42.5</span> kB]
Get:<span style="color: #ae81ff;">35</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stomp arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">39.1</span> kB]
Get:<span style="color: #ae81ff;">36</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>xml<span style="color: #f92672;">-</span>parser arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">34.7</span> kB]
Get:<span style="color: #ae81ff;">37</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>getent arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">29.5</span> kB]
Get:<span style="color: #ae81ff;">38</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>map<span style="color: #f92672;">-</span>value<span style="color: #f92672;">-</span>pairs arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">34.0</span> kB]
Get:<span style="color: #ae81ff;">39</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stardate arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">28.6</span> kB]
Fetched <span style="color: #ae81ff;">7</span>,<span style="color: #ae81ff;">015</span> kB <span style="color: #f92672;">in</span> <span style="color: #ae81ff;">5</span>s (<span style="color: #ae81ff;">1</span>,<span style="color: #ae81ff;">311</span> kB<span style="color: #f92672;">/</span>s)           
Extracting templates <span style="color: #f92672;">from</span> packages: <span style="color: #ae81ff;">100</span><span style="color: #f92672;">%</span>
(Reading database <span style="color: #f92672;">...</span> <span style="color: #ae81ff;">90182</span> files <span style="color: #f92672;">and</span> directories currently installed<span style="color: #f92672;">.</span>)
Removing rsyslog (<span style="color: #ae81ff;">8.2102.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package libbson<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0.</span>
(Reading database <span style="color: #f92672;">...</span> <span style="color: #ae81ff;">90124</span> files <span style="color: #f92672;">and</span> directories currently installed<span style="color: #f92672;">.</span>)
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">00</span><span style="color: #f92672;">-</span>libbson<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0_1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libbson<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> (<span style="color: #ae81ff;">1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libmongocrypt0:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">01</span><span style="color: #f92672;">-</span>libmongocrypt0_1<span style="color: #ae81ff;">.1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libmongocrypt0:arm64 (<span style="color: #ae81ff;">1.1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libsnappy1v5:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">02</span><span style="color: #f92672;">-</span>libsnappy1v5_1<span style="color: #ae81ff;">.1.8</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libsnappy1v5:arm64 (<span style="color: #ae81ff;">1.1.8</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libmongoc<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">03</span><span style="color: #f92672;">-</span>libmongoc<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0_1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libmongoc<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> (<span style="color: #ae81ff;">1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libivykis0:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">04</span><span style="color: #f92672;">-</span>libivykis0_0<span style="color: #ae81ff;">.42.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libivykis0:arm64 (<span style="color: #ae81ff;">0.42.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libnet1:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">05</span><span style="color: #f92672;">-</span>libnet1_1<span style="color: #ae81ff;">.1.6</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">3.1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libnet1:arm64 (<span style="color: #ae81ff;">1.1.6</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">3.1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>core<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">06</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>core_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>core (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>mongodb<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">07</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>mongodb_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>mongodb (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package libdbi1:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">08</span><span style="color: #f92672;">-</span>libdbi1_0<span style="color: #ae81ff;">.9.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">6</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libdbi1:arm64 (<span style="color: #ae81ff;">0.9.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">6</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>sql<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">09</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>sql_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>sql (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package libesmtp6<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">10</span><span style="color: #f92672;">-</span>libesmtp6_1<span style="color: #ae81ff;">.0.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">4.3</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libesmtp6 (<span style="color: #ae81ff;">1.0.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">4.3</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libhiredis0<span style="color: #ae81ff;">.14</span>:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">11</span><span style="color: #f92672;">-</span>libhiredis0<span style="color: #ae81ff;">.14_0.14.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libhiredis0<span style="color: #ae81ff;">.14</span>:arm64 (<span style="color: #ae81ff;">0.14.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libmaxminddb0:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">12</span><span style="color: #f92672;">-</span>libmaxminddb0_1<span style="color: #ae81ff;">.5.2</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libmaxminddb0:arm64 (<span style="color: #ae81ff;">1.5.2</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libprotobuf<span style="color: #f92672;">-</span>c1:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">13</span><span style="color: #f92672;">-</span>libprotobuf<span style="color: #f92672;">-</span>c1_1<span style="color: #ae81ff;">.3.3</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span><span style="color: #f92672;">+</span>b2_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libprotobuf<span style="color: #f92672;">-</span>c1:arm64 (<span style="color: #ae81ff;">1.3.3</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span><span style="color: #f92672;">+</span>b2) <span style="color: #f92672;">...</span>
Selecting previously unselected package librabbitmq4:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">14</span><span style="color: #f92672;">-</span>librabbitmq4_0<span style="color: #ae81ff;">.10.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking librabbitmq4:arm64 (<span style="color: #ae81ff;">0.10.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package librdkafka1:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">15</span><span style="color: #f92672;">-</span>librdkafka1_1<span style="color: #ae81ff;">.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking librdkafka1:arm64 (<span style="color: #ae81ff;">1.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libriemann<span style="color: #f92672;">-</span>client0:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">16</span><span style="color: #f92672;">-</span>libriemann<span style="color: #f92672;">-</span>client0_1<span style="color: #ae81ff;">.10.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>b2_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libriemann<span style="color: #f92672;">-</span>client0:arm64 (<span style="color: #ae81ff;">1.10.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>b2) <span style="color: #f92672;">...</span>
Selecting previously unselected package libsnmp<span style="color: #f92672;">-</span>base<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">17</span><span style="color: #f92672;">-</span>libsnmp<span style="color: #f92672;">-</span>base_5<span style="color: #ae81ff;">.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1_all<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libsnmp<span style="color: #f92672;">-</span>base (<span style="color: #ae81ff;">5.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package libsnmp40:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">18</span><span style="color: #f92672;">-</span>libsnmp40_5<span style="color: #ae81ff;">.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libsnmp40:arm64 (<span style="color: #ae81ff;">5.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">19</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_all<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>add<span style="color: #f92672;">-</span>contextual<span style="color: #f92672;">-</span>data<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">20</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>add<span style="color: #f92672;">-</span>contextual<span style="color: #f92672;">-</span>data_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>add<span style="color: #f92672;">-</span>contextual<span style="color: #f92672;">-</span>data (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>amqp<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">21</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>amqp_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>amqp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>examples<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">22</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>examples_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>examples (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>extra<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">23</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>extra_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_all<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>extra (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>geoip2<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">24</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>geoip2_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>geoip2 (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>graphite<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">25</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>graphite_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>graphite (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>http<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">26</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>http_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>http (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>python<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">27</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>python_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>python (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>rdkafka<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">28</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>rdkafka_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>rdkafka (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>redis<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">29</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>redis_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>redis (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>riemann<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">30</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>riemann_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>riemann (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>slog<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">31</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>slog_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>slog (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>smtp<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">32</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>smtp_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>smtp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>snmp<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">33</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>snmp_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>snmp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stomp<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">34</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stomp_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stomp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>xml<span style="color: #f92672;">-</span>parser<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">35</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>xml<span style="color: #f92672;">-</span>parser_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>xml<span style="color: #f92672;">-</span>parser (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>getent<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">36</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>getent_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>getent (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>map<span style="color: #f92672;">-</span>value<span style="color: #f92672;">-</span>pairs<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">37</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>map<span style="color: #f92672;">-</span>value<span style="color: #f92672;">-</span>pairs_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>map<span style="color: #f92672;">-</span>value<span style="color: #f92672;">-</span>pairs (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stardate<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">38</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stardate_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stardate (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up librabbitmq4:arm64 (<span style="color: #ae81ff;">0.10.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libdbi1:arm64 (<span style="color: #ae81ff;">0.9.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">6</span>) <span style="color: #f92672;">...</span>
Setting up libsnmp<span style="color: #f92672;">-</span>base (<span style="color: #ae81ff;">5.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up libmaxminddb0:arm64 (<span style="color: #ae81ff;">1.5.2</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libesmtp6 (<span style="color: #ae81ff;">1.0.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">4.3</span>) <span style="color: #f92672;">...</span>
Setting up libnet1:arm64 (<span style="color: #ae81ff;">1.1.6</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">3.1</span>) <span style="color: #f92672;">...</span>
Setting up libprotobuf<span style="color: #f92672;">-</span>c1:arm64 (<span style="color: #ae81ff;">1.3.3</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span><span style="color: #f92672;">+</span>b2) <span style="color: #f92672;">...</span>
Setting up libsnappy1v5:arm64 (<span style="color: #ae81ff;">1.1.8</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libsnmp40:arm64 (<span style="color: #ae81ff;">5.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up libbson<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> (<span style="color: #ae81ff;">1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libivykis0:arm64 (<span style="color: #ae81ff;">0.42.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libriemann<span style="color: #f92672;">-</span>client0:arm64 (<span style="color: #ae81ff;">1.10.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>b2) <span style="color: #f92672;">...</span>
Setting up librdkafka1:arm64 (<span style="color: #ae81ff;">1.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libhiredis0<span style="color: #ae81ff;">.14</span>:arm64 (<span style="color: #ae81ff;">0.14.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libmongocrypt0:arm64 (<span style="color: #ae81ff;">1.1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libmongoc<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> (<span style="color: #ae81ff;">1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>core (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Created symlink <span style="color: #f92672;">/</span>etc<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>multi<span style="color: #f92672;">-</span>user<span style="color: #f92672;">.</span>target<span style="color: #f92672;">.</span>wants<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service <span style="color: #960050; background-color: #1e0010;">→</span> <span style="color: #f92672;">/</span>lib<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service<span style="color: #f92672;">.</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>examples (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>xml<span style="color: #f92672;">-</span>parser (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stomp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>riemann (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stardate (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>geoip2 (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>getent (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>amqp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>python (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>smtp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>snmp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>extra (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>rdkafka (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>graphite (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>add<span style="color: #f92672;">-</span>contextual<span style="color: #f92672;">-</span>data (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>mongodb (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>http (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>slog (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>map<span style="color: #f92672;">-</span>value<span style="color: #f92672;">-</span>pairs (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>sql (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>redis (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Processing triggers <span style="color: #66d9ef;">for</span> man<span style="color: #f92672;">-</span>db (<span style="color: #ae81ff;">2.9.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span>) <span style="color: #f92672;">...</span>
Processing triggers <span style="color: #66d9ef;">for</span> libc<span style="color: #f92672;">-</span>bin (<span style="color: #ae81ff;">2.31</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">13</span><span style="color: #f92672;">+</span>rpt2<span style="color: #f92672;">+</span>rpi1<span style="color: #f92672;">+</span>deb11u8) <span style="color: #f92672;">...</span>
Scanning processes<span style="color: #f92672;">...</span>                                                                                         
Scanning processor microcode<span style="color: #f92672;">...</span>                                                                               
Scanning linux images<span style="color: #f92672;">...</span>                                                                                      

Running kernel seems to be up<span style="color: #f92672;">-</span>to<span style="color: #f92672;">-</span>date<span style="color: #f92672;">.</span>

Failed to check <span style="color: #66d9ef;">for</span> processor microcode upgrades<span style="color: #f92672;">.</span>

No services need to be restarted<span style="color: #f92672;">.</span>

No containers need to be restarted<span style="color: #f92672;">.</span>

No user sessions are running outdated binaries<span style="color: #f92672;">.</span>
</code></pre></div>

</details>

<br />
<!-- raw HTML omitted -->
2. With <em>syslog-ng</em> installed, it’s now time to build the configuration for it. A new configuration file <em>fromnet.conf</em> is shown below, in which a <em>syslog-ng</em> destination is created which will aggregate logs from the Turing Pi nodes in <em>/var/log/fromnet</em> in plain text format. Additionally, the logs will be written in JSON format to the file <em>/var/log/fromnet.json</em>.</p>

<div class="highlight"><pre><code class="language-plaintext">root@turingpi:~# cat /etc/syslog-ng/fromnet.conf 
# source
source s_fromnet {
  syslog(port(601));
};
# destination 
destination d_fromnet {
  file("/var/log/fromnet");
  file("/var/log/fromnet.json" template("$(format-json --scope rfc5424 --scope dot-nv-pairs
        --rekey .* --shift 1 --scope nv-pairs)\n") );
};
# log path
log {
  source(s_fromnet);
  destination(d_fromnet);
}; </code></pre></div>

<ol start="3">
<li>Unless we only want to see source IP addresses in the collected logs, it’s necessary to update the <em>syslog-ng</em> configuration file <em>/etc/syslog-ng/syslog-ng.conf</em> to record the hostnames from which the log messages have originated. This is done by adding the <em>keep_hostname(yes)</em> parameter to the options section as follows:</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">....
....
# First, set some global options. 
options { chain_hostnames(off); flush_lines(0); use_dns(no); use_fqdn(no);          
        keep_hostname(yes);dns_cache(no); owner("root"); group("adm"); perm(0640); 
        stats_freq(0); bad_hostname("^gconfd$"); 
};
....
....</code></pre></div>

<ol start="4">
<li>Next, the IBM LSF configuration is updated to prevent the creation of local logfiles for the LSF daemons. This is done by commenting the <em>LSF_LOGDIR</em> option in the configuration file <em>$LSF_ENVDIR/lsf.conf</em>. At the same time, we also set <em>LSF_LOG_MASK=LOG_DEBUG</em> for testing purposes to enable verbose logging for the LSF daemons.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">....
....
# Daemon log messages
# LSF_LOGDIR=/opt/ibm/lsf/log
LSF_LOG_MASK=LOG_DEBUG
....
....</code></pre></div>

<ol start="5">
<li>Finally, to make the changes take effect, both syslog-ng and LSF are restarted.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">root@turingpi:~# systemctl restart syslog-ng 
root@turingpi:~# . /opt/ibm/lsf/conf/profile.lsf  
root@turingpi:~# lsf_daemons restart 
Stopping the LSF subsystem 
Starting the LSF subsystem</code></pre></div>

<ol start="6">
<li>With the configuration ready on the centralized logging server, host <em>turingpi</em>, we now turn our attention to Nodes 2-7 in the cluster. Here we’ll use the <em>parallel-ssh</em> tool to streamline some operations. We start with the installation of <em>syslog-ng</em> across Nodes 2-7. Note that the output of the installation of <em>syslog-ng</em> across the compute nodes has been truncated.</li>
</ol>
<p><details>
  <strong>Truncated output of <em>parallel-ssh -h /opt/workers -i &ldquo;apt-get install syslog-ng -y&rdquo;</em>. Click to expand</strong>
  <div class="highlight"><pre><code class="language-python">root<span style="color: #a6e22e;">@turingpi</span>:<span style="color: #f92672;">~</span><span style="color: #75715e;"># parallel-ssh -h /opt/workers -i "apt-get install syslog-ng -y" </span>
[<span style="color: #ae81ff;">1</span>] <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">07</span> [SUCCESS] kemeny
Reading package lists<span style="color: #f92672;">...</span>
Building dependency tree<span style="color: #f92672;">...</span>
Reading state information<span style="color: #f92672;">...</span>
The following additional packages will be installed:
  libbson<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> libdbi1 libesmtp6 libhiredis0<span style="color: #ae81ff;">.14</span> libivykis0 libmaxminddb0
  libmongoc<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> libmongocrypt0 libnet1 libprotobuf<span style="color: #f92672;">-</span>c1 librabbitmq4
  librdkafka1 libriemann<span style="color: #f92672;">-</span>client0 libsensors<span style="color: #f92672;">-</span>config libsensors5 libsnappy1v5
  libsnmp<span style="color: #f92672;">-</span>base libsnmp40 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>core syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>add<span style="color: #f92672;">-</span>contextual<span style="color: #f92672;">-</span>data
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>amqp syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>examples syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>extra
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>geoip2 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>getent syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>graphite
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>http syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>map<span style="color: #f92672;">-</span>value<span style="color: #f92672;">-</span>pairs syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>mongodb
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>python syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>rdkafka syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>redis
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>riemann syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>slog syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>smtp
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>snmp syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>sql syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stardate
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stomp syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>xml<span style="color: #f92672;">-</span>parser
Suggested packages:
  mmdb<span style="color: #f92672;">-</span>bin lm<span style="color: #f92672;">-</span>sensors snmp<span style="color: #f92672;">-</span>mibs<span style="color: #f92672;">-</span>downloader rabbitmq<span style="color: #f92672;">-</span>server graphite<span style="color: #f92672;">-</span>web
  mongodb<span style="color: #f92672;">-</span>server libdbd<span style="color: #f92672;">-</span>mysql libdbd<span style="color: #f92672;">-</span>pgsql libdbd<span style="color: #f92672;">-</span>sqlite3 activemq
The following packages will be REMOVED:
  rsyslog
The following NEW packages will be installed:
  libbson<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> libdbi1 libesmtp6 libhiredis0<span style="color: #ae81ff;">.14</span> libivykis0 libmaxminddb0
  libmongoc<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> libmongocrypt0 libnet1 libprotobuf<span style="color: #f92672;">-</span>c1 librabbitmq4
  librdkafka1 libriemann<span style="color: #f92672;">-</span>client0 libsensors<span style="color: #f92672;">-</span>config libsensors5 libsnappy1v5
  libsnmp<span style="color: #f92672;">-</span>base libsnmp40 syslog<span style="color: #f92672;">-</span>ng syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>core
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>add<span style="color: #f92672;">-</span>contextual<span style="color: #f92672;">-</span>data syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>amqp syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>examples
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>extra syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>geoip2 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>getent
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>graphite syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>http syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>map<span style="color: #f92672;">-</span>value<span style="color: #f92672;">-</span>pairs
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>mongodb syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>python syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>rdkafka
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>redis syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>riemann syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>slog
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>smtp syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>snmp syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>sql
  syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stardate syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stomp syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>xml<span style="color: #f92672;">-</span>parser
<span style="color: #ae81ff;">0</span> upgraded, <span style="color: #ae81ff;">41</span> newly installed, <span style="color: #ae81ff;">1</span> to remove <span style="color: #f92672;">and</span> <span style="color: #ae81ff;">0</span> <span style="color: #f92672;">not</span> upgraded<span style="color: #f92672;">.</span>
Need to get <span style="color: #ae81ff;">7</span>,<span style="color: #ae81ff;">098</span> kB of archives<span style="color: #f92672;">.</span>
After this operation, <span style="color: #ae81ff;">15.3</span> MB of additional disk space will be used<span style="color: #f92672;">.</span>
Get:<span style="color: #ae81ff;">1</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libbson<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> arm64 <span style="color: #ae81ff;">1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">69.7</span> kB]
Get:<span style="color: #ae81ff;">2</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libmongocrypt0 arm64 <span style="color: #ae81ff;">1.1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">114</span> kB]
Get:<span style="color: #ae81ff;">3</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libsnappy1v5 arm64 <span style="color: #ae81ff;">1.1.8</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">17.2</span> kB]
Get:<span style="color: #ae81ff;">4</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libmongoc<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> arm64 <span style="color: #ae81ff;">1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">257</span> kB]
Get:<span style="color: #ae81ff;">5</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libivykis0 arm64 <span style="color: #ae81ff;">0.42.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">25.3</span> kB]
Get:<span style="color: #ae81ff;">6</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libnet1 arm64 <span style="color: #ae81ff;">1.1.6</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">3.1</span> [<span style="color: #ae81ff;">56.8</span> kB]
Get:<span style="color: #ae81ff;">7</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>core arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">591</span> kB]
Get:<span style="color: #ae81ff;">8</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>mongodb arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">37.9</span> kB]
Get:<span style="color: #ae81ff;">9</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libdbi1 arm64 <span style="color: #ae81ff;">0.9.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">6</span> [<span style="color: #ae81ff;">27.8</span> kB]
Get:<span style="color: #ae81ff;">10</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>sql arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">41.5</span> kB]
Get:<span style="color: #ae81ff;">11</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libesmtp6 arm64 <span style="color: #ae81ff;">1.0.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">4.3</span> [<span style="color: #ae81ff;">52.0</span> kB]
Get:<span style="color: #ae81ff;">12</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libhiredis0<span style="color: #ae81ff;">.14</span> arm64 <span style="color: #ae81ff;">0.14.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">33.7</span> kB]
Get:<span style="color: #ae81ff;">13</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libmaxminddb0 arm64 <span style="color: #ae81ff;">1.5.2</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">29.6</span> kB]
Get:<span style="color: #ae81ff;">14</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libprotobuf<span style="color: #f92672;">-</span>c1 arm64 <span style="color: #ae81ff;">1.3.3</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span><span style="color: #f92672;">+</span>b2 [<span style="color: #ae81ff;">26.8</span> kB]
Get:<span style="color: #ae81ff;">15</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 librabbitmq4 arm64 <span style="color: #ae81ff;">0.10.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">39.7</span> kB]
Get:<span style="color: #ae81ff;">16</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 librdkafka1 arm64 <span style="color: #ae81ff;">1.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> [<span style="color: #ae81ff;">515</span> kB]
Get:<span style="color: #ae81ff;">17</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libriemann<span style="color: #f92672;">-</span>client0 arm64 <span style="color: #ae81ff;">1.10.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>b2 [<span style="color: #ae81ff;">21.9</span> kB]
Get:<span style="color: #ae81ff;">18</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libsensors<span style="color: #f92672;">-</span>config all <span style="color: #ae81ff;">1</span>:<span style="color: #ae81ff;">3.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">7</span> [<span style="color: #ae81ff;">32.3</span> kB]
Get:<span style="color: #ae81ff;">19</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libsensors5 arm64 <span style="color: #ae81ff;">1</span>:<span style="color: #ae81ff;">3.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">7</span> [<span style="color: #ae81ff;">51.2</span> kB]
Get:<span style="color: #ae81ff;">20</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libsnmp<span style="color: #f92672;">-</span>base all <span style="color: #ae81ff;">5.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">1</span>,<span style="color: #ae81ff;">736</span> kB]
Get:<span style="color: #ae81ff;">21</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 libsnmp40 arm64 <span style="color: #ae81ff;">5.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">2</span>,<span style="color: #ae81ff;">497</span> kB]
Get:<span style="color: #ae81ff;">22</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng all <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">25.9</span> kB]
Get:<span style="color: #ae81ff;">23</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>add<span style="color: #f92672;">-</span>contextual<span style="color: #f92672;">-</span>data arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">40.5</span> kB]
Get:<span style="color: #ae81ff;">24</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>amqp arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">48.8</span> kB]
Get:<span style="color: #ae81ff;">25</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>examples arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">57.3</span> kB]
Get:<span style="color: #ae81ff;">26</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>extra all <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">35.7</span> kB]
Get:<span style="color: #ae81ff;">27</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>geoip2 arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">36.9</span> kB]
Get:<span style="color: #ae81ff;">28</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>graphite arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">29.4</span> kB]
Get:<span style="color: #ae81ff;">29</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>http arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">50.5</span> kB]
Get:<span style="color: #ae81ff;">30</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>python arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">69.9</span> kB]
Get:<span style="color: #ae81ff;">31</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>rdkafka arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">41.5</span> kB]
Get:<span style="color: #ae81ff;">32</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>redis arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">37.6</span> kB]
Get:<span style="color: #ae81ff;">33</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>riemann arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">40.1</span> kB]
Get:<span style="color: #ae81ff;">34</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>slog arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">63.3</span> kB]
Get:<span style="color: #ae81ff;">35</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>smtp arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">38.0</span> kB]
Get:<span style="color: #ae81ff;">36</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>snmp arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">42.5</span> kB]
Get:<span style="color: #ae81ff;">37</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stomp arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">39.1</span> kB]
Get:<span style="color: #ae81ff;">38</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>xml<span style="color: #f92672;">-</span>parser arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">34.7</span> kB]
Get:<span style="color: #ae81ff;">39</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>getent arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">29.5</span> kB]
Get:<span style="color: #ae81ff;">40</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>map<span style="color: #f92672;">-</span>value<span style="color: #f92672;">-</span>pairs arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">34.0</span> kB]
Get:<span style="color: #ae81ff;">41</span> http:<span style="color: #f92672;">//</span>deb<span style="color: #f92672;">.</span>debian<span style="color: #f92672;">.</span>org<span style="color: #f92672;">/</span>debian bullseye<span style="color: #f92672;">/</span>main arm64 syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stardate arm64 <span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1 [<span style="color: #ae81ff;">28.6</span> kB]
Fetched <span style="color: #ae81ff;">7</span>,<span style="color: #ae81ff;">098</span> kB <span style="color: #f92672;">in</span> <span style="color: #ae81ff;">2</span>s (<span style="color: #ae81ff;">3</span>,<span style="color: #ae81ff;">566</span> kB<span style="color: #f92672;">/</span>s)
(Reading database <span style="color: #f92672;">...</span> <span style="color: #ae81ff;">37650</span> files <span style="color: #f92672;">and</span> directories currently installed<span style="color: #f92672;">.</span>)
Removing rsyslog (<span style="color: #ae81ff;">8.2102.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package libbson<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0.</span>
(Reading database <span style="color: #f92672;">...</span> <span style="color: #ae81ff;">37592</span> files <span style="color: #f92672;">and</span> directories currently installed<span style="color: #f92672;">.</span>)
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">00</span><span style="color: #f92672;">-</span>libbson<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0_1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libbson<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> (<span style="color: #ae81ff;">1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libmongocrypt0:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">01</span><span style="color: #f92672;">-</span>libmongocrypt0_1<span style="color: #ae81ff;">.1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libmongocrypt0:arm64 (<span style="color: #ae81ff;">1.1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libsnappy1v5:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">02</span><span style="color: #f92672;">-</span>libsnappy1v5_1<span style="color: #ae81ff;">.1.8</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libsnappy1v5:arm64 (<span style="color: #ae81ff;">1.1.8</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libmongoc<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">03</span><span style="color: #f92672;">-</span>libmongoc<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0_1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libmongoc<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> (<span style="color: #ae81ff;">1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libivykis0:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">04</span><span style="color: #f92672;">-</span>libivykis0_0<span style="color: #ae81ff;">.42.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libivykis0:arm64 (<span style="color: #ae81ff;">0.42.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libnet1:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">05</span><span style="color: #f92672;">-</span>libnet1_1<span style="color: #ae81ff;">.1.6</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">3.1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libnet1:arm64 (<span style="color: #ae81ff;">1.1.6</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">3.1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>core<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">06</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>core_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>core (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>mongodb<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">07</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>mongodb_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>mongodb (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package libdbi1:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">08</span><span style="color: #f92672;">-</span>libdbi1_0<span style="color: #ae81ff;">.9.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">6</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libdbi1:arm64 (<span style="color: #ae81ff;">0.9.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">6</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>sql<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">09</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>sql_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>sql (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package libesmtp6<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">10</span><span style="color: #f92672;">-</span>libesmtp6_1<span style="color: #ae81ff;">.0.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">4.3</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libesmtp6 (<span style="color: #ae81ff;">1.0.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">4.3</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libhiredis0<span style="color: #ae81ff;">.14</span>:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">11</span><span style="color: #f92672;">-</span>libhiredis0<span style="color: #ae81ff;">.14_0.14.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libhiredis0<span style="color: #ae81ff;">.14</span>:arm64 (<span style="color: #ae81ff;">0.14.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libmaxminddb0:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">12</span><span style="color: #f92672;">-</span>libmaxminddb0_1<span style="color: #ae81ff;">.5.2</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libmaxminddb0:arm64 (<span style="color: #ae81ff;">1.5.2</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libprotobuf<span style="color: #f92672;">-</span>c1:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">13</span><span style="color: #f92672;">-</span>libprotobuf<span style="color: #f92672;">-</span>c1_1<span style="color: #ae81ff;">.3.3</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span><span style="color: #f92672;">+</span>b2_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libprotobuf<span style="color: #f92672;">-</span>c1:arm64 (<span style="color: #ae81ff;">1.3.3</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span><span style="color: #f92672;">+</span>b2) <span style="color: #f92672;">...</span>
Selecting previously unselected package librabbitmq4:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">14</span><span style="color: #f92672;">-</span>librabbitmq4_0<span style="color: #ae81ff;">.10.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking librabbitmq4:arm64 (<span style="color: #ae81ff;">0.10.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package librdkafka1:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">15</span><span style="color: #f92672;">-</span>librdkafka1_1<span style="color: #ae81ff;">.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking librdkafka1:arm64 (<span style="color: #ae81ff;">1.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libriemann<span style="color: #f92672;">-</span>client0:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">16</span><span style="color: #f92672;">-</span>libriemann<span style="color: #f92672;">-</span>client0_1<span style="color: #ae81ff;">.10.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>b2_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libriemann<span style="color: #f92672;">-</span>client0:arm64 (<span style="color: #ae81ff;">1.10.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>b2) <span style="color: #f92672;">...</span>
Selecting previously unselected package libsensors<span style="color: #f92672;">-</span>config<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">17</span><span style="color: #f92672;">-</span>libsensors<span style="color: #f92672;">-</span>config_1<span style="color: #f92672;">%</span><span style="color: #ae81ff;">3</span>a3<span style="color: #ae81ff;">.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">7</span>_all<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libsensors<span style="color: #f92672;">-</span>config (<span style="color: #ae81ff;">1</span>:<span style="color: #ae81ff;">3.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">7</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libsensors5:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">18</span><span style="color: #f92672;">-</span>libsensors5_1<span style="color: #f92672;">%</span><span style="color: #ae81ff;">3</span>a3<span style="color: #ae81ff;">.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">7</span>_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libsensors5:arm64 (<span style="color: #ae81ff;">1</span>:<span style="color: #ae81ff;">3.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">7</span>) <span style="color: #f92672;">...</span>
Selecting previously unselected package libsnmp<span style="color: #f92672;">-</span>base<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">19</span><span style="color: #f92672;">-</span>libsnmp<span style="color: #f92672;">-</span>base_5<span style="color: #ae81ff;">.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1_all<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libsnmp<span style="color: #f92672;">-</span>base (<span style="color: #ae81ff;">5.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package libsnmp40:arm64<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">20</span><span style="color: #f92672;">-</span>libsnmp40_5<span style="color: #ae81ff;">.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking libsnmp40:arm64 (<span style="color: #ae81ff;">5.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">21</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_all<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>add<span style="color: #f92672;">-</span>contextual<span style="color: #f92672;">-</span>data<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">22</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>add<span style="color: #f92672;">-</span>contextual<span style="color: #f92672;">-</span>data_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>add<span style="color: #f92672;">-</span>contextual<span style="color: #f92672;">-</span>data (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>amqp<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">23</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>amqp_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>amqp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>examples<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">24</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>examples_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>examples (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>extra<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">25</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>extra_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_all<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>extra (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>geoip2<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">26</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>geoip2_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>geoip2 (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>graphite<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">27</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>graphite_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>graphite (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>http<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">28</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>http_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>http (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>python<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">29</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>python_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>python (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>rdkafka<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">30</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>rdkafka_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>rdkafka (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>redis<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">31</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>redis_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>redis (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>riemann<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">32</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>riemann_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>riemann (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>slog<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">33</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>slog_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>slog (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>smtp<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">34</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>smtp_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>smtp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>snmp<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">35</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>snmp_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>snmp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stomp<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">36</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stomp_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stomp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>xml<span style="color: #f92672;">-</span>parser<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">37</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>xml<span style="color: #f92672;">-</span>parser_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>xml<span style="color: #f92672;">-</span>parser (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>getent<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">38</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>getent_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>getent (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>map<span style="color: #f92672;">-</span>value<span style="color: #f92672;">-</span>pairs<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">39</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>map<span style="color: #f92672;">-</span>value<span style="color: #f92672;">-</span>pairs_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>map<span style="color: #f92672;">-</span>value<span style="color: #f92672;">-</span>pairs (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Selecting previously unselected package syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stardate<span style="color: #f92672;">.</span>
Preparing to unpack <span style="color: #f92672;">.../</span><span style="color: #ae81ff;">40</span><span style="color: #f92672;">-</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stardate_3<span style="color: #ae81ff;">.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1_arm64<span style="color: #f92672;">.</span>deb <span style="color: #f92672;">...</span>
Unpacking syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stardate (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up librabbitmq4:arm64 (<span style="color: #ae81ff;">0.10.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libdbi1:arm64 (<span style="color: #ae81ff;">0.9.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">6</span>) <span style="color: #f92672;">...</span>
Setting up libsnmp<span style="color: #f92672;">-</span>base (<span style="color: #ae81ff;">5.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up libmaxminddb0:arm64 (<span style="color: #ae81ff;">1.5.2</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libsensors<span style="color: #f92672;">-</span>config (<span style="color: #ae81ff;">1</span>:<span style="color: #ae81ff;">3.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">7</span>) <span style="color: #f92672;">...</span>
Setting up libesmtp6 (<span style="color: #ae81ff;">1.0.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">4.3</span>) <span style="color: #f92672;">...</span>
Setting up libnet1:arm64 (<span style="color: #ae81ff;">1.1.6</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">3.1</span>) <span style="color: #f92672;">...</span>
Setting up libprotobuf<span style="color: #f92672;">-</span>c1:arm64 (<span style="color: #ae81ff;">1.3.3</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span><span style="color: #f92672;">+</span>b2) <span style="color: #f92672;">...</span>
Setting up libsnappy1v5:arm64 (<span style="color: #ae81ff;">1.1.8</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libbson<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> (<span style="color: #ae81ff;">1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libivykis0:arm64 (<span style="color: #ae81ff;">0.42.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libriemann<span style="color: #f92672;">-</span>client0:arm64 (<span style="color: #ae81ff;">1.10.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>b2) <span style="color: #f92672;">...</span>
Setting up libsensors5:arm64 (<span style="color: #ae81ff;">1</span>:<span style="color: #ae81ff;">3.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">7</span>) <span style="color: #f92672;">...</span>
Setting up librdkafka1:arm64 (<span style="color: #ae81ff;">1.6.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libhiredis0<span style="color: #ae81ff;">.14</span>:arm64 (<span style="color: #ae81ff;">0.14.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libmongocrypt0:arm64 (<span style="color: #ae81ff;">1.1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up libsnmp40:arm64 (<span style="color: #ae81ff;">5.9</span><span style="color: #f92672;">+</span>dfsg<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up libmongoc<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1.0</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> (<span style="color: #ae81ff;">1.17.6</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span>) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>core (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Created symlink <span style="color: #f92672;">/</span>etc<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>multi<span style="color: #f92672;">-</span>user<span style="color: #f92672;">.</span>target<span style="color: #f92672;">.</span>wants<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service <span style="color: #960050; background-color: #1e0010;">→</span> <span style="color: #f92672;">/</span>lib<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service<span style="color: #f92672;">.</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>examples (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>xml<span style="color: #f92672;">-</span>parser (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stomp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>riemann (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>stardate (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>geoip2 (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>getent (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>amqp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>python (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>smtp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>snmp (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>extra (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>rdkafka (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>graphite (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>add<span style="color: #f92672;">-</span>contextual<span style="color: #f92672;">-</span>data (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>mongodb (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>http (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>slog (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>map<span style="color: #f92672;">-</span>value<span style="color: #f92672;">-</span>pairs (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>sql (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">-</span>mod<span style="color: #f92672;">-</span>redis (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Setting up syslog<span style="color: #f92672;">-</span>ng (<span style="color: #ae81ff;">3.28.1</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span><span style="color: #f92672;">+</span>deb11u1) <span style="color: #f92672;">...</span>
Processing triggers <span style="color: #66d9ef;">for</span> man<span style="color: #f92672;">-</span>db (<span style="color: #ae81ff;">2.9.4</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span>) <span style="color: #f92672;">...</span>
Processing triggers <span style="color: #66d9ef;">for</span> libc<span style="color: #f92672;">-</span>bin (<span style="color: #ae81ff;">2.31</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">13</span><span style="color: #f92672;">+</span>rpt2<span style="color: #f92672;">+</span>rpi1<span style="color: #f92672;">+</span>deb11u8) <span style="color: #f92672;">...</span>
Stderr: debconf: unable to initialize frontend: Dialog
debconf: (TERM <span style="color: #f92672;">is</span> <span style="color: #f92672;">not</span> set, so the dialog frontend <span style="color: #f92672;">is</span> <span style="color: #f92672;">not</span> usable<span style="color: #f92672;">.</span>)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty<span style="color: #f92672;">.</span>)
debconf: falling back to frontend: Teletype
dpkg<span style="color: #f92672;">-</span>preconfigure: unable to re<span style="color: #f92672;">-</span>open stdin: 
<span style="color: #f92672;">....</span>
<span style="color: #f92672;">....</span>
</code></pre></div>

</details>

<br />
<!-- raw HTML omitted -->
7. Following the installation of <em>syslog-ng</em> across Nodes 2-7. We verify that the installation was successful by checking the <em>syslog-ng</em> service status.</p>

<p><details>
  <strong>Output of <em>parallel-ssh -h /opt/workers -i &ldquo;systemctl status syslog-ng&rdquo;</em>. Click to expand</strong>
  <div class="highlight"><pre><code class="language-python">root<span style="color: #a6e22e;">@turingpi</span>:<span style="color: #f92672;">~</span><span style="color: #75715e;"># parallel-ssh -h /opt/workers -i "systemctl status syslog-ng" </span>
[<span style="color: #ae81ff;">1</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">03</span>:<span style="color: #ae81ff;">46</span> [SUCCESS] kemeny
<span style="color: #960050; background-color: #1e0010;">●</span> syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service <span style="color: #f92672;">-</span> System Logger Daemon
     Loaded: loaded (<span style="color: #f92672;">/</span>lib<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service; enabled; vendor preset: enabled)
     Active: active (running) since Thu <span style="color: #ae81ff;">2024</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">03</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">01</span> EDT; <span style="color: #ae81ff;">6</span>min ago
       Docs: man:syslog<span style="color: #f92672;">-</span>ng(<span style="color: #ae81ff;">8</span>)
   Main PID: <span style="color: #ae81ff;">28694</span> (syslog<span style="color: #f92672;">-</span>ng)
      Tasks: <span style="color: #ae81ff;">2</span> (limit: <span style="color: #ae81ff;">779</span>)
        CPU: <span style="color: #ae81ff;">40.228</span>s
     CGroup: <span style="color: #f92672;">/</span>system<span style="color: #f92672;">.</span>slice<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service
             <span style="color: #960050; background-color: #1e0010;">└─</span><span style="color: #ae81ff;">28694</span> <span style="color: #f92672;">/</span>usr<span style="color: #f92672;">/</span>sbin<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng <span style="color: #f92672;">-</span>F

Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">00</span> kemeny systemd[<span style="color: #ae81ff;">1</span>]: Starting System Logger Daemon<span style="color: #f92672;">...</span>
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">01</span> kemeny syslog<span style="color: #f92672;">-</span>ng[<span style="color: #ae81ff;">28694</span>]: DIGEST<span style="color: #f92672;">-</span>MD5 common mech free
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">01</span> kemeny systemd[<span style="color: #ae81ff;">1</span>]: Started System Logger Daemon<span style="color: #f92672;">.</span>
[<span style="color: #ae81ff;">2</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">03</span>:<span style="color: #ae81ff;">50</span> [SUCCESS] vonkarman
<span style="color: #960050; background-color: #1e0010;">●</span> syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service <span style="color: #f92672;">-</span> System Logger Daemon
     Loaded: loaded (<span style="color: #f92672;">/</span>lib<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service; enabled; vendor preset: enabled)
     Active: active (running) since Thu <span style="color: #ae81ff;">2024</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">03</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">49</span> EDT; <span style="color: #ae81ff;">5</span>min ago
       Docs: man:syslog<span style="color: #f92672;">-</span>ng(<span style="color: #ae81ff;">8</span>)
   Main PID: <span style="color: #ae81ff;">27486</span> (syslog<span style="color: #f92672;">-</span>ng)
      Tasks: <span style="color: #ae81ff;">2</span> (limit: <span style="color: #ae81ff;">779</span>)
        CPU: <span style="color: #ae81ff;">2</span>min <span style="color: #ae81ff;">5.540</span>s
     CGroup: <span style="color: #f92672;">/</span>system<span style="color: #f92672;">.</span>slice<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service
             <span style="color: #960050; background-color: #1e0010;">└─</span><span style="color: #ae81ff;">27486</span> <span style="color: #f92672;">/</span>usr<span style="color: #f92672;">/</span>sbin<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng <span style="color: #f92672;">-</span>F

Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">44</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: Starting System Logger Daemon<span style="color: #f92672;">...</span>
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">46</span> vonkarman syslog<span style="color: #f92672;">-</span>ng[<span style="color: #ae81ff;">27486</span>]: DIGEST<span style="color: #f92672;">-</span>MD5 common mech free
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">49</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: Started System Logger Daemon<span style="color: #f92672;">.</span>
[<span style="color: #ae81ff;">3</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">03</span>:<span style="color: #ae81ff;">51</span> [SUCCESS] teller
<span style="color: #960050; background-color: #1e0010;">●</span> syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service <span style="color: #f92672;">-</span> System Logger Daemon
     Loaded: loaded (<span style="color: #f92672;">/</span>lib<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service; enabled; vendor preset: enabled)
     Active: active (running) since Thu <span style="color: #ae81ff;">2024</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">03</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">39</span> EDT; <span style="color: #ae81ff;">6</span>min ago
       Docs: man:syslog<span style="color: #f92672;">-</span>ng(<span style="color: #ae81ff;">8</span>)
   Main PID: <span style="color: #ae81ff;">24821</span> (syslog<span style="color: #f92672;">-</span>ng)
      Tasks: <span style="color: #ae81ff;">2</span> (limit: <span style="color: #ae81ff;">779</span>)
        CPU: <span style="color: #ae81ff;">2</span>min <span style="color: #ae81ff;">262</span>ms
     CGroup: <span style="color: #f92672;">/</span>system<span style="color: #f92672;">.</span>slice<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service
             <span style="color: #960050; background-color: #1e0010;">└─</span><span style="color: #ae81ff;">24821</span> <span style="color: #f92672;">/</span>usr<span style="color: #f92672;">/</span>sbin<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng <span style="color: #f92672;">-</span>F

Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">38</span> teller systemd[<span style="color: #ae81ff;">1</span>]: Starting System Logger Daemon<span style="color: #f92672;">...</span>
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">38</span> teller syslog<span style="color: #f92672;">-</span>ng[<span style="color: #ae81ff;">24821</span>]: DIGEST<span style="color: #f92672;">-</span>MD5 common mech free
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">39</span> teller systemd[<span style="color: #ae81ff;">1</span>]: Started System Logger Daemon<span style="color: #f92672;">.</span>
[<span style="color: #ae81ff;">4</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">03</span>:<span style="color: #ae81ff;">53</span> [SUCCESS] neumann
<span style="color: #960050; background-color: #1e0010;">●</span> syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service <span style="color: #f92672;">-</span> System Logger Daemon
     Loaded: loaded (<span style="color: #f92672;">/</span>lib<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service; enabled; vendor preset: enabled)
     Active: active (running) since Thu <span style="color: #ae81ff;">2024</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">03</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">39</span> EDT; <span style="color: #ae81ff;">6</span>min ago
       Docs: man:syslog<span style="color: #f92672;">-</span>ng(<span style="color: #ae81ff;">8</span>)
   Main PID: <span style="color: #ae81ff;">27734</span> (syslog<span style="color: #f92672;">-</span>ng)
      Tasks: <span style="color: #ae81ff;">2</span> (limit: <span style="color: #ae81ff;">779</span>)
        CPU: <span style="color: #ae81ff;">1</span>min <span style="color: #ae81ff;">43.504</span>s
     CGroup: <span style="color: #f92672;">/</span>system<span style="color: #f92672;">.</span>slice<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service
             <span style="color: #960050; background-color: #1e0010;">└─</span><span style="color: #ae81ff;">27734</span> <span style="color: #f92672;">/</span>usr<span style="color: #f92672;">/</span>sbin<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng <span style="color: #f92672;">-</span>F

Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">38</span> neumann systemd[<span style="color: #ae81ff;">1</span>]: Starting System Logger Daemon<span style="color: #f92672;">...</span>
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">38</span> neumann syslog<span style="color: #f92672;">-</span>ng[<span style="color: #ae81ff;">27734</span>]: DIGEST<span style="color: #f92672;">-</span>MD5 common mech free
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">39</span> neumann systemd[<span style="color: #ae81ff;">1</span>]: Started System Logger Daemon<span style="color: #f92672;">.</span>
[<span style="color: #ae81ff;">5</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">03</span>:<span style="color: #ae81ff;">53</span> [SUCCESS] wigner
<span style="color: #960050; background-color: #1e0010;">●</span> syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service <span style="color: #f92672;">-</span> System Logger Daemon
     Loaded: loaded (<span style="color: #f92672;">/</span>lib<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service; enabled; vendor preset: enabled)
     Active: active (running) since Thu <span style="color: #ae81ff;">2024</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">03</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">37</span> EDT; <span style="color: #ae81ff;">6</span>min ago
       Docs: man:syslog<span style="color: #f92672;">-</span>ng(<span style="color: #ae81ff;">8</span>)
   Main PID: <span style="color: #ae81ff;">27512</span> (syslog<span style="color: #f92672;">-</span>ng)
      Tasks: <span style="color: #ae81ff;">2</span> (limit: <span style="color: #ae81ff;">779</span>)
        CPU: <span style="color: #ae81ff;">1</span>min <span style="color: #ae81ff;">49.643</span>s
     CGroup: <span style="color: #f92672;">/</span>system<span style="color: #f92672;">.</span>slice<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service
             <span style="color: #960050; background-color: #1e0010;">└─</span><span style="color: #ae81ff;">27512</span> <span style="color: #f92672;">/</span>usr<span style="color: #f92672;">/</span>sbin<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng <span style="color: #f92672;">-</span>F

Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">36</span> wigner systemd[<span style="color: #ae81ff;">1</span>]: Starting System Logger Daemon<span style="color: #f92672;">...</span>
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">36</span> wigner syslog<span style="color: #f92672;">-</span>ng[<span style="color: #ae81ff;">27512</span>]: DIGEST<span style="color: #f92672;">-</span>MD5 common mech free
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">37</span> wigner systemd[<span style="color: #ae81ff;">1</span>]: Started System Logger Daemon<span style="color: #f92672;">.</span>
[<span style="color: #ae81ff;">6</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">03</span>:<span style="color: #ae81ff;">57</span> [SUCCESS] szilard
<span style="color: #960050; background-color: #1e0010;">●</span> syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service <span style="color: #f92672;">-</span> System Logger Daemon
     Loaded: loaded (<span style="color: #f92672;">/</span>lib<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service; enabled; vendor preset: enabled)
     Active: active (running) since Thu <span style="color: #ae81ff;">2024</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">03</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">35</span> EDT; <span style="color: #ae81ff;">6</span>min ago
       Docs: man:syslog<span style="color: #f92672;">-</span>ng(<span style="color: #ae81ff;">8</span>)
   Main PID: <span style="color: #ae81ff;">24136</span> (syslog<span style="color: #f92672;">-</span>ng)
      Tasks: <span style="color: #ae81ff;">5</span> (limit: <span style="color: #ae81ff;">779</span>)
        CPU: <span style="color: #ae81ff;">2</span>min <span style="color: #ae81ff;">10.257</span>s
     CGroup: <span style="color: #f92672;">/</span>system<span style="color: #f92672;">.</span>slice<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service
             <span style="color: #960050; background-color: #1e0010;">└─</span><span style="color: #ae81ff;">24136</span> <span style="color: #f92672;">/</span>usr<span style="color: #f92672;">/</span>sbin<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng <span style="color: #f92672;">-</span>F

Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">34</span> szilard systemd[<span style="color: #ae81ff;">1</span>]: Starting System Logger Daemon<span style="color: #f92672;">...</span>
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">34</span> szilard syslog<span style="color: #f92672;">-</span>ng[<span style="color: #ae81ff;">24136</span>]: DIGEST<span style="color: #f92672;">-</span>MD5 common mech free
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">13</span>:<span style="color: #ae81ff;">57</span>:<span style="color: #ae81ff;">35</span> szilard systemd[<span style="color: #ae81ff;">1</span>]: Started System Logger Daemon<span style="color: #f92672;">.</span>
</code></pre></div>

</details>

<br />
<!-- raw HTML omitted -->
8. Create the  configuration file <em>send.conf</em> in <em>/opt</em> on host <em>turingpi</em>. Note that <em>/opt</em> is an NFS export on <em>turingpi</em> and is NFS mounted by all of the compute nodes. This file will set the HOST field to the local hostname for log messages that are sent. This in done in the subsequent steps where <em>“placeholder”</em> will be replaced using a <em>sed</em> operation with the local hostname. Additionally, a data source <em>s_hpc</em> is defined which will scan <em>/opt/ibm/lsf/log</em> for the presence of LSF daemon logfiles.</p>

<div class="highlight"><pre><code class="language-plaintext"> 
root@turingpi:/# cat /opt/send.conf
rewrite r_host { set("placeholder", value("HOST")); };

destination d_net {
  syslog("turingpi" port(601));
};
source s_hpc {
  wildcard-file(
      base-dir("/opt/ibm/lsf/log")
      filename-pattern("*.log.*")
      recursive(no)
      follow-freq(1)
  );
};
log {
  source(s_src);
  source(s_hpc);
  rewrite(r_host); 
  destination(d_net);
};</code></pre></div>

<ol start="9">
<li>On Nodes 2-7, copy the file <em>/opt/send.conf</em> to <em>/etc/syslog-ng/conf.d/send.conf</em>.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext"> 
root@turingpi:/# parallel-ssh -h /opt/workers -i "cp /opt/send.conf /etc/syslog-ng/conf.d" 
[1] 14:19:29 [SUCCESS] kemeny
[2] 14:19:30 [SUCCESS] vonkarman
[3] 14:19:30 [SUCCESS] wigner
[4] 14:19:30 [SUCCESS] szilard
[5] 14:19:30 [SUCCESS] teller
[6] 14:19:31 [SUCCESS] neumann</code></pre></div>

<ol start="10">
<li>Using <em>sed</em>, replace the <em>“placeholder”</em> string in <em>/etc/syslog-ng/conf.d/send.conf</em> with the local hostname. And we also double check that the change was correctly made.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext"> 
root@turingpi:/# parallel-ssh -h /opt/workers -i 'HOST=`hostname`; sed -i "s/placeholder/$HOST/g" /etc/syslog-ng/conf.d/send.conf' 
[1] 14:38:09 [SUCCESS] kemeny
[2] 14:38:09 [SUCCESS] teller
[3] 14:38:09 [SUCCESS] vonkarman
[4] 14:38:09 [SUCCESS] wigner
[5] 14:38:09 [SUCCESS] neumann
[6] 14:38:09 [SUCCESS] szilard</code></pre></div>

<p><details>
  <strong>Output of <em>parallel-ssh -h /opt/workers -i &ldquo;cat /etc/syslog-ng/conf.d/send.conf&rdquo;</em>. Click to expand</strong>
  <div class="highlight"><pre><code class="language-python">root<span style="color: #a6e22e;">@turingpi</span>:<span style="color: #f92672;">/</span><span style="color: #75715e;"># parallel-ssh -h /opt/workers -i "cat /etc/syslog-ng/conf.d/send.conf" [1] 14:38:33 [SUCCESS] kemeny</span>
rewrite r_host { set(<span style="color: #e6db74;">"kemeny"</span>, value(<span style="color: #e6db74;">"HOST"</span>)); };

destination d_net {
  syslog(<span style="color: #e6db74;">"turingpi"</span> port(<span style="color: #ae81ff;">601</span>));
};
source s_hpc {
  wildcard<span style="color: #f92672;">-</span>file(
      base<span style="color: #f92672;">-</span>dir(<span style="color: #e6db74;">"/opt/ibm/lsf/log"</span>)
      filename<span style="color: #f92672;">-</span>pattern(<span style="color: #e6db74;">"*.log.*"</span>)
      recursive(no)
      follow<span style="color: #f92672;">-</span>freq(<span style="color: #ae81ff;">1</span>)
  );
};
log {
  source(s_sys);
  source(s_hpc);
  rewrite(r_host); 
  destination(d_net);
};

[<span style="color: #ae81ff;">2</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">38</span>:<span style="color: #ae81ff;">33</span> [SUCCESS] teller
rewrite r_host { set(<span style="color: #e6db74;">"teller"</span>, value(<span style="color: #e6db74;">"HOST"</span>)); };

destination d_net {
  syslog(<span style="color: #e6db74;">"turingpi"</span> port(<span style="color: #ae81ff;">601</span>));
};
source s_hpc {
  wildcard<span style="color: #f92672;">-</span>file(
      base<span style="color: #f92672;">-</span>dir(<span style="color: #e6db74;">"/opt/ibm/lsf/log"</span>)
      filename<span style="color: #f92672;">-</span>pattern(<span style="color: #e6db74;">"*.log.*"</span>)
      recursive(no)
      follow<span style="color: #f92672;">-</span>freq(<span style="color: #ae81ff;">1</span>)
  );
};
log {
  source(s_sys);
  source(s_hpc);
  rewrite(r_host); 
  destination(d_net);
};

[<span style="color: #ae81ff;">3</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">38</span>:<span style="color: #ae81ff;">33</span> [SUCCESS] neumann
rewrite r_host { set(<span style="color: #e6db74;">"neumann"</span>, value(<span style="color: #e6db74;">"HOST"</span>)); };

destination d_net {
  syslog(<span style="color: #e6db74;">"turingpi"</span> port(<span style="color: #ae81ff;">601</span>));
};
source s_hpc {
  wildcard<span style="color: #f92672;">-</span>file(
      base<span style="color: #f92672;">-</span>dir(<span style="color: #e6db74;">"/opt/ibm/lsf/log"</span>)
      filename<span style="color: #f92672;">-</span>pattern(<span style="color: #e6db74;">"*.log.*"</span>)
      recursive(no)
      follow<span style="color: #f92672;">-</span>freq(<span style="color: #ae81ff;">1</span>)
  );
};
log {
  source(s_sys);
  source(s_hpc);
  rewrite(r_host); 
  destination(d_net);
};

[<span style="color: #ae81ff;">4</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">38</span>:<span style="color: #ae81ff;">33</span> [SUCCESS] szilard
rewrite r_host { set(<span style="color: #e6db74;">"szilard"</span>, value(<span style="color: #e6db74;">"HOST"</span>)); };

destination d_net {
  syslog(<span style="color: #e6db74;">"turingpi"</span> port(<span style="color: #ae81ff;">601</span>));
};
source s_hpc {
  wildcard<span style="color: #f92672;">-</span>file(
      base<span style="color: #f92672;">-</span>dir(<span style="color: #e6db74;">"/opt/ibm/lsf/log"</span>)
      filename<span style="color: #f92672;">-</span>pattern(<span style="color: #e6db74;">"*.log.*"</span>)
      recursive(no)
      follow<span style="color: #f92672;">-</span>freq(<span style="color: #ae81ff;">1</span>)
  );
};
log {
  source(s_sys);
  source(s_hpc);
  rewrite(r_host); 
  destination(d_net);
};

[<span style="color: #ae81ff;">5</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">38</span>:<span style="color: #ae81ff;">33</span> [SUCCESS] wigner
rewrite r_host { set(<span style="color: #e6db74;">"wigner"</span>, value(<span style="color: #e6db74;">"HOST"</span>)); };

destination d_net {
  syslog(<span style="color: #e6db74;">"turingpi"</span> port(<span style="color: #ae81ff;">601</span>));
};
source s_hpc {
  wildcard<span style="color: #f92672;">-</span>file(
      base<span style="color: #f92672;">-</span>dir(<span style="color: #e6db74;">"/opt/ibm/lsf/log"</span>)
      filename<span style="color: #f92672;">-</span>pattern(<span style="color: #e6db74;">"*.log.*"</span>)
      recursive(no)
      follow<span style="color: #f92672;">-</span>freq(<span style="color: #ae81ff;">1</span>)
  );
};
log {
  source(s_sys);
  source(s_hpc);
  rewrite(r_host); 
  destination(d_net);
};

[<span style="color: #ae81ff;">6</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">38</span>:<span style="color: #ae81ff;">33</span> [SUCCESS] vonkarman
rewrite r_host { set(<span style="color: #e6db74;">"vonkarman"</span>, value(<span style="color: #e6db74;">"HOST"</span>)); };

destination d_net {
  syslog(<span style="color: #e6db74;">"turingpi"</span> port(<span style="color: #ae81ff;">601</span>));
};
source s_hpc {
  wildcard<span style="color: #f92672;">-</span>file(
      base<span style="color: #f92672;">-</span>dir(<span style="color: #e6db74;">"/opt/ibm/lsf/log"</span>)
      filename<span style="color: #f92672;">-</span>pattern(<span style="color: #e6db74;">"*.log.*"</span>)
      recursive(no)
      follow<span style="color: #f92672;">-</span>freq(<span style="color: #ae81ff;">1</span>)
  );
};
log {
  source(s_sys);
  source(s_hpc);
  rewrite(r_host); 
  destination(d_net);
};
</code></pre></div>

</details>

<br />
<!-- raw HTML omitted -->
11. Finally, <em>syslog-ng</em> is restarted on Nodes 2-7 and the status of the service is checked to ensure that there are no errors.</p>

<div class="highlight"><pre><code class="language-plaintext"> 
root@turingpi:/opt# parallel-ssh -h /opt/workers -i "systemctl restart syslog-ng" 
[1] 14:49:03 [SUCCESS] kemeny
[2] 14:49:05 [SUCCESS] szilard
[3] 14:49:06 [SUCCESS] vonkarman
[4] 14:49:06 [SUCCESS] neumann
[5] 14:49:06 [SUCCESS] teller
[6] 14:49:07 [SUCCESS] wigner</code></pre></div>

<p><details>
  <strong>Output of <em>parallel-ssh -h /opt/workers -i &ldquo;systemctl status syslog-ng&rdquo;</em>. Click to expand</strong>
  <div class="highlight"><pre><code class="language-python">root<span style="color: #a6e22e;">@turingpi</span>:<span style="color: #f92672;">/</span>opt<span style="color: #75715e;"># parallel-ssh -h /opt/workers -i "systemctl status syslog-ng" </span>
[<span style="color: #ae81ff;">1</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">31</span> [SUCCESS] kemeny
<span style="color: #960050; background-color: #1e0010;">●</span> syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service <span style="color: #f92672;">-</span> System Logger Daemon
     Loaded: loaded (<span style="color: #f92672;">/</span>lib<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service; enabled; vendor preset: enabled)
     Active: active (running) since Thu <span style="color: #ae81ff;">2024</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">03</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">03</span> EDT; <span style="color: #ae81ff;">28</span>s ago
       Docs: man:syslog<span style="color: #f92672;">-</span>ng(<span style="color: #ae81ff;">8</span>)
   Main PID: <span style="color: #ae81ff;">34982</span> (syslog<span style="color: #f92672;">-</span>ng)
      Tasks: <span style="color: #ae81ff;">2</span> (limit: <span style="color: #ae81ff;">779</span>)
        CPU: <span style="color: #ae81ff;">398</span>ms
     CGroup: <span style="color: #f92672;">/</span>system<span style="color: #f92672;">.</span>slice<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service
             <span style="color: #960050; background-color: #1e0010;">└─</span><span style="color: #ae81ff;">34982</span> <span style="color: #f92672;">/</span>usr<span style="color: #f92672;">/</span>sbin<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng <span style="color: #f92672;">-</span>F

Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">02</span> kemeny systemd[<span style="color: #ae81ff;">1</span>]: Starting System Logger Daemon<span style="color: #f92672;">...</span>
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">02</span> kemeny syslog<span style="color: #f92672;">-</span>ng[<span style="color: #ae81ff;">34982</span>]: DIGEST<span style="color: #f92672;">-</span>MD5 common mech free
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">03</span> kemeny systemd[<span style="color: #ae81ff;">1</span>]: Started System Logger Daemon<span style="color: #f92672;">.</span>
[<span style="color: #ae81ff;">2</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">33</span> [SUCCESS] vonkarman
<span style="color: #960050; background-color: #1e0010;">●</span> syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service <span style="color: #f92672;">-</span> System Logger Daemon
     Loaded: loaded (<span style="color: #f92672;">/</span>lib<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service; enabled; vendor preset: enabled)
     Active: active (running) since Thu <span style="color: #ae81ff;">2024</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">03</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">06</span> EDT; <span style="color: #ae81ff;">25</span>s ago
       Docs: man:syslog<span style="color: #f92672;">-</span>ng(<span style="color: #ae81ff;">8</span>)
   Main PID: <span style="color: #ae81ff;">33710</span> (syslog<span style="color: #f92672;">-</span>ng)
      Tasks: <span style="color: #ae81ff;">2</span> (limit: <span style="color: #ae81ff;">779</span>)
        CPU: <span style="color: #ae81ff;">934</span>ms
     CGroup: <span style="color: #f92672;">/</span>system<span style="color: #f92672;">.</span>slice<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service
             <span style="color: #960050; background-color: #1e0010;">└─</span><span style="color: #ae81ff;">33710</span> <span style="color: #f92672;">/</span>usr<span style="color: #f92672;">/</span>sbin<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng <span style="color: #f92672;">-</span>F

Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">03</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: Starting System Logger Daemon<span style="color: #f92672;">...</span>
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">03</span> vonkarman syslog<span style="color: #f92672;">-</span>ng[<span style="color: #ae81ff;">33710</span>]: DIGEST<span style="color: #f92672;">-</span>MD5 common mech free
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">06</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: Started System Logger Daemon<span style="color: #f92672;">.</span>
[<span style="color: #ae81ff;">3</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">33</span> [SUCCESS] neumann
<span style="color: #960050; background-color: #1e0010;">●</span> syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service <span style="color: #f92672;">-</span> System Logger Daemon
     Loaded: loaded (<span style="color: #f92672;">/</span>lib<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service; enabled; vendor preset: enabled)
     Active: active (running) since Thu <span style="color: #ae81ff;">2024</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">03</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">06</span> EDT; <span style="color: #ae81ff;">25</span>s ago
       Docs: man:syslog<span style="color: #f92672;">-</span>ng(<span style="color: #ae81ff;">8</span>)
   Main PID: <span style="color: #ae81ff;">34000</span> (syslog<span style="color: #f92672;">-</span>ng)
      Tasks: <span style="color: #ae81ff;">2</span> (limit: <span style="color: #ae81ff;">779</span>)
        CPU: <span style="color: #ae81ff;">959</span>ms
     CGroup: <span style="color: #f92672;">/</span>system<span style="color: #f92672;">.</span>slice<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service
             <span style="color: #960050; background-color: #1e0010;">└─</span><span style="color: #ae81ff;">34000</span> <span style="color: #f92672;">/</span>usr<span style="color: #f92672;">/</span>sbin<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng <span style="color: #f92672;">-</span>F

Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">03</span> neumann systemd[<span style="color: #ae81ff;">1</span>]: Starting System Logger Daemon<span style="color: #f92672;">...</span>
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">03</span> neumann syslog<span style="color: #f92672;">-</span>ng[<span style="color: #ae81ff;">34000</span>]: DIGEST<span style="color: #f92672;">-</span>MD5 common mech free
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">06</span> neumann systemd[<span style="color: #ae81ff;">1</span>]: Started System Logger Daemon<span style="color: #f92672;">.</span>
[<span style="color: #ae81ff;">4</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">33</span> [SUCCESS] wigner
<span style="color: #960050; background-color: #1e0010;">●</span> syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service <span style="color: #f92672;">-</span> System Logger Daemon
     Loaded: loaded (<span style="color: #f92672;">/</span>lib<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service; enabled; vendor preset: enabled)
     Active: active (running) since Thu <span style="color: #ae81ff;">2024</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">03</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">07</span> EDT; <span style="color: #ae81ff;">25</span>s ago
       Docs: man:syslog<span style="color: #f92672;">-</span>ng(<span style="color: #ae81ff;">8</span>)
   Main PID: <span style="color: #ae81ff;">33941</span> (syslog<span style="color: #f92672;">-</span>ng)
      Tasks: <span style="color: #ae81ff;">2</span> (limit: <span style="color: #ae81ff;">779</span>)
        CPU: <span style="color: #ae81ff;">1.115</span>s
     CGroup: <span style="color: #f92672;">/</span>system<span style="color: #f92672;">.</span>slice<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service
             <span style="color: #960050; background-color: #1e0010;">└─</span><span style="color: #ae81ff;">33941</span> <span style="color: #f92672;">/</span>usr<span style="color: #f92672;">/</span>sbin<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng <span style="color: #f92672;">-</span>F

Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">03</span> wigner systemd[<span style="color: #ae81ff;">1</span>]: Starting System Logger Daemon<span style="color: #f92672;">...</span>
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">04</span> wigner syslog<span style="color: #f92672;">-</span>ng[<span style="color: #ae81ff;">33941</span>]: DIGEST<span style="color: #f92672;">-</span>MD5 common mech free
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">07</span> wigner systemd[<span style="color: #ae81ff;">1</span>]: Started System Logger Daemon<span style="color: #f92672;">.</span>
[<span style="color: #ae81ff;">5</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">34</span> [SUCCESS] szilard
<span style="color: #960050; background-color: #1e0010;">●</span> syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service <span style="color: #f92672;">-</span> System Logger Daemon
     Loaded: loaded (<span style="color: #f92672;">/</span>lib<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service; enabled; vendor preset: enabled)
     Active: active (running) since Thu <span style="color: #ae81ff;">2024</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">03</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">05</span> EDT; <span style="color: #ae81ff;">26</span>s ago
       Docs: man:syslog<span style="color: #f92672;">-</span>ng(<span style="color: #ae81ff;">8</span>)
   Main PID: <span style="color: #ae81ff;">30348</span> (syslog<span style="color: #f92672;">-</span>ng)
      Tasks: <span style="color: #ae81ff;">2</span> (limit: <span style="color: #ae81ff;">779</span>)
        CPU: <span style="color: #ae81ff;">816</span>ms
     CGroup: <span style="color: #f92672;">/</span>system<span style="color: #f92672;">.</span>slice<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service
             <span style="color: #960050; background-color: #1e0010;">└─</span><span style="color: #ae81ff;">30348</span> <span style="color: #f92672;">/</span>usr<span style="color: #f92672;">/</span>sbin<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng <span style="color: #f92672;">-</span>F

Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">03</span> szilard systemd[<span style="color: #ae81ff;">1</span>]: Starting System Logger Daemon<span style="color: #f92672;">...</span>
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">03</span> szilard syslog<span style="color: #f92672;">-</span>ng[<span style="color: #ae81ff;">30348</span>]: DIGEST<span style="color: #f92672;">-</span>MD5 common mech free
Mar <span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">05</span> szilard systemd[<span style="color: #ae81ff;">1</span>]: Started System Logger Daemon<span style="color: #f92672;">.</span>
[<span style="color: #ae81ff;">6</span>] <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">34</span> [SUCCESS] teller
<span style="color: #960050; background-color: #1e0010;">●</span> syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service <span style="color: #f92672;">-</span> System Logger Daemon
     Loaded: loaded (<span style="color: #f92672;">/</span>lib<span style="color: #f92672;">/</span>systemd<span style="color: #f92672;">/</span>system<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service; enabled; vendor preset: enabled)
     Active: active (running) since Thu <span style="color: #ae81ff;">2024</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">03</span><span style="color: #f92672;">-</span><span style="color: #ae81ff;">28</span> <span style="color: #ae81ff;">14</span>:<span style="color: #ae81ff;">49</span>:<span style="color: #ae81ff;">06</span> EDT; <span style="color: #ae81ff;">25</span>s ago
       Docs: man:syslog<span style="color: #f92672;">-</span>ng(<span style="color: #ae81ff;">8</span>)
   Main PID: <span style="color: #ae81ff;">31034</span> (syslog<span style="color: #f92672;">-</span>ng)
      Tasks: <span style="color: #ae81ff;">2</span> (limit: <span style="color: #ae81ff;">779</span>)
        CPU: <span style="color: #ae81ff;">965</span>ms
     CGroup: <span style="color: #f92672;">/</span>system<span style="color: #f92672;">.</span>slice<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng<span style="color: #f92672;">.</span>service
             <span style="color: #960050; background-color: #1e0010;">└─</span><span style="color: #ae81ff;">31034</span> <span style="color: #f92672;">/</span>usr<span style="color: #f92672;">/</span>sbin<span style="color: #f92672;">/</span>syslog<span style="color: #f92672;">-</span>ng <span style="color: #f92672;">-</span>F
</code></pre></div>

</details>

<br />
<!-- raw HTML omitted -->
<strong>Does it work?</strong></p>

<p>The answer to this question is an emphatic YES!</p>

<p>Let’s begin with a simple test running the <em>logger</em> command on all of the compute nodes, while monitoring <em>/var/log/fromnet</em> on host <em>turingpi</em>.</p>

<div class="highlight"><pre><code class="language-plaintext"> 
root@turingpi:/home/lsfadmin# date; parallel-ssh -h /opt/workers -i 'HOST=`hostname`; logger This is a test from node $HOST. Do not panic!' 
Wed  3 Apr 21:41:45 EDT 2024 
[1] 21:41:46 [SUCCESS] teller 
[2] 21:41:46 [SUCCESS] neumann 
[3] 21:41:46 [SUCCESS] wigner 
[4] 21:41:46 [SUCCESS] kemeny 
[5] 21:41:46 [SUCCESS] szilard 
[6] 21:41:46 [SUCCESS] vonkarman

root@turingpi:/var/log# tail -f fromnet |grep panic 
Apr  3 21:41:46 szilard root[10918]: This is a test from node szilard. Do not panic! 
Apr  3 21:41:46 wigner root[11011]: This is a test from node wigner. Do not panic! 
Apr  3 21:41:46 neumann root[11121]: This is a test from node neumann. Do not panic! 
Apr  3 21:41:46 kemeny root[11029]: This is a test from node kemeny. Do not panic! 
Apr  3 21:41:46 teller root[10875]: This is a test from node teller. Do not panic! 
Apr  3 21:41:46 vonkarman root[10805]: This is a test from node vonkarman. Do not panic!</code></pre></div>

<p>Next, let’s look at whether the LSF logging is also captured. Here we simply restart the LSF daemons on Nodes 2-7 and monitor the <em>/var/log/fromnet</em> file. The full output can be viewed below.</p>

<p><details>
  <strong>Output of <em>tail -f /var/log/fromnet</em>. Click to expand</strong>
  <div class="highlight"><pre><code class="language-python">root<span style="color: #a6e22e;">@turingpi</span>:<span style="color: #f92672;">/</span>var<span style="color: #f92672;">/</span>log<span style="color: #75715e;"># tail -f fromnet </span>
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">41</span>:<span style="color: #ae81ff;">57</span> vonkarman systemd[<span style="color: #ae81ff;">10786</span>]: systemd<span style="color: #f92672;">-</span>exit<span style="color: #f92672;">.</span>service: Succeeded<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">41</span>:<span style="color: #ae81ff;">57</span> vonkarman systemd[<span style="color: #ae81ff;">10786</span>]: Finished Exit the Session<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">41</span>:<span style="color: #ae81ff;">57</span> vonkarman systemd[<span style="color: #ae81ff;">10786</span>]: Reached target Exit the Session<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">41</span>:<span style="color: #ae81ff;">57</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: user<span style="color: #f92672;">@</span><span style="color: #ae81ff;">0.</span>service: Succeeded<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">41</span>:<span style="color: #ae81ff;">57</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: Stopped User Manager <span style="color: #66d9ef;">for</span> UID <span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">41</span>:<span style="color: #ae81ff;">57</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: Stopping User Runtime Directory <span style="color: #f92672;">/</span>run<span style="color: #f92672;">/</span>user<span style="color: #f92672;">/</span><span style="color: #ae81ff;">0.</span><span style="color: #f92672;">..</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">41</span>:<span style="color: #ae81ff;">57</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: run<span style="color: #f92672;">-</span>user<span style="color: #f92672;">-</span><span style="color: #ae81ff;">0.</span>mount: Succeeded<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">41</span>:<span style="color: #ae81ff;">57</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: user<span style="color: #f92672;">-</span>runtime<span style="color: #f92672;">-</span>dir<span style="color: #f92672;">@</span><span style="color: #ae81ff;">0.</span>service: Succeeded<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">41</span>:<span style="color: #ae81ff;">57</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: Stopped User Runtime Directory <span style="color: #f92672;">/</span>run<span style="color: #f92672;">/</span>user<span style="color: #f92672;">/</span><span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">41</span>:<span style="color: #ae81ff;">57</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: Removed slice User Slice of UID <span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">30</span> wigner dhcpcd[<span style="color: #ae81ff;">493</span>]: eth0: Router Advertisement <span style="color: #f92672;">from</span> fe80::da58:d7ff:fe00:<span style="color: #ae81ff;">6</span>d83 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">57</span> szilard sshd[<span style="color: #ae81ff;">11234</span>]: Accepted publickey <span style="color: #66d9ef;">for</span> root <span style="color: #f92672;">from</span> <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">52600</span> ssh2: ED25519 S
HA256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">57</span> szilard sshd[<span style="color: #ae81ff;">11234</span>]: pam_unix(sshd:session): session opened <span style="color: #66d9ef;">for</span> user root(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) by (uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">1</span>]: Created slice User Slice of UID <span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">1</span>]: Starting User Runtime Directory <span style="color: #f92672;">/</span>run<span style="color: #f92672;">/</span>user<span style="color: #f92672;">/</span><span style="color: #ae81ff;">0.</span><span style="color: #f92672;">..</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd<span style="color: #f92672;">-</span>logind[<span style="color: #ae81ff;">382</span>]: New session <span style="color: #ae81ff;">30</span> of user root<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">1</span>]: Finished User Runtime Directory <span style="color: #f92672;">/</span>run<span style="color: #f92672;">/</span>user<span style="color: #f92672;">/</span><span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">1</span>]: Starting User Manager <span style="color: #66d9ef;">for</span> UID <span style="color: #ae81ff;">0.</span><span style="color: #f92672;">..</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">11237</span>]: pam_unix(systemd<span style="color: #f92672;">-</span>user:session): session opened <span style="color: #66d9ef;">for</span> user root(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) by
(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">57</span> wigner sshd[<span style="color: #ae81ff;">11342</span>]: Accepted publickey <span style="color: #66d9ef;">for</span> root <span style="color: #f92672;">from</span> <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">60388</span> ssh2: ED25519 SH
A256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">57</span> wigner sshd[<span style="color: #ae81ff;">11342</span>]: pam_unix(sshd:session): session opened <span style="color: #66d9ef;">for</span> user root(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) by (uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">1</span>]: Created slice User Slice of UID <span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">1</span>]: Starting User Runtime Directory <span style="color: #f92672;">/</span>run<span style="color: #f92672;">/</span>user<span style="color: #f92672;">/</span><span style="color: #ae81ff;">0.</span><span style="color: #f92672;">..</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd<span style="color: #f92672;">-</span>logind[<span style="color: #ae81ff;">383</span>]: New session <span style="color: #ae81ff;">30</span> of user root<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">1</span>]: Finished User Runtime Directory <span style="color: #f92672;">/</span>run<span style="color: #f92672;">/</span>user<span style="color: #f92672;">/</span><span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">1</span>]: Starting User Manager <span style="color: #66d9ef;">for</span> UID <span style="color: #ae81ff;">0.</span><span style="color: #f92672;">..</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">11345</span>]: pam_unix(systemd<span style="color: #f92672;">-</span>user:session): session opened <span style="color: #66d9ef;">for</span> user root(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) by 
(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">57</span> neumann sshd[<span style="color: #ae81ff;">11436</span>]: Accepted publickey <span style="color: #66d9ef;">for</span> root <span style="color: #f92672;">from</span> <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">55144</span> ssh2: ED25519 S
HA256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">57</span> neumann sshd[<span style="color: #ae81ff;">11436</span>]: pam_unix(sshd:session): session opened <span style="color: #66d9ef;">for</span> user root(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) by (uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">57</span> neumann systemd[<span style="color: #ae81ff;">1</span>]: Created slice User Slice of UID <span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">57</span> neumann systemd[<span style="color: #ae81ff;">1</span>]: Starting User Runtime Directory <span style="color: #f92672;">/</span>run<span style="color: #f92672;">/</span>user<span style="color: #f92672;">/</span><span style="color: #ae81ff;">0.</span><span style="color: #f92672;">..</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd<span style="color: #f92672;">-</span>logind[<span style="color: #ae81ff;">398</span>]: New session <span style="color: #ae81ff;">30</span> of user root<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">1</span>]: Finished User Runtime Directory <span style="color: #f92672;">/</span>run<span style="color: #f92672;">/</span>user<span style="color: #f92672;">/</span><span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">1</span>]: Starting User Manager <span style="color: #66d9ef;">for</span> UID <span style="color: #ae81ff;">0.</span><span style="color: #f92672;">..</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">11439</span>]: pam_unix(systemd<span style="color: #f92672;">-</span>user:session): session opened <span style="color: #66d9ef;">for</span> user root(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) by
(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">57</span> kemeny sshd[<span style="color: #ae81ff;">11345</span>]: Accepted publickey <span style="color: #66d9ef;">for</span> root <span style="color: #f92672;">from</span> <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">59830</span> ssh2: ED25519 SH
A256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">57</span> kemeny sshd[<span style="color: #ae81ff;">11345</span>]: pam_unix(sshd:session): session opened <span style="color: #66d9ef;">for</span> user root(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) by (uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">1</span>]: Created slice User Slice of UID <span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">1</span>]: Starting User Runtime Directory <span style="color: #f92672;">/</span>run<span style="color: #f92672;">/</span>user<span style="color: #f92672;">/</span><span style="color: #ae81ff;">0.</span><span style="color: #f92672;">..</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd<span style="color: #f92672;">-</span>logind[<span style="color: #ae81ff;">386</span>]: New session <span style="color: #ae81ff;">30</span> of user root<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">1</span>]: Finished User Runtime Directory <span style="color: #f92672;">/</span>run<span style="color: #f92672;">/</span>user<span style="color: #f92672;">/</span><span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">1</span>]: Starting User Manager <span style="color: #66d9ef;">for</span> UID <span style="color: #ae81ff;">0.</span><span style="color: #f92672;">..</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">11348</span>]: pam_unix(systemd<span style="color: #f92672;">-</span>user:session): session opened <span style="color: #66d9ef;">for</span> user root(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) by 
(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">57</span> teller sshd[<span style="color: #ae81ff;">11189</span>]: Accepted publickey <span style="color: #66d9ef;">for</span> root <span style="color: #f92672;">from</span> <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">35310</span> ssh2: ED25519 SH
A256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">57</span> teller sshd[<span style="color: #ae81ff;">11189</span>]: pam_unix(sshd:session): session opened <span style="color: #66d9ef;">for</span> user root(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) by (uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">1</span>]: Created slice User Slice of UID <span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">1</span>]: Starting User Runtime Directory <span style="color: #f92672;">/</span>run<span style="color: #f92672;">/</span>user<span style="color: #f92672;">/</span><span style="color: #ae81ff;">0.</span><span style="color: #f92672;">..</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd<span style="color: #f92672;">-</span>logind[<span style="color: #ae81ff;">382</span>]: New session <span style="color: #ae81ff;">30</span> of user root<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">1</span>]: Finished User Runtime Directory <span style="color: #f92672;">/</span>run<span style="color: #f92672;">/</span>user<span style="color: #f92672;">/</span><span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">1</span>]: Starting User Manager <span style="color: #66d9ef;">for</span> UID <span style="color: #ae81ff;">0.</span><span style="color: #f92672;">..</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">11192</span>]: pam_unix(systemd<span style="color: #f92672;">-</span>user:session): session opened <span style="color: #66d9ef;">for</span> user root(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) by 
(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">57</span> vonkarman sshd[<span style="color: #ae81ff;">11118</span>]: Accepted publickey <span style="color: #66d9ef;">for</span> root <span style="color: #f92672;">from</span> <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">48654</span> ssh2: ED25519
SHA256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman sshd[<span style="color: #ae81ff;">11118</span>]: pam_unix(sshd:session): session opened <span style="color: #66d9ef;">for</span> user root(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) by (uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: Created slice User Slice of UID <span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: Starting User Runtime Directory <span style="color: #f92672;">/</span>run<span style="color: #f92672;">/</span>user<span style="color: #f92672;">/</span><span style="color: #ae81ff;">0.</span><span style="color: #f92672;">..</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd<span style="color: #f92672;">-</span>logind[<span style="color: #ae81ff;">382</span>]: New session <span style="color: #ae81ff;">29</span> of user root<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: Finished User Runtime Directory <span style="color: #f92672;">/</span>run<span style="color: #f92672;">/</span>user<span style="color: #f92672;">/</span><span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: Starting User Manager <span style="color: #66d9ef;">for</span> UID <span style="color: #ae81ff;">0.</span><span style="color: #f92672;">..</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">11121</span>]: pam_unix(systemd<span style="color: #f92672;">-</span>user:session): session opened <span style="color: #66d9ef;">for</span> user root(uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) 
by (uid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>) 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">11439</span>]: Queued start job <span style="color: #66d9ef;">for</span> default target Main User Target<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">11439</span>]: Created slice User Application Slice<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">11439</span>]: Reached target Paths<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">11439</span>]: Reached target Timers<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">11439</span>]: Listening on GnuPG network certificate management daemon<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">11439</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache (access fo
r web browsers)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">11439</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache (restricte
d)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">11439</span>]: Listening on GnuPG cryptographic agent (ssh<span style="color: #f92672;">-</span>agent emulation)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">11439</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">11439</span>]: Reached target Sockets<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">11439</span>]: Reached target Basic System<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">11439</span>]: Reached target Main User Target<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">11439</span>]: Startup finished <span style="color: #f92672;">in</span> <span style="color: #ae81ff;">379</span>ms<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">1</span>]: Started User Manager <span style="color: #66d9ef;">for</span> UID <span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> neumann systemd[<span style="color: #ae81ff;">1</span>]: Started Session <span style="color: #ae81ff;">30</span> of user root<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">11192</span>]: Queued start job <span style="color: #66d9ef;">for</span> default target Main User Target<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">11192</span>]: Created slice User Application Slice<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">11192</span>]: Reached target Paths<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">11192</span>]: Reached target Timers<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">11192</span>]: Listening on GnuPG network certificate management daemon<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">11192</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache (access <span style="color: #66d9ef;">for</span>
web browsers)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">11192</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache (restricted
)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">11192</span>]: Listening on GnuPG cryptographic agent (ssh<span style="color: #f92672;">-</span>agent emulation)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">11192</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">11192</span>]: Reached target Sockets<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">11192</span>]: Reached target Basic System<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">11192</span>]: Reached target Main User Target<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">11192</span>]: Startup finished <span style="color: #f92672;">in</span> <span style="color: #ae81ff;">373</span>ms<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">1</span>]: Started User Manager <span style="color: #66d9ef;">for</span> UID <span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> teller systemd[<span style="color: #ae81ff;">1</span>]: Started Session <span style="color: #ae81ff;">30</span> of user root<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">11121</span>]: Queued start job <span style="color: #66d9ef;">for</span> default target Main User Target<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">11121</span>]: Created slice User Application Slice<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">11121</span>]: Reached target Paths<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">11121</span>]: Reached target Timers<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">11121</span>]: Listening on GnuPG network certificate management daemon<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">11121</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache (access 
<span style="color: #66d9ef;">for</span> web browsers)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">11121</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache (restric
ted)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">11121</span>]: Listening on GnuPG cryptographic agent (ssh<span style="color: #f92672;">-</span>agent emulation)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">11121</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">11121</span>]: Reached target Sockets<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">11121</span>]: Reached target Basic System<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">11121</span>]: Reached target Main User Target<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">11121</span>]: Startup finished <span style="color: #f92672;">in</span> <span style="color: #ae81ff;">392</span>ms<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: Started User Manager <span style="color: #66d9ef;">for</span> UID <span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: Started Session <span style="color: #ae81ff;">29</span> of user root<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">11237</span>]: Queued start job <span style="color: #66d9ef;">for</span> default target Main User Target<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">11237</span>]: Created slice User Application Slice<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">11237</span>]: Reached target Paths<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">11237</span>]: Reached target Timers<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">11237</span>]: Listening on GnuPG network certificate management daemon<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">11237</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache (access fo
r web browsers)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">11237</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache (restricte
d)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">11237</span>]: Listening on GnuPG cryptographic agent (ssh<span style="color: #f92672;">-</span>agent emulation)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">11237</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">11237</span>]: Reached target Sockets<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">11237</span>]: Reached target Basic System<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">11237</span>]: Reached target Main User Target<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">11237</span>]: Startup finished <span style="color: #f92672;">in</span> <span style="color: #ae81ff;">385</span>ms<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">1</span>]: Started User Manager <span style="color: #66d9ef;">for</span> UID <span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> szilard systemd[<span style="color: #ae81ff;">1</span>]: Started Session <span style="color: #ae81ff;">30</span> of user root<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">11345</span>]: Queued start job <span style="color: #66d9ef;">for</span> default target Main User Target<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">11345</span>]: Created slice User Application Slice<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">11345</span>]: Reached target Paths<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">11345</span>]: Reached target Timers<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">11345</span>]: Listening on GnuPG network certificate management daemon<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">11345</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache (access <span style="color: #66d9ef;">for</span>
web browsers)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">11345</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache (restricted
)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">11345</span>]: Listening on GnuPG cryptographic agent (ssh<span style="color: #f92672;">-</span>agent emulation)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">11345</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">11345</span>]: Reached target Sockets<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">11345</span>]: Reached target Basic System<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">11345</span>]: Reached target Main User Target<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">11345</span>]: Startup finished <span style="color: #f92672;">in</span> <span style="color: #ae81ff;">375</span>ms<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">1</span>]: Started User Manager <span style="color: #66d9ef;">for</span> UID <span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> wigner systemd[<span style="color: #ae81ff;">1</span>]: Started Session <span style="color: #ae81ff;">30</span> of user root<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">11348</span>]: Queued start job <span style="color: #66d9ef;">for</span> default target Main User Target<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">11348</span>]: Created slice User Application Slice<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">11348</span>]: Reached target Paths<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">11348</span>]: Reached target Timers<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">11348</span>]: Listening on GnuPG network certificate management daemon<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">11348</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache (access <span style="color: #66d9ef;">for</span>
web browsers)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">11348</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache (restricted
)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">11348</span>]: Listening on GnuPG cryptographic agent (ssh<span style="color: #f92672;">-</span>agent emulation)<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">11348</span>]: Listening on GnuPG cryptographic agent <span style="color: #f92672;">and</span> passphrase cache<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">11348</span>]: Reached target Sockets<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">11348</span>]: Reached target Basic System<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">11348</span>]: Reached target Main User Target<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">11348</span>]: Startup finished <span style="color: #f92672;">in</span> <span style="color: #ae81ff;">400</span>ms<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">1</span>]: Started User Manager <span style="color: #66d9ef;">for</span> UID <span style="color: #ae81ff;">0.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">58</span> kemeny systemd[<span style="color: #ae81ff;">1</span>]: Started Session <span style="color: #ae81ff;">30</span> of user root<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> kemeny res[<span style="color: #ae81ff;">691</span>]: term_handler: Received signal <span style="color: #ae81ff;">15</span>, exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> kemeny lim[<span style="color: #ae81ff;">688</span>]: term_handler: Received signal <span style="color: #ae81ff;">15</span>, exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> kemeny sbatchd[<span style="color: #ae81ff;">693</span>]: Daemon on host <span style="color: #f92672;">&lt;</span>kemeny<span style="color: #f92672;">&gt;</span> received signal <span style="color: #f92672;">&lt;</span><span style="color: #ae81ff;">15</span><span style="color: #f92672;">&gt;</span>; exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> kemeny lsf_daemons[<span style="color: #ae81ff;">11434</span>]: Stopping the LSF subsystem 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> kemeny systemd[<span style="color: #ae81ff;">1</span>]: lsfd<span style="color: #f92672;">.</span>service: Succeeded<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> kemeny systemd[<span style="color: #ae81ff;">1</span>]: lsfd<span style="color: #f92672;">.</span>service: Consumed <span style="color: #ae81ff;">11</span>min <span style="color: #ae81ff;">56.744</span>s CPU time<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> szilard lim[<span style="color: #ae81ff;">685</span>]: term_handler: Received signal <span style="color: #ae81ff;">15</span>, exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> szilard res[<span style="color: #ae81ff;">687</span>]: term_handler: Received signal <span style="color: #ae81ff;">15</span>, exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> szilard sbatchd[<span style="color: #ae81ff;">689</span>]: Daemon on host <span style="color: #f92672;">&lt;</span>szilard<span style="color: #f92672;">&gt;</span> received signal <span style="color: #f92672;">&lt;</span><span style="color: #ae81ff;">15</span><span style="color: #f92672;">&gt;</span>; exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> vonkarman lim[<span style="color: #ae81ff;">686</span>]: term_handler: Received signal <span style="color: #ae81ff;">15</span>, exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> vonkarman sbatchd[<span style="color: #ae81ff;">690</span>]: Daemon on host <span style="color: #f92672;">&lt;</span>vonkarman<span style="color: #f92672;">&gt;</span> received signal <span style="color: #f92672;">&lt;</span><span style="color: #ae81ff;">15</span><span style="color: #f92672;">&gt;</span>; exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> vonkarman res[<span style="color: #ae81ff;">688</span>]: term_handler: Received signal <span style="color: #ae81ff;">15</span>, exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> teller lim[<span style="color: #ae81ff;">683</span>]: term_handler: Received signal <span style="color: #ae81ff;">15</span>, exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> teller res[<span style="color: #ae81ff;">689</span>]: term_handler: Received signal <span style="color: #ae81ff;">15</span>, exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> teller sbatchd[<span style="color: #ae81ff;">691</span>]: Daemon on host <span style="color: #f92672;">&lt;</span>teller<span style="color: #f92672;">&gt;</span> received signal <span style="color: #f92672;">&lt;</span><span style="color: #ae81ff;">15</span><span style="color: #f92672;">&gt;</span>; exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> teller lsf_daemons[<span style="color: #ae81ff;">11294</span>]: Stopping the LSF subsystem 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> wigner lim[<span style="color: #ae81ff;">719</span>]: term_handler: Received signal <span style="color: #ae81ff;">15</span>, exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> wigner res[<span style="color: #ae81ff;">722</span>]: term_handler: Received signal <span style="color: #ae81ff;">15</span>, exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> wigner sbatchd[<span style="color: #ae81ff;">724</span>]: Daemon on host <span style="color: #f92672;">&lt;</span>wigner<span style="color: #f92672;">&gt;</span> received signal <span style="color: #f92672;">&lt;</span><span style="color: #ae81ff;">15</span><span style="color: #f92672;">&gt;</span>; exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> wigner lsf_daemons[<span style="color: #ae81ff;">11438</span>]: Stopping the LSF subsystem 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> neumann res[<span style="color: #ae81ff;">713</span>]: term_handler: Received signal <span style="color: #ae81ff;">15</span>, exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> neumann sbatchd[<span style="color: #ae81ff;">715</span>]: Daemon on host <span style="color: #f92672;">&lt;</span>neumann<span style="color: #f92672;">&gt;</span> received signal <span style="color: #f92672;">&lt;</span><span style="color: #ae81ff;">15</span><span style="color: #f92672;">&gt;</span>; exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> neumann lim[<span style="color: #ae81ff;">711</span>]: term_handler: Received signal <span style="color: #ae81ff;">15</span>, exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> neumann lsf_daemons[<span style="color: #ae81ff;">11540</span>]: Stopping the LSF subsystem 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> neumann sshd[<span style="color: #ae81ff;">11436</span>]: Received disconnect <span style="color: #f92672;">from</span> <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">55144</span>:<span style="color: #ae81ff;">11</span>: disconnected by use
r 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> neumann sshd[<span style="color: #ae81ff;">11436</span>]: Disconnected <span style="color: #f92672;">from</span> user root <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">55144</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> szilard lsf_daemons[<span style="color: #ae81ff;">11331</span>]: Stopping the LSF subsystem 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> szilard sshd[<span style="color: #ae81ff;">11234</span>]: Received disconnect <span style="color: #f92672;">from</span> <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">52600</span>:<span style="color: #ae81ff;">11</span>: disconnected by use
r 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> szilard sshd[<span style="color: #ae81ff;">11234</span>]: Disconnected <span style="color: #f92672;">from</span> user root <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">52600</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> szilard sshd[<span style="color: #ae81ff;">11234</span>]: pam_unix(sshd:session): session closed <span style="color: #66d9ef;">for</span> user root 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> szilard res[<span style="color: #ae81ff;">11357</span>]: res<span style="color: #f92672;">/</span>get_hostInfo: ls_gethostinfo() failed<span style="color: #f92672;">.</span> Server host LIM configuration i
s <span style="color: #f92672;">not</span> ready yet<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> szilard systemd<span style="color: #f92672;">-</span>logind[<span style="color: #ae81ff;">382</span>]: Session <span style="color: #ae81ff;">30</span> logged out<span style="color: #f92672;">.</span> Waiting <span style="color: #66d9ef;">for</span> processes to exit<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> szilard res[<span style="color: #ae81ff;">11357</span>]: cg_load_hierarchies: Please use the LSF package <span style="color: #66d9ef;">with</span> higher glibc version 
to enable LSF cgroup v2 support<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> szilard systemd[<span style="color: #ae81ff;">1</span>]: lsfd<span style="color: #f92672;">.</span>service: Succeeded<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> szilard systemd[<span style="color: #ae81ff;">1</span>]: lsfd<span style="color: #f92672;">.</span>service: Consumed <span style="color: #ae81ff;">1</span>h <span style="color: #ae81ff;">17</span>min <span style="color: #ae81ff;">44.040</span>s CPU time<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> neumann sshd[<span style="color: #ae81ff;">11436</span>]: pam_unix(sshd:session): session closed <span style="color: #66d9ef;">for</span> user root 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> neumann systemd<span style="color: #f92672;">-</span>logind[<span style="color: #ae81ff;">398</span>]: Session <span style="color: #ae81ff;">30</span> logged out<span style="color: #f92672;">.</span> Waiting <span style="color: #66d9ef;">for</span> processes to exit<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> neumann res[<span style="color: #ae81ff;">11559</span>]: res<span style="color: #f92672;">/</span>get_hostInfo: ls_gethostinfo() failed<span style="color: #f92672;">.</span> Server host LIM configuration i
s <span style="color: #f92672;">not</span> ready yet<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> neumann res[<span style="color: #ae81ff;">11559</span>]: cg_load_hierarchies: Please use the LSF package <span style="color: #66d9ef;">with</span> higher glibc version 
to enable LSF cgroup v2 support<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> neumann systemd[<span style="color: #ae81ff;">1</span>]: lsfd<span style="color: #f92672;">.</span>service: Succeeded<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> neumann systemd[<span style="color: #ae81ff;">1</span>]: lsfd<span style="color: #f92672;">.</span>service: Consumed <span style="color: #ae81ff;">1</span>h <span style="color: #ae81ff;">17</span>min <span style="color: #ae81ff;">21.135</span>s CPU time<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> teller sshd[<span style="color: #ae81ff;">11189</span>]: Received disconnect <span style="color: #f92672;">from</span> <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">35310</span>:<span style="color: #ae81ff;">11</span>: disconnected by user 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> teller sshd[<span style="color: #ae81ff;">11189</span>]: Disconnected <span style="color: #f92672;">from</span> user root <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">35310</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> teller sshd[<span style="color: #ae81ff;">11189</span>]: pam_unix(sshd:session): session closed <span style="color: #66d9ef;">for</span> user root 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> teller systemd<span style="color: #f92672;">-</span>logind[<span style="color: #ae81ff;">382</span>]: Session <span style="color: #ae81ff;">30</span> logged out<span style="color: #f92672;">.</span> Waiting <span style="color: #66d9ef;">for</span> processes to exit<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> teller res[<span style="color: #ae81ff;">11307</span>]: res<span style="color: #f92672;">/</span>get_hostInfo: ls_gethostinfo() failed<span style="color: #f92672;">.</span> Server host LIM configuration <span style="color: #f92672;">is</span>
<span style="color: #f92672;">not</span> ready yet<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> teller res[<span style="color: #ae81ff;">11307</span>]: cg_load_hierarchies: Please use the LSF package <span style="color: #66d9ef;">with</span> higher glibc version t
o enable LSF cgroup v2 support<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> teller res[<span style="color: #ae81ff;">11307</span>]: term_handler: Received signal <span style="color: #ae81ff;">15</span>, exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> teller lim[<span style="color: #ae81ff;">11305</span>]: term_handler: Received signal <span style="color: #ae81ff;">15</span>, exiting 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> teller systemd[<span style="color: #ae81ff;">1</span>]: lsfd<span style="color: #f92672;">.</span>service: Succeeded<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> teller systemd[<span style="color: #ae81ff;">1</span>]: lsfd<span style="color: #f92672;">.</span>service: Consumed <span style="color: #ae81ff;">1</span>h <span style="color: #ae81ff;">17</span>min <span style="color: #ae81ff;">47.675</span>s CPU time<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> teller sbatchd[<span style="color: #ae81ff;">11309</span>]: cg_load_hierarchies: Please use the LSF package <span style="color: #66d9ef;">with</span> higher glibc versi
on to enable LSF cgroup v2 support<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> kemeny sshd[<span style="color: #ae81ff;">11345</span>]: Received disconnect <span style="color: #f92672;">from</span> <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">59830</span>:<span style="color: #ae81ff;">11</span>: disconnected by user 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> kemeny sshd[<span style="color: #ae81ff;">11345</span>]: Disconnected <span style="color: #f92672;">from</span> user root <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">59830</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> kemeny sshd[<span style="color: #ae81ff;">11345</span>]: pam_unix(sshd:session): session closed <span style="color: #66d9ef;">for</span> user root 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> kemeny systemd<span style="color: #f92672;">-</span>logind[<span style="color: #ae81ff;">386</span>]: Session <span style="color: #ae81ff;">30</span> logged out<span style="color: #f92672;">.</span> Waiting <span style="color: #66d9ef;">for</span> processes to exit<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> kemeny res[<span style="color: #ae81ff;">11467</span>]: res<span style="color: #f92672;">/</span>get_hostInfo: ls_gethostinfo() failed<span style="color: #f92672;">.</span> Server host LIM configuration <span style="color: #f92672;">is</span>
<span style="color: #f92672;">not</span> ready yet<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> kemeny res[<span style="color: #ae81ff;">11467</span>]: cg_load_hierarchies: Please use the LSF package <span style="color: #66d9ef;">with</span> higher glibc version t
o enable LSF cgroup v2 support<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> vonkarman lsf_daemons[<span style="color: #ae81ff;">11215</span>]: Stopping the LSF subsystem 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> vonkarman sshd[<span style="color: #ae81ff;">11118</span>]: Received disconnect <span style="color: #f92672;">from</span> <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">48654</span>:<span style="color: #ae81ff;">11</span>: disconnected by u
ser 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> vonkarman sshd[<span style="color: #ae81ff;">11118</span>]: Disconnected <span style="color: #f92672;">from</span> user root <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">48654</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> vonkarman sshd[<span style="color: #ae81ff;">11118</span>]: pam_unix(sshd:session): session closed <span style="color: #66d9ef;">for</span> user root 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> vonkarman systemd<span style="color: #f92672;">-</span>logind[<span style="color: #ae81ff;">382</span>]: Session <span style="color: #ae81ff;">29</span> logged out<span style="color: #f92672;">.</span> Waiting <span style="color: #66d9ef;">for</span> processes to exit<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> vonkarman res[<span style="color: #ae81ff;">11241</span>]: res<span style="color: #f92672;">/</span>get_hostInfo: ls_gethostinfo() failed<span style="color: #f92672;">.</span> Server host LIM configuration
<span style="color: #f92672;">is</span> <span style="color: #f92672;">not</span> ready yet<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> vonkarman res[<span style="color: #ae81ff;">11241</span>]: cg_load_hierarchies: Please use the LSF package <span style="color: #66d9ef;">with</span> higher glibc versio
n to enable LSF cgroup v2 support<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: lsfd<span style="color: #f92672;">.</span>service: Succeeded<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> vonkarman systemd[<span style="color: #ae81ff;">1</span>]: lsfd<span style="color: #f92672;">.</span>service: Consumed <span style="color: #ae81ff;">1</span>h <span style="color: #ae81ff;">17</span>min <span style="color: #ae81ff;">34.650</span>s CPU time<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> wigner sshd[<span style="color: #ae81ff;">11342</span>]: Received disconnect <span style="color: #f92672;">from</span> <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">60388</span>:<span style="color: #ae81ff;">11</span>: disconnected by user 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> wigner sshd[<span style="color: #ae81ff;">11342</span>]: Disconnected <span style="color: #f92672;">from</span> user root <span style="color: #ae81ff;">192.168.1.172</span> port <span style="color: #ae81ff;">60388</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> wigner sshd[<span style="color: #ae81ff;">11342</span>]: pam_unix(sshd:session): session closed <span style="color: #66d9ef;">for</span> user root 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> wigner res[<span style="color: #ae81ff;">11464</span>]: res<span style="color: #f92672;">/</span>get_hostInfo: ls_gethostinfo() failed<span style="color: #f92672;">.</span> Server host LIM configuration <span style="color: #f92672;">is</span>
<span style="color: #f92672;">not</span> ready yet<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> wigner systemd<span style="color: #f92672;">-</span>logind[<span style="color: #ae81ff;">383</span>]: Session <span style="color: #ae81ff;">30</span> logged out<span style="color: #f92672;">.</span> Waiting <span style="color: #66d9ef;">for</span> processes to exit<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> wigner res[<span style="color: #ae81ff;">11464</span>]: cg_load_hierarchies: Please use the LSF package <span style="color: #66d9ef;">with</span> higher glibc version t
o enable LSF cgroup v2 support<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> wigner systemd[<span style="color: #ae81ff;">1</span>]: lsfd<span style="color: #f92672;">.</span>service: Succeeded<span style="color: #f92672;">.</span> 
Apr  <span style="color: #ae81ff;">3</span> <span style="color: #ae81ff;">21</span>:<span style="color: #ae81ff;">44</span>:<span style="color: #ae81ff;">59</span> wigner systemd[<span style="color: #ae81ff;">1</span>]: lsfd<span style="color: #f92672;">.</span>service: Consumed <span style="color: #ae81ff;">1</span>h <span style="color: #ae81ff;">17</span>min <span style="color: #ae81ff;">44.610</span>s CPU time<span style="color: #f92672;">.</span>
</code></pre></div>

</details>

<br />
<!-- raw HTML omitted -->
As expected, we observed that LSF log messages are written to the fromnet file. And importantly each entry contains the hostname, so that we can identify the origin of the message.</p>

<p><strong>Conclusion</strong></p>

<p>What started out as a chat about logging, grew into an idea of a blog, for which I am thankful for the collaboration of Peter. We’ve illustrated an example here of how to setup centralized logging on a Turing Pi system with syslog-ng to collect system and LSF logs.</p>

<p>Of course collecting log messages centrally is just the start of a journey. It is an important step as it allows for significantly easier debugging and troubleshooting. You can store logs to databases for easier search. And once you better understand which log messages are important, you can even potentially parse those and generate alersts from them or dashboards. All of these help you to make sure that your HPC system runs smoothly and with minimal downtime. For me this was a learning experience and I&rsquo;ll be looking how I can implement more broadly centralized logging in my home network.</p>]]></content><author><name>Ramblings of a supercomputing enthusiast.</name></author><category term="gaborsamu" /><summary type="html"><![CDATA[Logs are one of those indispensable things in IT when things go wrong. Having worked in technical support for software products in a past life, I’ve likely looked at hundreds (or more) logs over the years, helping to identify issues. So, I really appreciate the importance of logs, but I can honestly say that I never really thought about a logging strategy for the systems on my home network - primarily those running Linux.]]></summary></entry><entry><title type="html">4 turning and 7 chilling</title><link href="https://hpc.social/personal-blog/2024/4-turning-and-7-chilling/" rel="alternate" type="text/html" title="4 turning and 7 chilling" /><published>2024-03-21T18:09:30-06:00</published><updated>2024-03-21T18:09:30-06:00</updated><id>https://hpc.social/personal-blog/2024/4-turning-and-7-chilling</id><content type="html" xml:base="https://hpc.social/personal-blog/2024/4-turning-and-7-chilling/"><![CDATA[<p><strong>How to keep your cool</strong></p>

<p>I&rsquo;m back again and revisiting the Turing Pi V1 board. This time the focus isn&rsquo;t on software, but rather cooling. In my previous write-up <a href="https://www.gaborsamu.com/blog/turingpi_hpl/">Pi in the sky? A compute cluster in mini ITX form factor</a>, I used a USB fan I had at hand to keep the temperature of the compute modules in check during the Linpack runs. Although the fan was a seriously sketchy one, it did the job, and prevented throttling of the compute modules under high load, albeit with much noise. Clearly not content with this mediocre setup I pondered what other solutions I could quickly come up with.</p>

<p>Looking in my electronics spare parts bin, I came across 2 spare Noctua 40x40x20mm fans, part number <em>NF-A4x20 PWM</em>. I found that these fans fit well on the Turing Pi board perpendicular to the compute modules. I measured that for full cooling coverage of the compute modules I&rsquo;d need 4 such fans, side by side. However before investing in two more fans, I needed to confirm that they had enough oomph (yes that&rsquo;s a technical term) to keep things cool.</p>

<p>So my plan was to first test two fans cooling half of the modules. However, to test these fans out, I first needed to get a hold of some USB to 3/4-pin fan power adapter cables. Once I had these adapters, I used a thick elastic band to bind the 2 fans together, and connected them to the USB for power using the adapters and give them a whirl - pun intended. Of course I fell back on Linpack to get the compute modules busy.</p>

<p>The results were promising enough that I immediately ordered two more fans and adapters to complete the setup which is shown in the photo below. A thick elastic band was used again to fasten the remaining 2 fans together. Of course, the setup will be made more robust to ensure that fans will stay in place. And I&rsquo;ll do a bit of work on cable management.</p>

<figure><img src="https://www.gaborsamu.com/images/turingpi_noctua.jpg" />
</figure>

<p><strong>Totally chill</strong></p>

<p>The view of the dashboard (see below) speaks for itself. Under heavy load running Linpack, the compute modules don&rsquo;t exceed 50C. This is about 10 degrees cooler than what I saw with that USB desk fan. So I&rsquo;d consider that a result. Plus the Noctua fans are so much quieter and will be much more durable in the long run.</p>

<figure><img src="https://www.gaborsamu.com/images/turingpi_dashboard_noctua.png" />
</figure>

<p><strong>Conclusion</strong></p>

<p>So where does the title of my blog come from? It&rsquo;s inspired by the slogan &ldquo;6 turning and 4 burning&rdquo; of the B-36 Peacemaker strategic bomber! You can see the B-36 in all it&rsquo;s glory in this short <a href="https://youtu.be/9kQ2X84PRvY?si=q9FZmWFavXHbPcE8">excerpt</a> from the 1955 film <em>Strategic Air Command</em> starring Jimmy Stewart. You could say I have eclectic taste in films. Plus the B-36 has always fascinated me with it&rsquo;s combination of jet and piston engines. As for this blog, 4 turning obviously refers to the 4 Noctua fans turning. And 7 chilling refers to the 7 CM3 modules that now keep their cool under pressure. With a more suitable cooling solution in place, especially as the warmer days arrive, I can now refocus my attention to the software side of things. And as always, stay cool!</p>]]></content><author><name>Ramblings of a supercomputing enthusiast.</name></author><category term="gaborsamu" /><summary type="html"><![CDATA[How to keep your cool]]></summary></entry><entry><title type="html">Advanced LSF resource connector configuration on IBM Cloud - part II</title><link href="https://hpc.social/personal-blog/2024/advanced-lsf-resource-connector-configuration-on-ibm-cloud-part-ii/" rel="alternate" type="text/html" title="Advanced LSF resource connector configuration on IBM Cloud - part II" /><published>2024-03-19T20:40:52-06:00</published><updated>2024-03-19T20:40:52-06:00</updated><id>https://hpc.social/personal-blog/2024/advanced-lsf-resource-connector-configuration-on-ibm-cloud-part-ii</id><content type="html" xml:base="https://hpc.social/personal-blog/2024/advanced-lsf-resource-connector-configuration-on-ibm-cloud-part-ii/"><![CDATA[<p><strong>Overview</strong></p>

<p>Back in November 2023 I authored a blog titled <a href="https://www.gaborsamu.com/blog/lsf_rc_ibmcloud_part1/">Advanced LSF resource connector configuration on IBM Cloud - part I</a>. As I signed off in that post, I mentioned that there would be a follow-on post to cover some more advanced configuration topics on LSF resource connector.  And that’s the topic of this article today.</p>

<p>To recap, the <a href="https://www.ibm.com/products/hpc-workload-management">IBM LSF</a> resource connector functionality enables LSF clusters to dynamically spin-up cloud instances from supported resource providers in the cloud based on workload demand, and to destroy those instances when no longer required.</p>

<p>The LSF resource connector intelligently choses the most appropriate cloud instance type for a given job from the templates that have been defined by the administrator. This is done automatically and is transparent from the end user perspective. What if the job requires to run on a very specific instance type? In this post we’ll show you how this is feasible by defining an LSF string resource, along with the necessary configuration of LSF resource connector and a supporting script. This will allow users to submit jobs to LSF with a resource requirement string specifying the cloud instance type desired.</p>

<p>For the example below, we’ll be using an IBM LSF environment which has been deployed on IBM Cloud using the extensive deployment automation that is available via the IBM Cloud catalog for <a href="https://cloud.ibm.com/catalog/content/terraform-1623200063-71606cab-c6e1-4f95-a47a-2ce541dcbed8-global">IBM LSF</a>. Using this automation, you can deploy an LSF cluster in about 10 minutes time including the creation of the virtual private cloud (VPC), networking, security, bastion node, NFS server node, LSF management nodes and optionally LSF Application Center.</p>

<p><strong>What is user_data.sh?</strong></p>

<p>We’ll start with a brief description of the LSF resource connector <em>user_data.sh</em> script. This script will play an important part in the configuration of the compute servers as we’ll see. The <em>user_data.sh</em> script is used to start-up the LSF daemons on the compute instances launched by LSF resource connector. It also crucially enables admins to configure settings, including LSF settings, which is what we’ll be using the in example below.</p>

<p><strong>Specifying the cloud instance type</strong></p>

<p>By default, the LSF resource connector intelligently chooses the cloud instance profile type based upon the job submission parameters. For example, it considers things like the number of processor requested, the memory requested just to name of few. And it will startup the compute instance or instances from the available configured templates which most closely matches the job requirement.</p>

<p>What if you need to request a very specific compute instance type for the work that you’ve submitted based upon other, site-specific needs?  Here we will show exactly how you can achieve this.</p>

<p><strong>Let the configuration begin!</strong></p>

<p>We begin with updating the LSF configuration to create a new string resource called profile. In the configuration file <em>$LSF_ENVDIR/lsf.shared</em>, define the new string resource profile in the <em>Resource</em> section.</p>

<div class="highlight"><pre><code class="language-plaintext">….
….
Begin Resource
RESOURCENAME	TYPE	    INTERVAL	INCREASING	DESCRIPTION        # Keywords
profile 	  String   ()       ()             (IBM Cloud Gen2 profile type)
End Resource
….
….</code></pre></div>

<p>To make the change take effect, reconfigure the LSF cluster with the LSF command <em>lsadmin reconfig</em>.</p>

<div class="highlight"><pre><code class="language-plaintext"># lsadmin reconfig -v

Checking configuration files ...


EGO 3.4.0 build 1599999, Jan 04 2023
Copyright International Business Machines Corp. 1992, 2016.
US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

  binary type: linux3.10-glibc2.17-x86_64
Reading configuration from /opt/ibm/lsf/conf/lsf.conf
Mar 13 16:57:25 2024 1478621 6 3.4.0 Lim starting...
Mar 13 16:57:25 2024 1478621 6 3.4.0 LIM is running in advanced workload execution mode.
Mar 13 16:57:25 2024 1478621 6 3.4.0 Master LIM is not running in EGO_DISABLE_UNRESOLVABLE_HOST mode.
Mar 13 16:57:25 2024 1478621 5 3.4.0 /opt/ibm/lsf/10.1/linux3.10-glibc2.17-x86_64/etc/lim -C
Mar 13 16:57:26 2024 1478621 6 3.4.0 LIM is running as IBM Spectrum LSF Standard Edition.
Mar 13 16:57:26 2024 1478621 6 3.4.0 reCheckClass: numhosts 1 so reset exchIntvl to 15.00
Mar 13 16:57:26 2024 1478621 6 3.4.0 Checking Done.
---------------------------------------------------------
No errors found.

Restart only the master candidate hosts? [y/n] n
Do you really want to restart LIMs on all hosts? [y/n] y
Restart LIM on &lt;icgen2host-AAA-BBB-CCC-DDD&gt; ...... done</code></pre></div>

<p>Now, check that the profile variable has been setup properly. This can be done using the LSF <em>lsinfo</em> command.</p>

<div class="highlight"><pre><code class="language-plaintext"># lsinfo |grep profile
profile        String   N/A   IBM Cloud Gen2 profile type</code></pre></div>

<p>Now we’re ready to update the LSF resource connector templates to add the <em>profile</em> string variable. For this example, there are two templates defined for IBM Cloud profile types <em>bx2-4x16</em> and <em>mx2-16x128</em> in the configuration file <em>$LSF_ENVDIR/resource_connector/ibmcloudgen2/conf</em>. Within the template definition, the <em>profile</em> string variable is defined, and a value is set for each respective profile type. Note that the “-“ character cannot be used in the LSF string variables, and in place of that the “_” character is used. The specified profile string for each respective template is defined and used as the selection criteria by LSF resource connector. Then the <em>userData</em> field is used to ensure that this value gets passed and set in the compute instance that is started by the LSF resource connector when the <em>user_data.sh</em> script is run.</p>

<table>
<thead>
<tr>
<th style="text-align: left;">Instance type</th>
<th>LSF <em>profile</em> variable string value</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;">bx2-4x16</td>
<td>bx2_4x16</td>
</tr>
<tr>
<td style="text-align: left;">mx2-16x128</td>
<td>mx2_16x128</td>
</tr>
</tbody>
</table>
<hr />

<p><strong><em>ibmcloudgen2_templates.json</em>, with <em>profile</em> configured (obfuscated)</strong></p>

<div class="highlight"><pre><code class="language-plaintext">{
    "templates": [
        {
            "templateId": "Template-1",
            "maxNumber": 2,
            "attributes": {
                "type": ["String", "X86_64"],
                "ncores": ["Numeric", "2"],
                "ncpus": ["Numeric", "4"],
                "mem": ["Numeric", "16384"],
                "icgen2host": ["Boolean", "1"], 
                "profile":["String","bx2_4x16"]
            },
            "imageId": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "subnetId": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "vpcId": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "vmType": "bx2-4x16",
            "userData":"profile=bx2_4x16",
            "securityGroupIds": ["aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff"],
            "resourceGroupId": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
            "sshkey_id": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "priority": "10", 
            "region": "us-east",
            "zone": "us-east-1" 
        },

       {
            "templateId": "Template-2",
            "maxNumber": 2,
            "attributes": {
                "type": ["String", "X86_64"],
                "ncores": ["Numeric", "8"],
                "ncpus": ["Numeric", "16"],
                "mem": ["Numeric", "131072"],
                "icgen2host": ["Boolean", "1"],
		       "profile":["String","mx2_16x128"]
            },
            "imageId": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "subnetId": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "vpcId": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "vmType": "mx2-16x128",
            "userData":"profile=mx2_16x128",
            "securityGroupIds": ["aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff"],
            "resourceGroupId": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
            "sshkey_id": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "priority": "5",
            "region": "us-east",
            "zone": "us-east-1"
        }

    ]
}</code></pre></div>

<p>Now the <em>user_data.sh</em> script is required to be updated in order to set the value of the <em>profile</em> variable in the LSF resourcemap based upon what was requested by the user. This will be added to the LSF configuration during the bootup of the dynamic cloud instances. For more information about the LSF resourcemap read <a href="https://www.ibm.com/docs/en/spectrum-lsf/10.1.0?topic=resources-configure-lsfclustercluster-name-resourcemap-section">here</a>.</p>

<p><strong>user_data.sh script portion</strong></p>

<div class="highlight"><pre><code class="language-plaintext">….
….
# Set value of profile variable in the LSF resourcemap. This is based
# on the profile value requested at job submission time. 
if [ -n "$profile" ]; then
sed -i "s/\(LSF_LOCAL_RESOURCES=.*\)\"/\1 [resourcemap $profile*profile]\"/" $LSF_CONF_FILE
echo "update LSF_LOCAL_RESOURCES in $LSF_CONF_FILE successfully, add [resourcemap ${profile}*profile]" &gt;&gt; $logfile
else
echo "profile doesn't exist in environment variable" &gt;&gt; $logfile
fi
….
….</code></pre></div>

<p>With all of the configuration in place, it’s now time to test things out. Initially, a stress job is submitted requesting 4 cores is submitted without requesting a specific compute profile. In this case, the LSF resource connector will chose the most appropriate instance type from the configured templates. In our configuration the templates for instance types <em>bx2-4x16</em> and <em>mx2-16x128</em> are configured. Given this, we expect the LSF resource connector to startup a <em>bx2-4x16</em> instance to satisfy the requirements for this example job.</p>

<div class="highlight"><pre><code class="language-plaintext">$ bsub -n 4 -q normal -o /mnt/data/%J.out /usr/bin/stress --cpu 4 --vm-bytes 8192MB --timeout 60s 
Job &lt;3811&gt; is submitted to queue &lt;normal&gt;.</code></pre></div>

<p>After a few moments, we see that a new host, <em>icgen2host-XXX-YYY-ZZZ-44</em> joins the LSF cluster and the job enters run state. We note that this is a host with the characteristics of 4 cores, and 16GB RAM, which matches the type <em>bx2-4x16</em>.</p>

<div class="highlight"><pre><code class="language-plaintext">$ lsload -w
HOST_NAME               status  r15s   r1m  r15m   ut    pg  ls    it   tmp   swp   mem
icgen2host-XXX-YYY-ZZZ-37      ok   0.4   0.1   0.1   2%   0.0   1    16   40G    0
icgen2host-XXX-YYY-ZZZ-44      ok   0.9   0.2   0.1  19%   0.0   0     0   88G    0M 14.9G

$ lshosts -w
HOST_NAME                       type       model  cpuf ncpus maxmem maxswp server RESOURCES
icgen2host-XXX-YYY-ZZZ-37        X86_64    Intel_E5  12.5     4  15.4G      -    Yes (mg docker ParaView)
icgen2host-XXX-YYY-ZZZ-44		 X86_64    Intel_E5  12.5     4  15.5G      -    Dyn (icgen2host docker)

$ bjobs -l -r

Job &lt;3811&gt;, User &lt;lsfadmin&gt;, Project &lt;default&gt;, Status &lt;RUN&gt;, Queue &lt;normal&gt;, C
                     ommand &lt;/usr/bin/stress --cpu 4 --vm-bytes 8192MB --timeou
                     t 60s&gt;, Share group charged &lt;/lsfadmin&gt;
Mon Mar 18 19:42:22: Submitted from host &lt;icgen2host-XXX-YYY-ZZZ-37&gt;, CWD &lt;$HOME&gt;,
                      Output File &lt;/mnt/data/3811.out&gt;, 4 Task(s);
Mon Mar 18 19:45:11: Started 4 Task(s) on Host(s) &lt;icgen2host-XXX-YYY-ZZZ-44&gt; &lt;icg
                     en2host-XXX-YYY-ZZZ-44&gt; &lt;icgen2host-XXX-YYY-ZZZ-44&gt; &lt;icgen2host-
                     XXX-YYY-ZZZ-44&gt;, Allocated 4 Slot(s) on Host(s) &lt;icgen2host-X
                     XX-YYY-ZZZ-44&gt; &lt;icgen2host-XXX-YYY-ZZZ-44&gt; &lt;icgen2host-XXX-YYY-ZZZ-
                     44&gt; &lt;icgen2host-XXX-YYY-ZZZ-44&gt;, Execution Home &lt;/home/lsfadm
                     in&gt;, Execution CWD &lt;/home/lsfadmin&gt;;
Mon Mar 18 19:45:47: Resource usage collected.
                     The CPU time used is 142 seconds.
                     MEM: 3 Mbytes;  SWAP: 0 Mbytes;  NTHREAD: 8
                     PGID: 2169;  PIDs: 2169 2170 2172 2173 2174 2175 2176 


 MEMORY USAGE:
 MAX MEM: 3 Mbytes;  AVG MEM: 3 Mbytes; MEM Efficiency: 0.00%

 CPU USAGE:
 CPU PEAK: 0.00 ;  CPU PEAK DURATION: 0 second(s)
 CPU AVERAGE EFFICIENCY: 0.00% ;  CPU PEAK EFFICIENCY: 0.00%

 SCHEDULING PARAMETERS:
           r15s   r1m  r15m   ut      pg    io   ls    it    tmp    swp    mem
 loadSched   -     -     -     -       -     -    -     -     -      -      -  
 loadStop    -     -     -     -       -     -    -     -     -      -      -  

 RESOURCE REQUIREMENT DETAILS:
 Combined: select[type == local] order[r15s:pg]
 Effective: select[type == local] order[r15s:pg] 

$ bhist -l 3811

Job &lt;3811&gt;, User &lt;lsfadmin&gt;, Project &lt;default&gt;, Command &lt;/usr/bin/stress --cpu 
                     4 --vm-bytes 8192MB --timeout 60s&gt;
Mon Mar 18 19:42:22: Submitted from host &lt;icgen2host-XXX-YYY-ZZZ-37&gt;, to Queue &lt;no
                     rmal&gt;, CWD &lt;$HOME&gt;, Output File &lt;/mnt/data/%J.out&gt;, 4 Task
                     (s);
Mon Mar 18 19:45:11: Dispatched 4 Task(s) on Host(s) &lt;icgen2host-XXX-YYY-ZZZ-44&gt; &lt;
                     icgen2host-XXX-YYY-ZZZ-44&gt; &lt;icgen2host-XXX-YYY-ZZZ-44&gt; &lt;icgen2ho
                     st-XXX-YYY-ZZZ-44&gt;, Allocated 4 Slot(s) on Host(s) &lt;icgen2hos
                     t-XXX-YYY-ZZZ-44&gt; &lt;icgen2host-XXX-YYY-ZZZ-44&gt; &lt;icgen2host-XXX-YYY
                     -ZZZ-44&gt; &lt;icgen2host-XXX-YYY-ZZZ-44&gt;, Effective RES_REQ &lt;select
                     [type == local] order[r15s:pg] &gt;;
Mon Mar 18 19:45:11: Starting (Pid 2169);
Mon Mar 18 19:45:11: Running with execution home &lt;/home/lsfadmin&gt;, Execution CW
                     D &lt;/home/lsfadmin&gt;, Execution Pid &lt;2169&gt;;
Mon Mar 18 19:46:11: Done successfully. The CPU time used is 239.3 seconds;
Mon Mar 18 19:46:12: Post job process done successfully;


MEMORY USAGE:
MAX MEM: 3 Mbytes;  AVG MEM: 2 Mbytes; MEM Efficiency: 0.00%

CPU USAGE:
CPU PEAK: 3.98 ;  CPU PEAK DURATION: 60 second(s)
CPU AVERAGE EFFICIENCY: 99.58% ;  CPU PEAK EFFICIENCY: 99.58%

Summary of time in seconds spent in various states by  Mon Mar 18 19:46:12
  PEND     PSUSP    RUN      USUSP    SSUSP    UNKWN    TOTAL
  169      0        60       0        0        0        229         </code></pre></div>

<p>Next, let’s submit the same job, but explicitly requesting the profile type <em>mx2-16x128</em>. To do this, we add the resource requirement requesting profile to be equal to <em>mx2_16x128</em> as follows:</p>

<div class="highlight"><pre><code class="language-plaintext">$ bsub -q normal -R "profile==mx2_16x128" -n 4 -o /mnt/data/%J.out /usr/bin/stress --cpu 4 --vm-bytes 8192MB --timeout 60s 
Job &lt;3813&gt; is submitted to queue &lt;normal&gt;.</code></pre></div>

<p>After a few moments, a dynamic host with 16 CPUs and 128 GB RAM joins the cluster, which corresponds to instance type <em>mx2-16x128</em>.</p>

<div class="highlight"><pre><code class="language-plaintext">$ lshosts -w
HOST_NAME                       type       model  cpuf ncpus maxmem maxswp server RESOURCES
icgen2host-XXX-YYY-ZZZ-37        X86_64    Intel_E5  12.5     4  15.4G      -    Yes (mg docker ParaView)
icgen2host-XXX-YYY-ZZZ-46        X86_64    Intel_E5  12.5    16 125.7G      -    Dyn (icgen2host docker)

$ lsload -w
HOST_NAME               status  r15s   r1m  r15m   ut    pg  ls    it   tmp   swp   mem
icgen2host-XXX-YYY-ZZZ-37      ok   0.0   0.1   0.1   3%   0.0   1     2   40G    0M 12.2G
icgen2host-XXX-YYY-ZZZ-46      ok   1.6   0.4   0.1  17%   0.0   0     0   88G    0M 123.8G

$ bjobs -l -r

Job &lt;3813&gt;, User &lt;lsfadmin&gt;, Project &lt;default&gt;, Status &lt;RUN&gt;, Queue &lt;normal&gt;, C
                     ommand &lt;/usr/bin/stress --cpu 4 --vm-bytes 8192MB --timeou
                     t 60s&gt;, Share group charged &lt;/lsfadmin&gt;
Mon Mar 18 20:27:52: Submitted from host &lt;icgen2host-XXX-YYY-ZZZ-37&gt;, CWD &lt;$HOME&gt;,
                      Output File &lt;/mnt/data/3813.out&gt;, 4 Task(s), Requested Re
                     sources &lt;profile==mx2_16x128&gt;;
Mon Mar 18 20:30:01: Started 4 Task(s) on Host(s) &lt;icgen2host-XXX-YYY-ZZZ-46&gt; &lt;icg
                     en2host-XXX-YYY-ZZZ-46&gt; &lt;icgen2host-XXX-YYY-ZZZ-46&gt; &lt;icgen2host-
                     XXX-YYY-ZZZ-46&gt;, Allocated 4 Slot(s) on Host(s) &lt;icgen2host                     -XXX-YYY-ZZZ-46&gt; &lt;icgen2host-XXX-YYY-ZZZ-46&gt; &lt;icgen2host-XXX-Y                     YY-ZZZ-46&gt; &lt;icgen2host-XXX-YYY-ZZZ-46&gt;, Execution Home &lt;/home/lsfadm
                     in&gt;, Execution CWD &lt;/home/lsfadmin&gt;;

 MEMORY USAGE:
 MEM Efficiency: 0.00%

 CPU USAGE:
 CPU PEAK: 0.00 ;  CPU PEAK DURATION: 0 second(s)
 CPU AVERAGE EFFICIENCY: 0.00% ;  CPU PEAK EFFICIENCY: 0.00%

 SCHEDULING PARAMETERS:
           r15s   r1m  r15m   ut      pg    io   ls    it    tmp    swp    mem
 loadSched   -     -     -     -       -     -    -     -     -      -      -  
 loadStop    -     -     -     -       -     -    -     -     -      -      -  

 RESOURCE REQUIREMENT DETAILS:
 Combined: select[(profile == mx2_16x128 ) &amp;&amp; (type == any)] order[r15s:pg]
 Effective: select[(profile == mx2_16x128 ) &amp;&amp; (type == any)] order[r15s:pg] </code></pre></div>

<p>Additionally, using the LSF lshosts command with the -s option, we can view information about the resources in the environment. We see in particular the profile resource is set to the value <em>mx2_16x128</em> for the dynamic host <em>icgen2host-XXX-YYY-ZZZ-46</em>.</p>

<div class="highlight"><pre><code class="language-plaintext">$ lshosts -s
RESOURCE                                VALUE       LOCATION
rc_account                            default       icgen2host-XXX-YYY-ZZZ-46 
profile                            mx2_16x128       icgen2host-XXX-YYY-ZZZ-46 
instanceID               0757_95e39240-22e7-4734-8fd5-9988ab247801  
                                                    icgen2host-XXX-YYY-ZZZ-46 </code></pre></div>

<p>We have shown the great flexibility that LSF provides for configuring the resource connector capability. Generally speaking, LSF provides many open interfaces which allow site specific configuration or customization to be realized. In the next blog in this series, we’ll take a closer look at running Docker jobs under LSF on dynamic cloud resources.</p>]]></content><author><name>Ramblings of a supercomputing enthusiast.</name></author><category term="gaborsamu" /><summary type="html"><![CDATA[Overview]]></summary></entry><entry><title type="html">Pi in the sky? A compute cluster in mini ITX form factor</title><link href="https://hpc.social/personal-blog/2024/pi-in-the-sky-a-compute-cluster-in-mini-itx-form-factor/" rel="alternate" type="text/html" title="Pi in the sky? A compute cluster in mini ITX form factor" /><published>2024-03-04T17:07:46-07:00</published><updated>2024-03-04T17:07:46-07:00</updated><id>https://hpc.social/personal-blog/2024/pi-in-the-sky-a-compute-cluster-in-mini-itx-form-factor</id><content type="html" xml:base="https://hpc.social/personal-blog/2024/pi-in-the-sky-a-compute-cluster-in-mini-itx-form-factor/"><![CDATA[<p><strong>Overview</strong></p>

<p>It&rsquo;s taken me a while to get the wheels off the ground in 2024 in terms of blogging. This blog idea has been in the works actually for some time. Back in 2021, I wrote a blog titled <a href="https://www.gaborsamu.com/blog/new_novena/">Late to the party and a few bits short</a>. This was a tongue in cheek title for a blog on the Novena Desktop System, which is based on a 32-bit processor, hence a few bits short. And late to the party referring to the fact that I was very late to purchase a second-hand Novena system.</p>

<p>This blog is similar in that it&rsquo;s about the original Turing Pi V1 system which was released back in 2021 when the Turing Pi V2 launch was imminent. The Turing Pi V1 is a 7 node cluster in a mini-ITX form factor. It&rsquo;s based on the Raspberry Pi CM3(+) modules. This was really an impulse purchase the dark days of COVID. And as I found out, getting a hold of RPi CM3&rsquo;s was much harder than expected. As luck would have it, I even eventually found a source via an online marketplace here in Southern Ontario that was not charging and arm and a leg for them. I purchased a total of 7 CM3+ modules with no onboard storage and relied upon SD cards for storage. As (bad) luck would have it, I ended up having to purchase a CM3 with onboard storage because one of the SD card slots is defecting on the board; the spring mechanism doesn&rsquo;t work properly. And as we&rsquo;ll see later on, this also had an unusual side effect when running Linpack.</p>

<p>I&rsquo;ve had the fully populated system for about 6 months now. And although the Turing Pi V1 is old news at this stage, I still wanted to write a bit about my experience with it. And of course, because it&rsquo;s a cluster, I definitely wanted to put it through it&rsquo;s paces running Linpack.</p>

<p>The official Turing Pi V1 <a href="https://docs.turingpi.com/docs/turing-pi1-intro-specs">documentation</a> was my goto for the system setup. The cluster was installed with the latest (at the time) Raspberry Pi OS (<em>2023-02-21-raspios-bullseye-arm64-lite.img</em>) based on Debian 11 (Bullseye).</p>

<p>The following additional software packages were installed/compiled. Note that the head node of the cluster acts as an NFS server for the remaining cluster nodes (<em>/opt</em>).</p>

<ul>
<li>Arm Optimizing Compilers V22.0.2 (for Ubuntu-20.04)</li>
<li>OpenMPI V4.1.5 (compiled with LSF support)</li>
<li>IBM Spectrum LSF v10.1.0.13</li>
<li>HPL V2.3 (compiled with Arm Optimizing Compilers)</li>
</ul>
<p>Here is the output of the LSF lshosts command. We see 6 CM3+ systems detected, and one CM3. Note that this required additional LSF configuration.</p>

<div class="highlight"><pre><code class="language-plaintext">lsfadmin@turingpi:/opt/HPC/hpl-2.3 $ lshosts -w
HOST_NAME                       type       model  cpuf ncpus maxmem maxswp server RESOURCES
turingpi                  LINUX_ARM64     CM3plus   6.0     4   910M   100M    Yes (mg)
neumann                   LINUX_ARM64     CM3plus   6.0     4   910M   100M    Yes ()
teller                    LINUX_ARM64     CM3plus   6.0     4   910M   100M    Yes ()
szilard                   LINUX_ARM64     CM3plus   6.0     4   910M   100M    Yes ()
wigner                    LINUX_ARM64     CM3plus   6.0     4   910M   100M    Yes ()
kemeny                    LINUX_ARM64         CM3   5.0     4   910M   100M    Yes ()
vonkarman                 LINUX_ARM64     CM3plus   6.0     4   910M   100M    Yes ()</code></pre></div>

<p>Those with a keen eye will note that the majority of the cluster nodes are named after Hungarian scient
ists:</p>

<ul>
<li><em>Neumann János</em> (John von Neumann)</li>
<li><em>Teller Ede</em> (Edward Teller)</li>
<li><em>Szilárd Leó</em> (Leo Szilard)</li>
<li><em>Wigner Jenő</em> (Eugene Wigner)</li>
<li><em>Kemény János</em> (John Kemeny)</li>
<li><em>Kármán Tódor</em> (Theodore von Karman)</li>
</ul>
<p>The odd one out here is of course turingpi, which is the name of the head node of the cluster, and is o
f course named after Alan Turing. But I digress.</p>

<p>For completeness, HPL V2.3 was compiled using the Arm Optimizing Compilers with the follwing flags:</p>

<ul>
<li>CCFLAGS      = $(HPL_DEFS) -Ofast -mcpu=native -fomit-frame-pointer</li>
<li>LINKER       = armclang -armpl -lamath -lm -Ofast -mcpu=native -fomit-frame-pointer</li>
</ul>
<p>For the first HPL run, we submit the job requesting a total of 24 cores. There are a total of 28 cores
in the cluster, but we&rsquo;ve isolated the head node of the cluster as it&rsquo;s the NFS server for the environm
ent. We see that the head node turingpi shows a closed status here, meaning that it won&rsquo;t accept any jo
bs from LSF.</p>

<div class="highlight"><pre><code class="language-plaintext">lsfadmin@turingpi:/opt/HPC/hpl-2.3/bin/cm3_3 $ bhosts
HOST_NAME          STATUS       JL/U    MAX  NJOBS    RUN  SSUSP  USUSP    RSV 
kemeny             ok              -      4      0      0      0      0      0
neumann            ok              -      4      0      0      0      0      0
szilard            ok              -      4      0      0      0      0      0
teller             ok              -      4      0      0      0      0      0
turingpi           closed          -      4      0      0      0      0      0
vonkarman          ok              -      4      0      0      0      0      0
wigner             ok              -      4      0      0      0      0      0</code></pre></div>

<p><strong>Turing up the heat - literally</strong></p>

<p>Submit HPL using the LSF <em>bsub</em> command requesting 24 cores in the cluser with core affinity specified.</p>

<div class="highlight"><pre><code class="language-plaintext">lsfadmin@turingpi:/opt/HPC/hpl-2.3/bin/cm3_3 $ bsub -n 24 -R "affinity[core(1)]" -Is mpirun --mca btl_t
cp_if_exclude lo,docker0 ./xhpl
Job &lt;41861&gt; is submitted to default queue &lt;interactive&gt;.
&lt;&lt;Waiting for dispatch ...&gt;&gt;
&lt;&lt;Starting on neumann&gt;&gt;
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N      :   15968 
NB     :      48       96      192 
PMAP   : Row-major process mapping
P      :       4        6 
Q      :       6        4 
PFACT  :   Right 
NBMIN  :       4 
NDIV   :       2 
RFACT  :   Crout 
BCAST  :  1ringM 
DEPTH  :       1 
SWAP   : Mix (threshold = 64)
L1     : transposed form
U      : transposed form
EQUIL  : yes
ALIGN  : 8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                16.0

--------------------------------------------------------------------------
Primary job  terminated normally, but 1 process returned
a non-zero exit code. Per user-direction, the job has been aborted.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
An MPI communication peer process has unexpectedly disconnected.  This
usually indicates a failure in the peer process (e.g., a crash or
otherwise exiting without calling MPI_FINALIZE first).

Although this local MPI process will likely now behave unpredictably
(it may even hang or crash), the root cause of this problem is the
failure of the peer -- that is what you need to investigate.  For
example, there may be a core file that you can examine.  More
generally: such peer hangups are frequently caused by application bugs
or other external events.

  Local host: teller
  Local PID:  2253
  Peer host:  kemeny
--------------------------------------------------------------------------
--------------------------------------------------------------------------
mpirun noticed that process rank 23 with PID 2448 on node kemeny exited on signal 4 (Illegal instructio
n).
--------------------------------------------------------------------------</code></pre></div>

<p>We see above that the MPI rank(s) fail on host kemeny, which happens to be the CM3 module (not CM3+). E
ven though I compiled HPL natively on kemeny this issue persists. So ultimately, the HPL run was limite
d to the 5 remaining CM3+ nodes (i.e. 20 cores).</p>

<p>Next, we submit HPL requesting 20 cores (all on CM3+ modules). Core affinity is specified, and we reque
st specifically the model type &ldquo;CM3plus&rdquo;. The job was submitted interactively and the output follows:</p>

<div class="highlight"><pre><code class="language-plaintext">lsfadmin@turingpi:/opt/HPC/hpl-2.3/bin/cm3_3 $ bsub -n 20 -Is -R "select[model==CM3plus] affinity[core(
1)]" mpirun --mca btl_tcp_if_exclude lo,docker0 ./xhpl
Job &lt;41865&gt; is submitted to default queue &lt;interactive&gt;.
&lt;&lt;Waiting for dispatch ...&gt;&gt;
&lt;&lt;Starting on vonkarman&gt;&gt;
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N      :   15968 
NB     :      48       96      192 
PMAP   : Row-major process mapping
P      :       4        5 
Q      :       5        4 
PFACT  :   Right 
NBMIN  :       4 
NDIV   :       2 
RFACT  :   Crout 
BCAST  :  1ringM 
DEPTH  :       1 
SWAP   : Mix (threshold = 64)
L1     : transposed form
U      : transposed form
EQUIL  : yes
ALIGN  : 8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                16.0

================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WR11C2R4       15968    48     4     5             327.96             8.2776e+00
HPL_pdgesv() start time Sun Mar  3 20:29:45 2024

HPL_pdgesv() end time   Sun Mar  3 20:35:13 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   2.74851526e-03 ...... PASSED
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WR11C2R4       15968    96     4     5             315.71             8.5987e+00
HPL_pdgesv() start time Sun Mar  3 20:35:18 2024

HPL_pdgesv() end time   Sun Mar  3 20:40:34 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   3.82600703e-03 ...... PASSED
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WR11C2R4       15968   192     4     5             319.93             8.4854e+00
HPL_pdgesv() start time Sun Mar  3 20:40:38 2024

HPL_pdgesv() end time   Sun Mar  3 20:45:58 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   2.56990081e-03 ...... PASSED
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WR11C2R4       15968    48     5     4             342.36             7.9293e+00
HPL_pdgesv() start time Sun Mar  3 20:46:03 2024

HPL_pdgesv() end time   Sun Mar  3 20:51:45 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   2.89956630e-03 ...... PASSED
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WR11C2R4       15968    96     5     4             313.72             8.6531e+00
HPL_pdgesv() start time Sun Mar  3 20:51:50 2024

HPL_pdgesv() end time   Sun Mar  3 20:57:04 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   3.04113830e-03 ...... PASSED
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WR11C2R4       15968   192     5     4             312.48             8.6877e+00
HPL_pdgesv() start time Sun Mar  3 20:57:08 2024

HPL_pdgesv() end time   Sun Mar  3 21:02:21 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   3.30812017e-03 ...... PASSED
================================================================================

Finished      6 tests with the following results:
              6 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================</code></pre></div>

<p>We oberved during the HPL run that the CPU temperatures exceeded 80 degrees Celsius:</p>

<div class="highlight"><pre><code class="language-plaintext">root@turingpi:/home/lsfadmin# parallel-ssh -h /opt/workers -i "/opt/tools/cputemp.sh"
[1] 20:47:30 [SUCCESS] kemeny
Current CPU temperature is 61.22 degrees Celsius.
[2] 20:47:30 [SUCCESS] teller
Current CPU temperature is 82.21 degrees Celsius.
[3] 20:47:30 [SUCCESS] wigner
Current CPU temperature is 82.74 degrees Celsius.
[4] 20:47:31 [SUCCESS] szilard
Current CPU temperature is 82.21 degrees Celsius.
[5] 20:47:31 [SUCCESS] neumann
Current CPU temperature is 82.74 degrees Celsius.
[6] 20:47:31 [SUCCESS] vonkarman
Current CPU temperature is 83.28 degrees Celsius.

root@turingpi:/home/lsfadmin# parallel-ssh -h /opt/workers -i "/usr/bin/vcgencmd measure_clock arm" 
[1] 20:47:42 [SUCCESS] kemeny
frequency(48)=1199998000
[2] 20:47:43 [SUCCESS] szilard
frequency(48)=1034000000
[3] 20:47:43 [SUCCESS] teller
frequency(48)=980000000
[4] 20:47:44 [SUCCESS] wigner
frequency(48)=926000000
[5] 20:47:44 [SUCCESS] neumann
frequency(48)=818000000
[6] 20:47:44 [SUCCESS] vonkarman
frequency(48)=872000000</code></pre></div>

<p>And of course with high temperatures come CPU throttling. Clearly, with this thermal situation the run
of HPL was not going to be optimal.</p>

<p><strong>Giant Tiger to the rescue</strong></p>

<p>Even for those in Canada this may see like a very strange reference. <a href="https://www.gianttiger.com/">Giant Tiger</a> is a discount store ch
ain which sell everything from A through Z. Unfortunately the local &ldquo;GT Boutique&rdquo; as call it closed dow
n this past January. I happened to purchase on a whim a USB powered desktop fan at the GT Boutique abou
t a year ago. The idea was to help keep me cool at my keyboard during the hot summer days. But in this
case, it was just what was needed to provide a bit of active cooling to the Turing Pi system.</p>

<p>Repeating the run of HPL with the &ldquo;highly advanced active cooling&rdquo; measures in place, we were able to u
p the HPL results a tad while helping to preserve the life of the cluster nodes. And the results show g
oing from 8.65 GFlops with passive cooling to 9.5 GFlops with the active cooling.</p>

<div class="highlight"><pre><code class="language-plaintext">lsfadmin@turingpi:/opt/HPC/hpl-2.3/bin/cm3_3 $ bsub -n 20 -Is -R "select[model==CM3plus] affinity[core(
1)]" mpirun --mca btl_tcp_if_exclude lo,docker0 ./xhpl
Job &lt;41866&gt; is submitted to default queue &lt;interactive&gt;.
&lt;&lt;Waiting for dispatch ...&gt;&gt;
&lt;&lt;Starting on teller&gt;&gt;
================================================================================
HPLinpack 2.3  --  High-Performance Linpack benchmark  --   December 2, 2018
Written by A. Petitet and R. Clint Whaley,  Innovative Computing Laboratory, UTK
Modified by Piotr Luszczek, Innovative Computing Laboratory, UTK
Modified by Julien Langou, University of Colorado Denver
================================================================================

An explanation of the input/output parameters follows:
T/V    : Wall time / encoded variant.
N      : The order of the coefficient matrix A.
NB     : The partitioning blocking factor.
P      : The number of process rows.
Q      : The number of process columns.
Time   : Time in seconds to solve the linear system.
Gflops : Rate of execution for solving the linear system.

The following parameter values will be used:

N      :   15968 
NB     :      48       96      192 
PMAP   : Row-major process mapping
P      :       4        5 
Q      :       5        4 
PFACT  :   Right 
NBMIN  :       4 
NDIV   :       2 
RFACT  :   Crout 
BCAST  :  1ringM 
DEPTH  :       1 
SWAP   : Mix (threshold = 64)
L1     : transposed form
U      : transposed form
EQUIL  : yes
ALIGN  : 8 double precision words

--------------------------------------------------------------------------------

- The matrix A is randomly generated for each test.
- The following scaled residual check will be computed:
      ||Ax-b||_oo / ( eps * ( || x ||_oo * || A ||_oo + || b ||_oo ) * N )
- The relative machine precision (eps) is taken to be               1.110223e-16
- Computational tests pass if scaled residuals are less than                16.0

================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WR11C2R4       15968    48     4     5             319.43             8.4985e+00
HPL_pdgesv() start time Sun Mar  3 21:15:42 2024

HPL_pdgesv() end time   Sun Mar  3 21:21:01 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   2.74851526e-03 ...... PASSED
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WR11C2R4       15968    96     4     5             296.94             9.1423e+00
HPL_pdgesv() start time Sun Mar  3 21:21:05 2024

HPL_pdgesv() end time   Sun Mar  3 21:26:02 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   3.82600703e-03 ...... PASSED
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WR11C2R4       15968   192     4     5             289.03             9.3926e+00
HPL_pdgesv() start time Sun Mar  3 21:26:06 2024

HPL_pdgesv() end time   Sun Mar  3 21:30:55 2024
--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   2.56990081e-03 ...... PASSED
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WR11C2R4       15968    48     5     4             316.20             8.5855e+00
HPL_pdgesv() start time Sun Mar  3 21:30:59 2024

HPL_pdgesv() end time   Sun Mar  3 21:36:15 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   2.89956630e-03 ...... PASSED
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WR11C2R4       15968    96     5     4             285.87             9.4961e+00
HPL_pdgesv() start time Sun Mar  3 21:36:19 2024

HPL_pdgesv() end time   Sun Mar  3 21:41:05 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   3.04113830e-03 ...... PASSED
================================================================================
T/V                N    NB     P     Q               Time                 Gflops
--------------------------------------------------------------------------------
WR11C2R4       15968   192     5     4             284.69             9.5355e+00
HPL_pdgesv() start time Sun Mar  3 21:41:09 2024

HPL_pdgesv() end time   Sun Mar  3 21:45:53 2024

--------------------------------------------------------------------------------
||Ax-b||_oo/(eps*(||A||_oo*||x||_oo+||b||_oo)*N)=   3.30812017e-03 ...... PASSED
================================================================================

Finished      6 tests with the following results:
              6 tests completed and passed residual checks,
              0 tests completed and failed residual checks,
              0 tests skipped because of illegal input values.
--------------------------------------------------------------------------------

End of Tests.
================================================================================</code></pre></div>

<p>And during the runtime, we see that no throttling occurrred and the CPU temperatures hovered in the hig
h 50&rsquo;s to low 60 degree Celsius range.</p>

<div class="highlight"><pre><code class="language-plaintext">root@turingpi:/home/lsfadmin# parallel-ssh -h /opt/workers -i "/opt/tools/cputemp.sh"
[1] 21:41:25 [SUCCESS] kemeny
Current CPU temperature is 36.48 degrees Celsius.
[2] 21:41:25 [SUCCESS] teller
Current CPU temperature is 58.53 degrees Celsius.
[3] 21:41:25 [SUCCESS] vonkarman
Current CPU temperature is 58.00 degrees Celsius.
[4] 21:41:25 [SUCCESS] neumann
Current CPU temperature is 55.84 degrees Celsius.
[5] 21:41:25 [SUCCESS] szilard
Current CPU temperature is 61.76 degrees Celsius.
[6] 21:41:25 [SUCCESS] wigner
Current CPU temperature is 55.31 degrees Celsius.

root@turingpi:/home/lsfadmin# parallel-ssh -h /opt/workers -i "/usr/bin/vcgencmd measure_clock arm" 
[1] 21:41:29 [SUCCESS] kemeny
frequency(48)=1200000000
[2] 21:41:29 [SUCCESS] teller
frequency(48)=1200000000
[3] 21:41:29 [SUCCESS] vonkarman
frequency(48)=1200000000
[4] 21:41:29 [SUCCESS] wigner
frequency(48)=1200000000
[5] 21:41:29 [SUCCESS] neumann
frequency(48)=1200000000
[6] 21:41:29 [SUCCESS] szilard
frequency(48)=1200002000</code></pre></div>

<p><strong>Wrap up</strong></p>

<p>I always liked the idea of a small cluster that you could easily take with you. That&rsquo;s why I&rsquo;m strongly
considering the Turing Pi V2.5, which can work with the much more powerful CM4 omdules, among other ve
ry capable modules. Budget allowing, I hope to purchase a Turing Pi V2.5 sometime in 2024. As always st
ay tuned for more exciting high performance computing tales. And at the end of the day, a compute clust
er in a mini ITX format isn&rsquo;t a pie in the sky idea. For me, it&rsquo;s a great tool for learning!</p>]]></content><author><name>Ramblings of a supercomputing enthusiast.</name></author><category term="gaborsamu" /><summary type="html"><![CDATA[Overview]]></summary></entry><entry><title type="html">Profiling the XRootD Monitoring Collector</title><link href="https://hpc.social/personal-blog/2024/profiling-the-xrootd-monitoring-collector/" rel="alternate" type="text/html" title="Profiling the XRootD Monitoring Collector" /><published>2024-01-31T05:00:00-07:00</published><updated>2024-01-31T05:00:00-07:00</updated><id>https://hpc.social/personal-blog/2024/profiling-the-xrootd-monitoring-collector</id><content type="html" xml:base="https://hpc.social/personal-blog/2024/profiling-the-xrootd-monitoring-collector/"><![CDATA[<p>The <a href="https://github.com/opensciencegrid/xrootd-monitoring-collector">XRootD Monitoring Collector</a> (collector) receives file transfer accounting messages from <a href="https://xrootd.slac.stanford.edu/">XRootD</a> servers.
This transfer information is parsed by the collector and sent to the GRACC accounting database for visualization.
Each transfer will generate multiple messages:</p>

<ol>
  <li>Connection message with client information</li>
  <li>Token information</li>
  <li>File open with file name</li>
  <li>Transfer updates (potentially multiple)</li>
  <li>File close with statistics about bytes read and written</li>
  <li>Disconnection</li>
</ol>

<p>We can see 1000+ messages a second from XRootD servers across the OSG.  But, recently the collector has not been able to keep up.  Below is the traffic of messages to the collector from the OSG’s Message Bus:</p>

<figure class="">
  <img alt="this is a placeholder image" src="https://derekweitzel.com/images/posts/profiling-xrootd-collector/before-optimization-mq.png" /><figcaption>
      Message bus traffic before optimization

    </figcaption></figure>

<p>The graph is from the message bus’s perspective, so publish is incoming to the message bus, and deliver is sending to consumers (the Collector).  We are receiving (Publish) ~1550 messages a second, while the collector is only able to process (Deliver) ~500 messages a second.  1550 messages a second is higher than our average, but we need to be able to process data as fast as it comes.  Messages that are not processed will wait on the queue.  If the queue gets too large (maximum is set to 1 Million messages) then the messages will be deleted, losing valuable transfer accounting data.  At a defecit 1000 messages a second, it would only take ~16 minutes to fill the queue.  It is clear that we missed data for a significant amount of time.</p>

<h2 id="profiling">Profiling</h2>

<p>The first step to optimizing the XRootD Monitoring Collector is to profile the current process.  Profiling is the process of measuring the performance of the collector to identify bottlenecks and areas for improvement.</p>

<p>For profiling, I created a development environment on the <a href="https://nationalresearchplatform.org/">National Research Platform (NRP)</a> to host the collector.  I started a <a href="https://docs.nationalresearchplatform.org/userdocs/jupyter/jupyterhub-service/">jupyter notebook on the NRP</a>, and used VSCode to edit the collector code and a Jupyter notebook to process the data.  I used the <a href="https://docs.python.org/3/library/profile.html">cProfile</a> package built into python to perform the profiling.
I modified the collector to output a profile update every 10 seconds so I could see the progress of the collector.</p>

<p>After profiling, I used <a href="https://jiffyclub.github.io/snakeviz/">snakeviz</a> to visualize the profile.  Below is a visualization of the profile before any optimization.  The largest consumer of processing time was DNS resoluiton, highlighted in the below image in purple.</p>

<figure class="">
  <img alt="this is a placeholder image" src="https://derekweitzel.com/images/posts/profiling-xrootd-collector/before-optimization-profile.png" /><figcaption>
      Snakeviz profile.  Purple is the DNS resolution function

    </figcaption></figure>

<p>The collector uses DNS to resolve the hostnames for all IPs it receives in order to provide a human friendly name for clients and servers.  Significant DNS resolution is expected as the collector is receiving messages from many different hosts.  However, the DNS resolution is taking up a significant amount of time and is a bottleneck for the collector.</p>

<h2 id="improvement">Improvement</h2>

<p>After reviewing the profile, <a href="https://github.com/opensciencegrid/xrootd-monitoring-collector/pull/43">I added a cache to the DNS resolution</a> so that the collecotr only needs to resolve the host once every 24 hours.  When I profiled after making the change, I saw a significant improvement in DNS resolution time.  Below is another visualization of the profile after the DNS caching, purple is the DNS resolution.</p>

<figure class="">
  <img alt="this is a placeholder image" src="https://derekweitzel.com/images/posts/profiling-xrootd-collector/after-optimization-profile.png" /><figcaption>
      Snakeviz profile.  Purple is the DNS resolution function

    </figcaption></figure>

<p>Notice that the DNS resolution is a much smaller portion of the overall running time when compared to the previous profile.</p>

<p>In the following graph, I show the time spent on DNS resolution over time for both before and after the optimization.  I would expect DNS resolution to increase for both, but as you can see, the increase after adding DNS caching is much slower.</p>

<figure class="">
  <img alt="this is a placeholder image" src="https://derekweitzel.com/images/posts/profiling-xrootd-collector/dns-resolution.png" /><figcaption>
      Growth of DNS resolution time

    </figcaption></figure>

<h2 id="production">Production</h2>

<p>When we applied the changes into production, we saw a significant improvement in the collector’s ability to process messages.  Below is the graph of the OSG’s Message Bus after the change:</p>

<figure class="">
  <img alt="this is a placeholder image" src="https://derekweitzel.com/images/posts/profiling-xrootd-collector/edited-production-mq.png" /><figcaption>
      RabbitMQ Message Parsing

    </figcaption></figure>

<p>The incoming messages decreased, but the collector is now able to process messages as fast as they are received.  This is a significant improvement over the previous state.  I suspect that the decrease in incoming messages is due to server load of sending more outgoing messages to the improved collector.  The message bus can slow down the incoming messages under heavier load.</p>

<h2 id="conclusions-and-future-work">Conclusions and Future Work</h2>

<p>Since we implemented the cache for DNS resolution, the collector has been able to keep up with the incoming messages.  This is a significant improvement over the previous state.  Over time, we expect the DNS cache to capture nearly all of the hosts, and the DNS resolution time to decrease even further.</p>

<p>We continue to look for optimizations to the collector.  When looking at the output from the most recent profile, we noticed the collector is spending a significant amount of time in the logging functions.  By default, we have debug logging turned on.  We will look at turning off debug logging in the future.</p>

<p>Additionally, the collector is spending a lot of time polling for messages.  In fact, the message bus is receiving ~1500 messages a second, which is increasing the load on the message bus.  After reading through optimizations for RabbitMQ, it appears that less but larger messages are better for the message bus.  We will look at batching messages in the future.</p>]]></content><author><name>Derek Weitzel's Blog</name></author><category term="dweitzel" /><summary type="html"><![CDATA[The XRootD Monitoring Collector (collector) receives file transfer accounting messages from XRootD servers. This transfer information is parsed by the collector and sent to the GRACC accounting database for visualization. Each transfer will generate multiple messages:]]></summary></entry><entry><title type="html">SC’23 Recap</title><link href="https://hpc.social/personal-blog/2023/sc-23-recap/" rel="alternate" type="text/html" title="SC’23 Recap" /><published>2023-11-23T08:05:00-07:00</published><updated>2023-11-23T08:05:00-07:00</updated><id>https://hpc.social/personal-blog/2023/sc-23-recap</id><content type="html" xml:base="https://hpc.social/personal-blog/2023/sc-23-recap/"><![CDATA[<p>The largest high-performance computing industry conference of the year, SC23, was held in Denver last week. This year's conference <a href="https://twitter.com/thedeadline/status/1724949606188847381?s=61&amp;t=5LlVTsVajaU1kTzzuGQL7Q">attracted over 14,000 attendees</a> and <a href="https://hallerickson.ungerboeck.com/prod/app85.cshtml?aat=Z8CDp%2bb4HWU7dw3dA3PesG2LIb9lCzjs2VEXLZZxGP4%3d">438 exhibitors</a>, finally breaking pre-pandemic records, and it solidly felt like the old days of the conference in terms of breadth of attendees, the technical program, and overall engagement and interaction across the community.</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>This was the second time I've attended the conference as a vendor instead of a customer, and this meant I spent a fair amount of time running to and from meetings instead of walking the show floor or attending technical sessions. I'm sure I missed some major announcements and themes as a result, but I thought it still might be valuable to contribute my observations based on this narrow lens of an AI-minded storage product manager for a major cloud service provider. If you're interested in a more well-rounded perspective, check out the <a href="https://hpc.social/news/2023/supercomputing-23-summary/">HPC Social Supercomputing 2023 Summary</a> and contribute your own thoughts!</p>
<p><span></span></p>
<p></p>
<p>I don't know the best way to organize the notes that I took, so I grouped them into a few broad categories:</p>
<p></p>
<ol><li>Big news on the Top500</li><li>What's new in storage for HPC and AI</li><li>The emergence of pure-play GPU clouds</li><li>Other technological dribs and drabs</li><li>Personal thoughts and reflections on the conference and community</li></ol>
<p>I must also disclose that I am employed by Microsoft and I attended SC23 in that capacity. However, everything in this post is my own personal viewpoint, and my employer had no say in what I did or didn't write here. Everything below is written from my perspective as an enthusiast, not an employee, although my day job probably colors my outlook on the HPC industry.</p>
<p>With all that being said, let's dive into the big news of the week!</p>
<p></p>
<h2>Big news on the Top500</h2>
<div>Unveiling the new Top500 list is the tentpole event of SC every year regardless of how much people (including myself!) deride HPL, and unlike the lists over the past year, this newest listing had two big surprises. Many of us went into the SC23 season wondering if the Aurora system, whose <a href="https://www.intc.com/news-events/press-releases/detail/1631/aurora-supercomputer-blade-installation-complete">hardware was delivered this past June</a>, would be far enough in installation and shakeout to unseat Frontier as the second listed exascale system. At the same time, nobody had expected another &gt;500 PF supercomputer to appear on the list, much less one operated privately and for-profit. But both systems made big debuts in the top 5, carrying with them interesting implications.</div>
<h3>The new #2: Argonne's Aurora</h3>
<p>The Aurora exascale system has a storied history going back to 2015; first conceived of as a 180 PF supercomputer to be delivered in 2018, it evolved into a GPU-based exascale supercomputer that was supposed to land in 2021. Now two years late and a few executives short, Intel and Argonne were stuck between a rock and a hard place in choosing whether to list their HPL results at SC23:</p>
<p></p>
<ol><li>If Aurora <u>wasn't</u> listed on SC23's Top500 list, it risked <a href="https://www.llnl.gov/article/46161/llnl-hpe-partner-amd-el-capitan-projected-worlds-fastest-supercomputer">going up against El Capitan</a> at ISC'24 and being completely overshadowed by the simultaneous launch of a newer, bigger exascale system.</li><li>If Aurora <u>was</u> listed at SC23's Top500 list but in an incomplete form, it would fall short of its long-awaited debut as the #1 system and would require a careful narrative to avoid being seen as a failed system.</li></ol>
<p>Intel and Argonne ultimately chose option #2 and listed an HPL run that used only 5,439 of Aurora's 10,624 nodes (51.1% of the total machine), and as expected, people generally understood that this sub-exaflop score was not an indictment of the whole system underdelivering, but more a reflection that the system was still not stable at its full scale. Still, <a href="https://www.theregister.com/2023/11/13/aurora_top500_no2/">headlines in trade press were dour</a>, and there was general confusion about how to extrapolate Aurora's HPL submission to the full system.  Does the half-system listing of 585.34 PF Rmax at 24.7 MW power mean that the full system will require 50 MW to achieve an Rmax that's still lower than Frontier? Why is the efficiency (Rmax/Rpeak = 55%) so low?</p>
<p>Interestingly, about half the people I talked to thought that Argonne should've waited until ISC'24 to list the full system, and the other half agreed that listing half of Aurora at SC'23 was the better option. Clearly there was no clearly right answer here, and I don't think anyone can fault Argonne for doing the best they could given the Top500 submission deadline and the state of the supercomputer. In talking to a couple folks from ALCF, I got the impression that there's still plenty of room to improve the score since their HPL run was performed under a time crunch, and there were known issues affecting performance that couldn't have been repaired in time. With any luck, Aurora will be ready to go at full scale for ISC'24 and have its moment in the sun in Hamburg.</p>
<p></p>
<h3>The new #3: Microsoft's Eagle</h3>
<p>The other new Top500 entry near the top of the list was Eagle, Microsoft's surprise 561 PF supercomputer. Like Aurora, it is composed of GPU-heavy nodes, and like Aurora, the HPL run utilized only part (1,800 nodes) of the full system. Unlike Aurora though, the full size of Eagle is not publicly disclosed by Microsoft, and its GPU-heavy node architecture was designed for one specific workload: training large language models for generative AI.</p>
<p>At the <a href="https://sc23.conference-program.com/presentation/?id=bof155&amp;sess=sess314">Top500 BOF</a>, Prabhat Ram gave a brief talk about Eagle where he emphasized that the system wasn't a custom-built, one-off stunt machine. Rather, it was built from publicly available <a href="https://learn.microsoft.com/en-us/azure/virtual-machines/nd-h100-v5-series">ND H100 v5 virtual machines</a> on a single 400G NDR InfiniBand fat tree fabric, and Microsoft had one of the physical ND H100 v5 nodes at its booth.  Here's the back side of it:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>From top to bottom, you can see it has eight E1.S NVMe drives, 4x OSFP ports which support 2x 400G NDR InfiniBand each, a Microsoft SmartNIC, and a ton of power.  A view from the top shows the HGX baseboard and fans:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p><br />&lt;p&gt;Logically, this node (and the ND H100 v5 VM that runs on it) looks a lot like the NVIDIA DGX reference architecture. Physically, it is an air-cooled, Microsoft-designed OCP server, and Eagle’s Top500 run used 1,800 of these servers.&lt;/p&gt;</p>
<p>Big HPL number aside, the appearance of Eagle towards the top of Top500 has powerful implications on the supercomputing industry at large.  Consider the following.</p>
<p>Microsoft is a for-profit, public enterprise whose success is ultimately determined by how much money it makes for its shareholders. Unlike government agencies who have historically dominated the top of the list to show their supremacy in advancing science, the Eagle submission shows that there is now a huge financial incentive to build giant supercomputers to train large language models. This is a major milestone in supercomputing; up to this point, the largest systems built by private industry have come from the oil &amp; gas industry, and they have typically deployed at scales below the top 10.</p>
<p>Eagle is also built on the latest and greatest technology--NVIDIA's H100 and NDR InfiniBand--rather than previous-generation technology that's already been proven out by the national labs.  SC23 was the first time Hopper GPUs have appeared anywhere on the Top500 list, and Eagle is likely the single largest installation of both H100 and NDR InfiniBand on the planet. Not only does this signal that it's financially viable to stand up a leadership supercomputer for profit-generating R&amp;D, but industry is now willing to take on the high risk of deploying systems using untested technology if it can give them a first-mover advantage.</p>
<p>Eagle also shows us that the potential upside of bringing a massive new AI model to market is worth both the buying all the infrastructure required to build a half-exaflop system <i>and</i> hiring the talent required to shake out what is literally a world-class supercomputer. And while the US government can always obtain a <a href="https://www.bis.doc.gov/index.php/other-areas/strategic-industries-and-economic-security-sies/defense-priorities-a-allocations-system-program-dpas">DPAS rating</a> to ensure it gets dibs on GPUs before AI companies can, there is no DPAS rating for hiring skilled individuals to stand up gigantic systems. This all makes me wonder: if Aurora was a machine sitting in some cloud data center instead of Argonne, and its commissioning was blocking the development of the next GPT model, would it have been able to take the #1 spot from Frontier this year?</p>
<p>The appearance of such a gigantic system on Top500, motivated by and paid for as part of the AI land grab, also raises some existential questions for the US government. What role should the government have in the supercomputing industry if private industry now has a strong financial driver to invest in the development of leadership supercomputing technologies? Historically, government has always incubated cutting-edge HPC technologies so that they could stabilize enough to be palatable to commercial buyers. Today's leadership supercomputers in the national labs have always wound up as tomorrow's midrange clusters that would be deployed for profit-generating activities like seismic imaging or computer-aided engineering. If the AI industry is now taking on that mantle of incubating and de-risking new HPC technologies, perhaps government now needs to focus on ensuring that the technologies developed and matured for AI can still be used to solve scientific problems.</p>
<p></p>
<h2>What's new in storage for HPC and AI?</h2>
<div>Since I spent much of my career working in HPC storage, and I now focus largely on AI, it should be no surprise that I heard a lot about the intersection of AI and storage.  AI remains high in the hype cycle, so it's natural that just about every storage vendor and discussion had some talk of AI forced into it regardless of it was really relevant or not. However, there were a few places where AI and storage topics intersect that I found noteworthy.</div>
<h3>The AI-storage echo chamber</h3>
<p><span></span>&lt;p&gt;I was asked a lot of questions about storage from journalists, VCs, and even trusted colleagues that followed a common theme: What storage technologies for AI excite me the most? What’s the future of storage for AI?&lt;/p&gt;</p>
<p>I don't fault people for asking such a broad question because the HPC/AI storage industry is full of bombastic claims. For example, two prominent storage vendors emblazoned their booths with claims of what their products could do for AI:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>These photos illustrate the reality that, although there is general agreement that good storage is needed for GPUs and AI, what constitutes "good storage" is muddy and confusing. Assuming the above approach to marketing (10x faster! 20x faster!) is effective for someone out there, there appears to be a market opportunity in just capitalizing on this general confusion by (1) asserting what the I/O problem that's jamming up all AI workloads is, and (2) showing that your storage product does a great job at solving that specific problem.<br /></p>
<p>For example, the MLPerf Storage working group recently announced the first <a href="https://mlcommons.org/2023/06/introducing-the-mlperf-storage-benchmark-suite/">MLPerf Storage benchmark</a>, and Huiho Zheng from Argonne (co-author of the underlying <a href="https://ieeexplore.ieee.org/document/9499416">DLIO tool</a> on which MLPerf Storage was built) described how the MLPerf Storage benchmark reproduces the I/O characteristics of model training at the <a href="https://sc23.conference-program.com/presentation/?id=misc289&amp;sess=sess437">Workshop on Software and Hardware Co-Design of Deep Learning Systems in Accelerators</a>:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>When I saw this premise, I was scratching my head--my day job is to develop new storage products to meet the demands of large-scale AI model training and inferencing, and I have never had a customer come to me claiming that they need support for small and sparse I/O or random access. In fact, write-intensive checkpointing and fine-tuning, not read-intensive data loading, is the biggest challenge faced by those training large language models in my experience. It wasn't until a few slides later did I realize where these requirements may be coming from:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>Storage and accelerator vendors are both defining and solving the I/O problems of the AI community which seems counterproductive--shouldn't a benchmark be set by the practitioners and not the solution providers?</p>
<p>What I learned from talking to attendees, visiting storage vendor booths, and viewing talks like Dr. Zheng's underscores a reality that I've faced on my own work with production AI workloads: <b>AI doesn't actually have an I/O performance problem, so storage vendors are struggling to define ways in which they're relevant in the AI market</b>.</p>
<p>I outlined the ways in which LLM training uses storage in <a href="https://sc23.conference-program.com/presentation/?id=bof212&amp;sess=sess354">my HDF5 BOF talk</a>, and their needs are easy to meet with some local storage and basic programming. So easy, in fact, that a reasonably sophisticated AI practitioner can duct tape their way around I/O problems very quickly and move on to harder problems. There's no reason for them to buy into a sophisticated Rube Goldberg storage system, because it still won't fundamentally get them away from having to resort to local disk to achieve the scalability needed to train massive LLMs.</p>
<p>So yes, I've got no doubt that there are storage products that can deliver 10x or 20x higher performance for some specific AI workload. And MLPerf Storage is probably an excellent way to measure that 20x performance boost. But the reality I've experienced is that a half a day of coding will deliver 19x higher performance when compared to the most naive approach, and every AI practitioner knows and does this already. That's why there are a lot of storage vendors fishing in this AI storage pond, but none of them seem to be reeling in any whoppers.</p>
<p>This isn't to say that there's nothing interesting going on in high-performance storage though. If the most common question I was asked was "what's the future of storage for AI," the second most common question was "what do you think about VAST and WEKA?"</p>
<h3>VAST &amp; WEKA</h3>
<p>Both companies seem to be doing something right since they were top of mind for a lot of conference attendees, and it probably grinds their respective gears that the field still groups them together in the same bucket of "interesting parallel storage systems that we should try out." Rather than throw my own opinion in the pot though (I work with and value both companies and their technologies!), I'll note the general sentiments I observed.</p>
<p>WEKA came into the week riding high on their big win as <a href="https://www.weka.io/company/weka-newsroom/press-releases/weka-named-u2s-official-technology-partner-ahead-of-achtung-baby-shows/">U2's official technology partner</a> in September. Their big booth attraction was a popular Guitar Hero game and leaderboard, and an oversized Bono, presumably rocking out to how much he loves WEKA, presided over one of their seating areas:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>Much of their marketing centered around accelerating AI and other GPU workloads, and the feedback I heard from the WEKA customers I bumped into during the week backed this up. One person shared that the WEKA client does a great job with otherwise difficult small-file workloads, particularly common in life sciences workloads, and this anecdote is supported by the appearance of a <a href="https://www.weka.io/blog/hpc/hot-take-real-customers-real-benchmarks/">very fast WEKA cluster owned by MSK Cancer Center on the IO500 Production list</a>. People also remarked about WEKA's need for dedicated CPU cores and local storage to deliver the highest performance; this, combined with its client scalability, lends itself well to smaller clusters of fat GPU nodes. I didn't run into anyone using WEKA in the cloud though, so I assume the feedback I gathered had a bias towards more conventional, on-prem styles of architecting storage for traditional HPC.</p>
<p>Whereas WEKA leaned into its rock 'n' roll theme this year, VAST doubled down on handing out the irresistibly tacky light-up cowboy hats they introduced last year (which I'm sure their neighbors at the DDN booth absolutely loved). They were all-in on promoting their new identity as a "data platform" this year, and although I didn't hear anyone refer to VAST as anything but a file system, I couldn't throw a rock without hitting someone who either recently bought a VAST system or tried one out.</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>Unlike last year though, customer sentiment around VAST wasn't all sunshine and rainbows, and I ran into a few customers who described their presales engagements as more formulaic than the white-glove treatment everyone seemed to be getting a year ago. This isn't surprising; there's no way to give all customers the same royal treatment as a business scales. But it does mean that the honeymoon period between VAST and the HPC industry is probably at an end, and they will have to spend the time between now and SC24 focusing on consistent execution to maintain the momentum they've gotten from the light-up cowboy hats.</p>
<p>The good news for VAST is that they've landed some major deals this past year, and they came to SC with customers and partners in-hand. They co-hosted a standing-room-only party with CoreWeave early in the week and shared a stage with Lambda at a customer breakfast, but they also highlighted two traditional, on-prem HPC customers (TACC and NREL) at the latter event.</p>
<p>VAST clearly isn't letting go of the on-prem HPC market as it also pursues partnerships with emerging GPU cloud service providers; this contrasted with WEKA's apparent focus on AI, GPUs, and the cloud. Time will tell which strategy (if either, or both) proves to be the better approach.</p>
<h3>DAOS</h3>
<div>Though commercial buyers were definitely most interested in VAST and WEKA, folks from the more sophisticated HPC shops around the world also tossed a few questions about DAOS my way this year.</div>
<p>I usually make it a point to attend the annual DAOS User Group meeting since it is always attended by all the top minds in high-performance I/O research, but I had to miss it this year on account of it running at the same time as my I/O tutorial. Fortunately, DAOS was pervasive throughout the conference, and there was no shortage of opportunity to find out what the latest news in the DAOS was. For example, check out the lineup for <a href="https://www.pdsw.org/index.shtml">PDSW 2023</a> this year:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>Three out of thirteen talks were about DAOS which is more than any other single storage product or project. DAOS also won big at this year's IO500, taking the top two spots in the production storage system list:</p>
<p><br />&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;</p>
<p>In fact, DAOS underpinned every single new awardee this year, and DAOS is now the second most represented storage system on the list behind Lustre:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>Why is DAOS at the top of so many people's minds this year? Well, DAOS reached a few major milestones in the past few months which has thrust it into the public eye.  </p>
<p>First, Aurora is finally online and running jobs, and while the compute system is only running at half its capability, the full DAOS system (<a href="https://io500.org/submissions/configuration/688">all 220 petabytes of it</a>, all of which is TLC NVMe) is up and running--a testament to the scalability of DAOS that many parallel storage systems--including VAST and WEKA--have not publicly demonstrated. Because DAOS is open-source software and Aurora is an open-science system, all of DAOS' at-scale warts are also on full display to the community in a way that no competitive storage system besides of Lustre is.</p>
<p>Second, Google Cloud cast a bold vote of confidence in DAOS by launching <a href="https://cloud.google.com/parallelstore">Parallelstore, its high-performance parallel file service based on DAOS</a>, in August. Whereas AWS and Azure have bet on Lustre to fill the high-performance file gap (via FSx Lustre and Azure Managed Lustre), GCP has planted a stake in the ground by betting that DAOS will be the better foundation for a high-performance file service for HPC and AI workloads.</p>
<p>Parallelstore is still in private preview and details are scant, but GCP had DAOS and Parallelstore dignitaries at all the major storage sessions in the technical program to fill in the gaps. From what I gathered, Parallelstore is still in its early stages and is intended to be a fast scratch tier; it's using DRAM for metadata which means it relies on erasure coding across servers to avoid data loss on a single server reboot, and there's no way to recover data if the whole cluster goes down at once. This lack of durability makes it ineligible for the IO500 list right now, but the upcoming metadata-on-NVMe feature (which previews in upstream DAOS in 1H2024) will be the long-term solution to that limitation.</p>
<p>Finally, the third major bit of DAOS news was about the formation of the <a href="https://foundation.daos.io/">DAOS Foundation</a>. First announced earlier this month, this initiative lives under the umbrella of the Linux Foundation and is led by its five founding members:</p>
<p></p>
<ul><li><b>Argonne National Laboratory</b>, who has a vested interest in seeing DAOS endure given its massive investment in it,</li><li><b>Enakta Labs</b>, a company spun out of <a href="https://croit.io/">Croit</a>, a German storage services company that was contributing feature development to DAOS,</li><li><b>Google Cloud</b>, who has made a big bet on DAOS as the underpinnings for its Parallelstore service,</li><li><b>HPE</b>, who has a shared fate with the DAOS installation at Argonne and who has also been contributing feature development, and</li><li><b>Intel</b>, whose engineers largely developed DAOS as part of the Aurora program.</li></ul>
<p></p>
<p>I see this handoff of DAOS from Intel to this new foundation as a positive change that makes DAOS a more stable long-term bet; should Intel choose to divest itself of DAOS once its obligations to the Aurora program end, DAOS now can live on without the community having to fork it. The DAOS Foundation is somewhat analogous to OpenSFS (one of the nonprofits backing Lustre) in that it is a vendor-neutral organization around which the DAOS community can gather.</p>
<p>But unlike OpenSFS, the DAOS Foundation will also assume the responsibility of releasing new versions of DAOS after Intel releases its final version (2.6) in March 2024. The DAOS Foundation will also steer feature prioritization, but seeing as how the DAOS Foundation doesn't fund developers directly, it's not clear that contributors like Intel or GCP are actually at the mercy of the foundation's decisions. It's more likely that the DAOS Foundation will just have authority to decide what features will roll up into the next formal DAOS release, and developers contributing code to DAOS will still prioritize whatever features their employers tell them to.</p>
<div><p>So, DAOS was the talk of the town at SC23. Does this all mean that DAOS is ready for prime time?</p>
<p>While Intel and Argonne may say yes, the community seems to have mixed feelings.  Consider this slide presented by László Szűcs from LRZ at the <a href="https://sc23.conference-program.com/presentation/?id=bof131&amp;sess=sess392">DAOS Storage Community BOF</a>:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>DAOS is clearly crazy fast and scales to hundreds of petabytes in production--Aurora's IO500 listing proves that. However, that performance comes with a lot of complexity that is currently being foisted on application developers, end-users, and system administrators. The "opportunities" listed in László's slide are choices that people running at leadership HPC scale may be comfortable making, but the average HPC user is not equipped to make many of these decisions and make thoughtful choices about container types and library interfaces.</p>
<p>The fact that DAOS was featured so prominently at PDSW--a research workshop--probably underscores this as well. This <a href="https://sc23.conference-program.com/presentation/?id=ws_pdswwip104&amp;sess=sess435">slide presented by Adrian Jackson's lighting talk</a> sums up the complexity along two different dimensions:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>His results showed that your choice of DAOS object class and I/O library atop the DAOS POSIX interface can result in wildly different checkpoint bandwidth. It's hard enough to teach HPC users about getting optimal performance out of a parallel file system like Lustre; I can't imagine those same users will embrace the idea that they should be mindful of which object class they use as they generate data.</p>
<p>The other <a href="https://sc23.conference-program.com/presentation/?id=ws_pdsw111&amp;sess=sess435">DAOS-related research talk, presented by Greg Eisenhauer</a>, was a full-length paper that caught me by surprise and exposed how much performance varies when using different APIs into DAOS. This slide is one of many that highlighted this:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>I naively thought that the choice of native userspace API (key-value or array) would have negligible effects on performance, but Eisenhauer's talk showed that this isn't true. The reality appears to be that, although DAOS is capable of handling unaligned writes better than Lustre, aligning arrays on large, power-of-two boundaries still has a significant performance benefit.</p>
<p>Based on these sorts of technical talks about DAOS presented this year, the original question--is DAOS ready for prime time--can't be answered with a simple yes or no yet.  The performance it offers is truly best in class, but achieving that performance doesn't come easy right now. Teams who are already putting heroic effort into solving a high-value problems will probably leap at the opportunity to realize the I/O performance that DAOS can deliver. Such high value problems include things like training the next generation of foundational LLMs, and GCP's bet on DAOS probably adds differentiable value to their platform as a place to train such models as efficiently as possible. But the complexity of DAOS at present probably limits its appeal to the highest echelons of leadership HPC and AI, and I think it'll be a while before DAOS is in a place where a typical summer intern will be able to appreciate its full value.</p>
<h3>Infinia</h3></div>
<p>It would be unfair of me to give all this regard to WEKA, VAST, and DAOS without also mentioning <a href="https://www.ddn.com/press-releases/ddn-launches-infinia-next-generation-software-defined-storage-for-enterprise-ai-and-cloud-needs-everywhere-and-all-at-once/">DDN's brand new Infinia product, launched right before SC23</a>. Those in the HPC storage industry have been awaiting its launch for years now, but despite the anticipation, it really didn't come up in any conversations in which I was involved. I did learn that the engineering team developing Infinia inside DDN is completely separate from the Whamcloud team who is developing Lustre, but this could be a double-edged sword. On the good side, it means that open-source Lustre development effort isn't competing with DDN's proprietary product in engineering priorities on a day-to-day basis. On the bad side though, I still struggle to see how Infinia and Lustre can avoid eventually competing for the same business.</p>
<p>For the time being, Infinia does seem to prioritize more enterprisey features like multitenancy and hands-free operation while Lustre is squarely aimed at delivering maximum performance to a broadening range of workloads. Their paths may eventually cross, but that day is probably a long way off, and Lustre has the benefit of being deeply entrenched across the HPC industry.</p>
<h2>The emergence of pure-play GPU clouds</h2>
<p>In addition to chatting with people about what's new in storage, I also went into SC23 wanting to understand how other cloud service providers are structuring end-to-end solutions for large-scale AI workloads. What I didn't anticipate was how many smaller cloud service providers (CSPs) showed up to SC for the first time this year, all waving the banner of offering NVIDIA H100 GPUs. These are predominantly companies that either didn't exist a few years ago or have historically focused on commodity cloud services like virtual private servers and managed WordPress sites, so it was jarring to suddenly see them at an HPC conference. How did so many of these smaller CSPs suddenly become experts in deploying GPU-based supercomputers in the time between SC22 and SC23? </p>
<p>I got to talking to a few folks at these smaller CSPs to figure out exactly what they were offering to customers, and their approach is quite different from how AWS, Azure, and GCP operate. Rather than defining a standard cluster architecture and deploying copies of it all over to be consumed by whoever is willing to pay, these smaller CSPs deploy clusters of whitebox GPU nodes to customer specification and sell them as dedicated resources for fixed terms. If a customer wants a bunch of HGX H100s interconnected with InfiniBand, that's what they get. If they want RoCE, the CSP will deploy that instead. And the same is true with storage: if a customer wants EXAScaler or Weka, they'll deploy that too.</p>
<p>While this is much closer to a traditional on-prem cluster deployment than a typical elastic, pay-as-you-go infrastructure-as-a-service offering, this is different from being a fancy colo. The end customer still consumes those GPUs as a cloud resource and never has to worry about the infrastructure that has to be deployed behind the curtain, and when the customer's contract term is up, their cluster is still owned by the CSP. As a result, the CSP can either resell that same infrastructure via pay-as-you-go or repurpose it for another dedicated customer. By owning the GPUs and selling them as a service, these CSPs can also do weird stuff like take out giant loans to build more data centers using GPUs as collateral. Meanwhile, NVIDIA can sell GPUs wholesale to these CSPs, book the revenue en masse, and let the CSPs deal with making sure they're maintained in production and well utilized.</p>
<p>It also seems like the services that customers of these smaller CSPs get is often more barebones than what they'd get from a Big 3 CSP (AWS, Azure, and GCP). They get big GPU nodes and an RDMA fabric, but managed services beyond that are hit and miss.</p>
<p>For example, one of these smaller CSPs told me that most of their storage is built on hundreds of petabytes of open-source Ceph. Ceph fulfills the minimum required storage services that any cloud must provide (object, block, and file), but it's generally insufficient for large-scale model training. As a result, all the smaller CSPs with whom I spoke said they are also actively exploring VAST and Weka as options for their growing GPU-based workloads. Since both VAST and Weka offer solid S3 and file interfaces, either could conceivably act as the underpinnings of these GPU clouds' first-party storage services as well.</p>
<p>As I said above though, it seems like the predominant model is for these CSPs to just ship whatever dedicated parallel storage the customer wants if something like Ceph isn't good enough. This, and the growing interest in storage from companies like VAST and Weka, suggest a few things:</p>
<p></p>
<ul><li>Some of these CSPs have been obtaining and deploying GPUs faster than they've had time to think about the end-to-end experience, and customers have so much pent-up demand for GPUs that they're willing to either work with whatever third-party storage vendor is brought to the table or take on the responsibility of choosing their preferred storage vendor themselves.</li><li>Having giant piles of GPUs is necessary, but not sufficient, to have a competitive offering in the GPU cloud services landscape. A credible platform for AI training must also have an integrated high-performance storage service.</li><li>It is looking like many pure-play GPU clouds are finding it more cost-effective to buy their way out of high-performance storage problems through partnerships than build and manage their own services atop open-source software like Lustre or DAOS.</li></ul>
<p>None of these observations are terribly surprising; at the price these smaller CSPs are offering GPUs compared to the Big 3 CSPs, their gross margin (and therefore their ability to invest in developing services on top of their IaaS offerings) has got to be pretty low. In the short term, it's cheaper and easier to deploy one-off high-performance storage systems alongside dedicated GPU clusters based on customer demand than develop and support a standard solution across all customers.</p>
<p>Of course, building a low-cost GPU service opens the doors for other companies to develop their own AI services on top of inexpensive GPU IaaS that is cost-competitive with the Big 3's native AI platforms (AWS SageMaker, Azure Machine Learning, and Google AI Platform). For example, I chatted with some folks at <a href="https://www.together.ai/">together.ai</a>, a startup whose booth caught my eye with its bold claim of being "the fastest cloud for [generative] AI:"</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>Contrary to their banner, they aren't a cloud; rather, they provide AI services--think inferencing and fine-tuning--that are accessible through an API much like <a href="https://platform.openai.com/docs/guides/fine-tuning">OpenAI's API</a>. They've engineered their backend stack to be rapidly deployable on any cloud that provides basic IaaS like GPU-equipped VMs, and this allows them to actually run their computational backend on whatever cloud can offer the lowest-cost, no-frills GPU VMs. In a sense, companies like together.ai develop and sell the frills that these new GPU CSPs lack, establishing a symbiotic alternative to the vertically integrated AI platforms on bigger clouds.</p>
<p>I did ask a few of these smaller CSPs what their overall pitch was. Why I would choose GPU cloud X over their direct competitor GPU cloud Y? The answers went in two directions:</p>
<p></p>
<ol><li>They offer lower cost per GPU hour than their competition</li><li>They are faster to get GPUs off a truck and into production than their competition</li></ol>
<p>There's a big caveat here: I didn't talk to many representatives at these CSPs, so my sample size was small and not authoritative. However, taking these value propositions at face value struck me as being quite precarious since their value is really a byproduct of severe GPU shortages driven by the hyped-up AI industry. What happens to these CSPs (and the symbionts whose businesses depend on them) when AMD GPUs appear on the market in volume? What happens if NVIDIA changes course and, instead of peanut-buttering its GPUs across CSPs of all sizes, it focuses its attention on prioritizing deliveries to just a few blessed CSPs?</p>
<p>There is <a href="https://a16z.com/who-owns-the-generative-ai-platform/">no moat around generative AI</a>, and I left SC23 feeling like there's a dearth of long-term value being generated by some of these smaller GPU CSPs. For those CSPs whose primary focus is buying and deploying as many GPUs in as short a time as possible, not everyone can survive. They'll either come out of this GPU shortage having lost a lot of money building data centers that will go unused, or they'll be sold for parts.</p>
<p>More importantly to me though, I learned that I should give less credence to the splashy press events of hot AI-adjacent startups if their successes lie exclusively with smaller GPU CSPs. Some of these CSPs are paying to make their problems go away in an effort to keep their focus on racking and stacking GPUs in the short term, and I worry that there's a lack of long-term vision and strong opinions in some of these companies. Some of these smaller CSPs seem much more like coin-operated GPU cluster vending machines than platform providers, and that business model doesn't lend itself to making big bets and changing the industry.</p>
<p>Put another way, my job--both previous and current--has always been to think beyond short-term band aids and make sure that my employer has a clear and opinionated view of the technical approach that will be needed to address the challenges of HPC ten years in the future. I know who my peers are at the other Big 3 CSPs and leadership computing facilities across the world, and I know they're thinking hard about the same problems that I am. What worries me is that I do <u>not</u> know who my peers are at these smaller CSPs, and given their speed of growth and smaller margins, I worry that they aren't as prepared for the future as they will need to be. The AI industry as a whole will be better off when GPUs are no longer in such short supply, but the ecosystem surrounding some of these smaller GPU CSPs is going to take some damage when that day comes.</p>
<p></p>
<p></p>
<h2>Other dribs and drabs</h2>
<div>I also had a lot of interesting conversations and noticed a few subtle themes last week that don't neatly fit into any other category, but I'd love to hear more from others if they noticed the same or have more informed opinions.</div>
<h3>APUs and superchips - are they really that useful?</h3>
<p>Because I spent my booth duty standing next to one of Eagle's 8-way HGX H100 nodes, a lot of people asked me if I thought the Grace Hopper superchip would be interesting. I'm not an expert in either GPUs or AI, but I did catch up with a few colleagues who are smarter than me in this space last week, and here's the story as I understand it:</p>
<p>The Grace Hopper superchip (let's just call it GH100) is an evolution of the architecture developed for Summit, where V100 GPUs were cache-coherent with the CPUs through a special widget that converted NVLink to the on-chip coherence protocol for Power9. With GH100, the protocol used to maintain coherence across the CPU is directly compatible with the ARM AMBA coherence protocol, eliminating one bump in the path that Power9+V100 had. Grace also has a much more capable memory subsystem and NOC that makes accessing host memory from the GPU more beneficial.</p>
<p>Now, do AI workloads really need 72 cores per H100 GPU? Probably not.</p>
<p>What AI (and HPC) will need are some high-performance cores to handle all the parts of application execution that GPUs are bad at--divergent code paths, pointer chasing, and I/O. Putting capable CPU cores (Neoverse V2, not the N2 used in CPUs like new <a href="https://www.tomshardware.com/news/microsoft-azure-maia-ai-accelerator-cobalt-cpu-custom">Microsoft's Cobalt 100</a>) on a capable NOC that is connected to the GPU memory subsystem at 900 GB/s opens doors for using hierarchical memory to train LLMs in clever ways.</p>
<p>For example, naively training an LLM whose weights and activations are evenly scattered across both host memory and GPU memory won't go well since that 900 GB/s of NVLink C2C would be on the critical path of many computations. However, techniques like <a href="https://lightning.ai/docs/pytorch/1.4.4/advanced/advanced_gpu.html#fairscale-activation-checkpointing">activation checkpointing</a> could become a lot more versatile when the cost of offloading certain tensors from GPU memory is so much lower. In essence, the presence of easily accessible host memory will likely allow GPU memory to be used more efficiently since the time required to transfer tensors into and out of HBM is easier to hide underneath other computational steps during training.</p>
<p>Pairing an over-specified Grace CPU with a Hopper GPU also allows the rate of GPU development to proceed independently of CPU development. Even if workloads that saturate an H100 GPU might not also need all 72 cores of the Grace CPU, H200 or other future-generation GPUs can grow into the capabilities of Grace without having to rev the entire superchip.</p>
<p>I didn't get a chance to talk to any of my colleagues at AMD to get their perspective on the MI300 APU, but I'd imagine their story is a bit simpler since their memory space is flatter than NVIDIA's superchip design. This will make training some models undoubtedly more straightforward but perhaps leave less room for sophisticated optimizations that can otherwise cram more of a model into a given capacity of HBM. I'm no expert though, and I'd be happy to reference any explanations that real experts can offer! </p>
<h3>What about quantum?</h3>
<p>Quantum computing has been a hot topic for many years of SC now, but it feels like a topic that is finally making its way out of pure CS research and into the minds of the everyday HPC facility leaders. I talked to several people last week who asked me for my opinion on quantum computing because they have come to the realization that they need to know more about it than they do, and I have to confess, I'm in the same boat as they are. I don't follow quantum computing advancements very closely, but I know an increasing number of people who do--and they're the sort who work in CTOs' offices and have to worry about risks and opportunities more than intellectual curiosities.</p>
<p>It's hard to say there've been any seismic shifts in the state of the art in quantum computing at SC23; as best I can tell, there's still a rich ecosystem of venture capital-backed startups who keep cranking out more qubits. But this year felt like the first year where HPC facilities who haven't yet started thinking about their position on quantum computing are now behind. Not everyone needs a quantum computer, and not everyone even needs a quantum computing researcher on staff. But everyone should be prepared with a strong point of view if they are asked "what will you be doing with quantum computing?" by a funding agency or chief executive.</p>
<h3>NextSilicon</h3>
<p>One of the least-stealthy stealth-mode startups in the HPC industry has been NextSilicon, a company who debuted from stealth mode at SC23, launched their new Maverick accelerator, and announced their first big win with <a href="https://www.sandia.gov/research/2023/11/09/sandia-partners-with-nextsilicon-and-penguin-solutions-to-deliver-first-of-its-kind-runtime-reconfigurable-accelerator-technology/">Sandia National Lab's Vanguard II project</a>. </p>
<p>What's notable about NextSilicon is that, unlike just about every other accelerator startup out there, they are not trying to go head-to-head with NVIDIA in the AI acceleration market. Rather, they've created a dataflow accelerator that aims to accelerate challenging HPC workloads that GPUs are particularly bad at--things like irregular algorithms and sparse data structures. They've paired this hardware with a magical runtime that continually optimizes the way the computational kernel is mapped to the accelerator's reconfigurable units to progressively improve the throughput of the accelerator as the application is running.</p>
<p>The concept of dataflow accelerators has always been intriguing since they're the only alternative to improving computational throughput besides making larger and larger vectors. The challenge has always been that these accelerators are more like FPGAs than general-purpose processors, and they require similar amounts of hardcore CS expertise to use well. NextSilicon claims to have cracked that nut with their runtime, and it seems like they're hiring the rights sorts of people--real HPC with respectable pedigrees--to make sure their accelerator can really deliver value to HPC workloads.</p>
<h3>I/O benchmarking developments</h3>
<p>At the <a href="https://sc23.conference-program.com/presentation/?id=bof144&amp;sess=sess363">IO500 BOF</a>, there was rich discussion about adding new benchmarking modes to IOR and IO500 to represent a wider range of patterns.</p>
<p>More specifically, there's been an ongoing conversation about including a 4K random read test, and it sounds like the most outspoken critics against it have finally softened their stance. I've not been shy about why I think using <a href="https://glennklockwood.blogspot.com/2021/10/iops-are-dumb.html">IOPS as a measure of file system performance is dumb</a>, but 4K random IOPS do establish a lower bound of performance for what a real application might experience. Seeing as how <a href="https://www.glennklockwood.com/benchmarks/io500.html#interpreting-results">IO500 has always been problematic as any representation of how a file system will perform in real-world environments</a>, adding the option to run a completely synthetic, worst-case workload will give IO500 the ability to define a complete bounding box around the lower and upper limits of I/O performance for a file system.</p>
<p>Hendrik Nolte from GWDG also proposed a few new and appealing IOR modes that approach more realistic workload scenarios.  The first was a new locally random mode where data is randomized within IOR segments but segments are repeated:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>Compared to globally randomized reads (which is what IOR normally does), this is much closer representation of parallel workloads that are not bulk-synchronous; for example, NCBI BLAST uses thread pools and work sharing to walk through files, and the resulting I/O pattern is similar to this new mode.</p>
<p>He also described a proposal to run concurrent, mixed workloads in a fashion similar to how fio currently works.  Instead of performing a bulk-synchronous parallel write followed by a bulk-synchronous parallel read, his proposal would allow IOR to perform reads and writes concurrently, more accurately reflecting the state of multitenant storage systems. I actually wrote <a href="https://github.com/glennklockwood/iopup">a framework to do exactly this and quantify the effects of contention using IOR and elbencho</a>, but I left the world of research before I could get it published. I'm glad to see others seeing value in pursuing this idea.</p>
<p>The other noteworthy development in I/O benchmarking was presented by <a href="https://sc23.conference-program.com/presentation/?id=bof108&amp;sess=sess411">Sven Breuner at the Analyzing Parallel I/O BOF</a> where he described a new netbench mode for his excellent <a href="https://github.com/breuner/elbencho">elbencho benchmark tool</a>. This netbench mode behaves similarly to iperf in that it is a network-level throughput test, but because it is part of elbencho, it can generate the high-bandwidth incasts and broadcasts that are typically encountered between clients and servers of parallel storage systems:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>This is an amazing development because it makes elbencho a one-stop shop for debugging the entire data path of a parallel storage system. For example, if you're trying to figure out why the end-to-end performance of a file system is below expectation, you can use elbencho to test the network layer, the object or file layer, the block layer, and the overall end-to-end path separately to find out which layer is underperforming. Some file systems have specialized included tools to perform the same network tests (e.g., <a href="https://github.com/IBM/SpectrumScale_NETWORK_READINESS/blob/master/nsdperf.C">nsdperf for IBM Spectrum Scale</a>), but elbencho now has a nice generic way to generate these network patterns for any parallel storage system.</p>
<h2>Some personal thoughts</h2>
<p>As with last year, I couldn't attend most of the technical program due to a packed schedule of customer briefings and partner meetings, but the <a href="https://sc23.supercomputing.org/attend/digital-experience/">SC23 Digital Experience</a> was excellently done, and I wound up watching a lot of the content I missed during the mornings and after the conference (at 2x speed!). In that sense, the hybrid nature of the conference is making it easier to attend as someone who has to juggle business interests with technical interests; while I can't jump into <a href="https://sc23.conference-program.com/presentation/?id=bof131&amp;sess=sess392">public arguments about the definition of storage "QOS"</a>, I can still tell that my old friends and colleagues are still fighting the good fight and challenging conventional thinking across the technical program.</p>
<h3>My Parallel I/O in Practice tutorial</h3>
<p>This was the sixth year that I co-presented the <a href="https://sc23.conference-program.com/presentation/?id=tut134&amp;sess=sess243">Parallel I/O in Practice tutorial</a> with my colleagues Rob Latham, Rob Ross, and Brent Welch. A <a href="https://scphoto.passgallery.com/-sc23/gallery">conference photographer got this great photo</a> of me in the act:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>Presenting this tutorial is always an incredibly gratifying experience; I've found that sharing what I know is one of the most fulfilling ways I can spend my time, and being able to start my week in such an energizing way is what sustains the sleep deprivation that always follows. Giving the tutorial is also an interesting window into what the next generation of I/O experts is worrying about; for example, we got a lot of questions and engagement around the low-level hardware content in our morning half, and the I/O benchmarking material in the late afternoon seemed particularly well received. The majority of attendees came from the systems side rather than the user/dev side as well, perhaps suggesting that the growth in demand for parallel storage systems (and experts to run them) is outstripping the demand for new ways to perform parallel I/O. Guessing wildly, perhaps this means new developers are coming into the field higher up the stack, using frameworks like <a href="https://pypi.org/project/fsspec/">fsspec</a> that abstract away low-level I/O.</p>
<p>Since I've jumped over to working in industry, it's been hard to find the business justification to keep putting work hours into the tutorial despite how much I enjoy it.  I have to confess that I didn't have time to update any of the slides I presented this year even though the world of parallel I/O has not remained the same, and I am going to have to figure out how to better balance these sorts of community contributions with the demands of a day job in the coming years.</p>
<h3>An aside on COVID safety</h3>
<p>At SC22, I fastidiously wore a KN95 mask while indoors and avoided all after-hours events and indoor dining to minimize my risk of catching COVID. At that time, neither my wife nor I had ever gotten COVID before, and I had no desire to bring it home to my family since my father died of COVID-related respiratory failure two years prior. Staying fully masked at SC22 turned out to be a great decision at the time since a significant number of other attendees, including many I spoke with, contracted COVID at SC22. By comparison, I maintained my COVID-free streak through 2022.</p>
<p>This year I took a more risk-tolerant approach for two reasons:</p>
<p></p>
<ol><li>My wife and I both broke our streaks this past summer and contracted COVID while on vacation, so if I got sick, we knew what to expect, and</li><li>I got my gazillionth COVID and flu shots in October in anticipation of attending SC.</li></ol>
<p>Part of my approach to managing risk was bringing my trusty <a href="https://aranet.com/products/aranet4/">Aranet4 CO2 sensor</a> with me so that I could be aware of areas where there was air circulation and the risk of contracting an airborne illness would be higher. I only wore a KN95 at the airport gates and while on the airplane at SC23, and despite going in all-in on after-hours events, indoor dining, and copious meetings and tours of booth duty, I'm happy to report that I made it through the conference without getting sick.</p>
<p>I have no doubt that being vaccinated helped, as I've had several people tell me they tested positive for COVID after we had dinner together in Denver. But it's also notable that the Denver Convention Center had <u>much</u> better ventilation than Kay Bailey Hutchison Convention Center in Dallas where SC22 was held last year. To show this quantitatively, let's compare air quality measurements from SC22 to SC23.</p>
<p>My schedule for the day on which I give my tutorial is always the same: the tutorial runs from 8:30am to 5:00pm with breaks at 10:00, 12:00, and 3:00. Because of this consistent schedule, comparing the CO2 readings (which are a proxy for re-breathed air) for my tutorial day at SC22 versus SC23 shows how different the air quality was in the two conference centers. Here's what that comparison looks like:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>What the plot shows is that CO2 (re-breathed air) steadily increased at the start of the tutorial at both SC22 and SC23, but Denver's convention center kicked on fresh air ventilation after an hour while Dallas simply didn't. Air quality remained poor (over 1,000) throughout the day in Dallas, whereas Denver was pretty fresh (below 700) even during the breaks and the indoor luncheon. This relatively good air circulation inside the convention center at SC23 made me much more comfortable about going maskless throughout the week.</p>
<p>This isn't to say that I felt there was no risk of getting sick this year; there was at least one busy, upscale restaurant/bar in which I dined where the air circulation was no better than in a car or airplane. For folks who just don't want to risk being sick over Thanksgiving, wearing a mask and avoiding crowded bars was probably still the best option this year. And fortunately, Denver's weather was gorgeous, so outdoor dining was completely viable during the week.</p>
<h3>AI's effects on the HPC community</h3>
<p>Although AI has played a prominent role in previous SC conferences, this was the first year where I noticed that the AI industry is bleeding into the HPC community in weird ways.</p>
<p>For example, I had a bunch of journalists and media types accost me and start asking rather pointed questions while I was on booth duty. Talking to journalists isn't entirely unusual since I've always been supportive of industry press, but the social contract between practitioners like me and journalists has always been pretty formal--scheduling a call in advance, being invited to speak at an event, and things like that have long been the norm. If I was being interviewed on the record, I knew it.</p>
<p>This year though, it seemed like there was a new generation of younger journalists who approached me no differently than a casual booth visitor. Some did introduce themselves as members of the press after we got chatting (good), but others did not (not good) which led me to take away a learning: check names and affiliations before chatting with strangers, because the days where I could assume that all booth visitors would act in good faith are gone.</p>
<p>Now, why the sudden change?  I can think of three possible reasons:</p>
<p></p>
<ol><li>I'm getting older, and there are now tech industry journalists who are younger than me and think I am worth talking to since I've always been around. Maybe the old-school HPC folks that predate me have always had to deal with this.</li><li>The proliferation of platforms like Substack make it financially viable to be an independent journalist, and conversely, anyone can be a journalist without editorial oversight.</li><li>The spotlight on the massive AI industry is also illuminating the HPC industry. HPC and AI are both built on the same foundational technologies (GPUs, RDMA fabrics, HBM, and the like) so AI journalists now have a reason to start showing up at HPC community events.</li></ol>
<p>It'd be fair to argue that #3 is a stretch and that this isn't an AI phenomenon if not for the fact that I was also accosted by a few venture capitalists for the first time this year. HPC has never been an industry that attracted the attention of venture capital in the way that AI does, so I have to assume being asked specific questions about the viability of some startup's technology is a direct result of the AI market opportunity.</p>
<p>While it's nice to have a broader community of attendees and more media coverage, the increasing presence of AI-focused media and VC types in the SC community means I can't be as open and honest as I once was. Working for a corporation (with secrets of its own to protect) doesn't help there either, so maybe getting cagier when talking to strangers is just a part of growing up.</p>
<p></p>
<h3>SC23 as a milestone year</h3>
<p>Attending SC23 this year coincided with two personal milestones for me as well.</p>
<p>This is the tenth year I've been in the HPC business, and the first SC I ever attended was SC13.  I can't say that this is my eleventh SC because I didn't attend in 2014 (on account of working at a biotech startup), but I've been to SC13, SC15 through SC19, SC20 and SC21 virtually, and SC22 and SC23 in-person.  At SC13 ten years ago, the weather was a lot colder:</p>
<div class="separator" style="clear: both; text-align: center;"></div>
<p>But I still have the fondest memories of that conference because it that was the week where I felt like I had finally found my community after having spent a decade as an unhappy materials science student.</p>
<p>SC23 is also a milestone year because it may be the last SC I attend as a storage and I/O guy. I recently signed on for a new position within Microsoft to help architect the next generation of supercomputers for AI, and I'll probably have to trade in the time I used to spend at workshops like PDSW for opportunities to follow the latest advancements in large-scale model training, RDMA fabrics, and accelerators. But I think I am OK with that.</p>
<p>I never intended to become an I/O or storage expert when I first showed up at SC13; it wasn't until I joined NERSC that I found that I could learn and contribute the most by focusing on storage problems. The world has changed since then, and now that I'm at Microsoft, it seems like the problems faced at the cutting edge of large language models, generative AI, and the pursuit of AGI are where the greatest need lies. As I said earlier in this post, AI has bigger problems to deal with than storage and I/O, and those bigger problems are what I'll be chasing. With any luck, I'll be able to say I had a hand in designing the supercomputers that Microsoft builds after Eagle. And as has been true for my last ten years in this business, I'll keep sharing whatever I learn with whoever wants to know.</p>]]></content><author><name>Glenn K. Lockwood's Blog</name></author><category term="glennklockwood" /><summary type="html"><![CDATA[The largest high-performance computing industry conference of the year, SC23, was held in Denver last week. This year's conference attracted over 14,000 attendees and 438 exhibitors, finally breaking pre-pandemic records, and it solidly felt like the old days of the conference in terms of breadth of attendees, the technical program, and overall engagement and interaction across the community. This was the second time I've attended the conference as a vendor instead of a customer, and this meant I spent a fair amount of time running to and from meetings instead of walking the show floor or attending technical sessions. I'm sure I missed some major announcements and themes as a result, but I thought it still might be valuable to contribute my observations based on this narrow lens of an AI-minded storage product manager for a major cloud service provider. If you're interested in a more well-rounded perspective, check out the HPC Social Supercomputing 2023 Summary and contribute your own thoughts! I don't know the best way to organize the notes that I took, so I grouped them into a few broad categories: Big news on the Top500What's new in storage for HPC and AIThe emergence of pure-play GPU cloudsOther technological dribs and drabsPersonal thoughts and reflections on the conference and community I must also disclose that I am employed by Microsoft and I attended SC23 in that capacity. However, everything in this post is my own personal viewpoint, and my employer had no say in what I did or didn't write here. Everything below is written from my perspective as an enthusiast, not an employee, although my day job probably colors my outlook on the HPC industry. With all that being said, let's dive into the big news of the week! Big news on the Top500 Unveiling the new Top500 list is the tentpole event of SC every year regardless of how much people (including myself!) deride HPL, and unlike the lists over the past year, this newest listing had two big surprises. Many of us went into the SC23 season wondering if the Aurora system, whose hardware was delivered this past June, would be far enough in installation and shakeout to unseat Frontier as the second listed exascale system. At the same time, nobody had expected another &gt;500 PF supercomputer to appear on the list, much less one operated privately and for-profit. But both systems made big debuts in the top 5, carrying with them interesting implications. The new #2: Argonne's Aurora The Aurora exascale system has a storied history going back to 2015; first conceived of as a 180 PF supercomputer to be delivered in 2018, it evolved into a GPU-based exascale supercomputer that was supposed to land in 2021. Now two years late and a few executives short, Intel and Argonne were stuck between a rock and a hard place in choosing whether to list their HPL results at SC23: If Aurora wasn't listed on SC23's Top500 list, it risked going up against El Capitan at ISC'24 and being completely overshadowed by the simultaneous launch of a newer, bigger exascale system.If Aurora was listed at SC23's Top500 list but in an incomplete form, it would fall short of its long-awaited debut as the #1 system and would require a careful narrative to avoid being seen as a failed system. Intel and Argonne ultimately chose option #2 and listed an HPL run that used only 5,439 of Aurora's 10,624 nodes (51.1% of the total machine), and as expected, people generally understood that this sub-exaflop score was not an indictment of the whole system underdelivering, but more a reflection that the system was still not stable at its full scale. Still, headlines in trade press were dour, and there was general confusion about how to extrapolate Aurora's HPL submission to the full system.  Does the half-system listing of 585.34 PF Rmax at 24.7 MW power mean that the full system will require 50 MW to achieve an Rmax that's still lower than Frontier? Why is the efficiency (Rmax/Rpeak = 55%) so low? Interestingly, about half the people I talked to thought that Argonne should've waited until ISC'24 to list the full system, and the other half agreed that listing half of Aurora at SC'23 was the better option. Clearly there was no clearly right answer here, and I don't think anyone can fault Argonne for doing the best they could given the Top500 submission deadline and the state of the supercomputer. In talking to a couple folks from ALCF, I got the impression that there's still plenty of room to improve the score since their HPL run was performed under a time crunch, and there were known issues affecting performance that couldn't have been repaired in time. With any luck, Aurora will be ready to go at full scale for ISC'24 and have its moment in the sun in Hamburg. The new #3: Microsoft's Eagle The other new Top500 entry near the top of the list was Eagle, Microsoft's surprise 561 PF supercomputer. Like Aurora, it is composed of GPU-heavy nodes, and like Aurora, the HPL run utilized only part (1,800 nodes) of the full system. Unlike Aurora though, the full size of Eagle is not publicly disclosed by Microsoft, and its GPU-heavy node architecture was designed for one specific workload: training large language models for generative AI. At the Top500 BOF, Prabhat Ram gave a brief talk about Eagle where he emphasized that the system wasn't a custom-built, one-off stunt machine. Rather, it was built from publicly available ND H100 v5 virtual machines on a single 400G NDR InfiniBand fat tree fabric, and Microsoft had one of the physical ND H100 v5 nodes at its booth.  Here's the back side of it: From top to bottom, you can see it has eight E1.S NVMe drives, 4x OSFP ports which support 2x 400G NDR InfiniBand each, a Microsoft SmartNIC, and a ton of power.  A view from the top shows the HGX baseboard and fans: &lt;p&gt;Logically, this node (and the ND H100 v5 VM that runs on it) looks a lot like the NVIDIA DGX reference architecture. Physically, it is an air-cooled, Microsoft-designed OCP server, and Eagle’s Top500 run used 1,800 of these servers.&lt;/p&gt; Big HPL number aside, the appearance of Eagle towards the top of Top500 has powerful implications on the supercomputing industry at large.  Consider the following. Microsoft is a for-profit, public enterprise whose success is ultimately determined by how much money it makes for its shareholders. Unlike government agencies who have historically dominated the top of the list to show their supremacy in advancing science, the Eagle submission shows that there is now a huge financial incentive to build giant supercomputers to train large language models. This is a major milestone in supercomputing; up to this point, the largest systems built by private industry have come from the oil &amp; gas industry, and they have typically deployed at scales below the top 10. Eagle is also built on the latest and greatest technology--NVIDIA's H100 and NDR InfiniBand--rather than previous-generation technology that's already been proven out by the national labs.  SC23 was the first time Hopper GPUs have appeared anywhere on the Top500 list, and Eagle is likely the single largest installation of both H100 and NDR InfiniBand on the planet. Not only does this signal that it's financially viable to stand up a leadership supercomputer for profit-generating R&amp;D, but industry is now willing to take on the high risk of deploying systems using untested technology if it can give them a first-mover advantage. Eagle also shows us that the potential upside of bringing a massive new AI model to market is worth both the buying all the infrastructure required to build a half-exaflop system and hiring the talent required to shake out what is literally a world-class supercomputer. And while the US government can always obtain a DPAS rating to ensure it gets dibs on GPUs before AI companies can, there is no DPAS rating for hiring skilled individuals to stand up gigantic systems. This all makes me wonder: if Aurora was a machine sitting in some cloud data center instead of Argonne, and its commissioning was blocking the development of the next GPT model, would it have been able to take the #1 spot from Frontier this year? The appearance of such a gigantic system on Top500, motivated by and paid for as part of the AI land grab, also raises some existential questions for the US government. What role should the government have in the supercomputing industry if private industry now has a strong financial driver to invest in the development of leadership supercomputing technologies? Historically, government has always incubated cutting-edge HPC technologies so that they could stabilize enough to be palatable to commercial buyers. Today's leadership supercomputers in the national labs have always wound up as tomorrow's midrange clusters that would be deployed for profit-generating activities like seismic imaging or computer-aided engineering. If the AI industry is now taking on that mantle of incubating and de-risking new HPC technologies, perhaps government now needs to focus on ensuring that the technologies developed and matured for AI can still be used to solve scientific problems. What's new in storage for HPC and AI? Since I spent much of my career working in HPC storage, and I now focus largely on AI, it should be no surprise that I heard a lot about the intersection of AI and storage.  AI remains high in the hype cycle, so it's natural that just about every storage vendor and discussion had some talk of AI forced into it regardless of it was really relevant or not. However, there were a few places where AI and storage topics intersect that I found noteworthy. The AI-storage echo chamber &lt;p&gt;I was asked a lot of questions about storage from journalists, VCs, and even trusted colleagues that followed a common theme: What storage technologies for AI excite me the most? What’s the future of storage for AI?&lt;/p&gt; I don't fault people for asking such a broad question because the HPC/AI storage industry is full of bombastic claims. For example, two prominent storage vendors emblazoned their booths with claims of what their products could do for AI: These photos illustrate the reality that, although there is general agreement that good storage is needed for GPUs and AI, what constitutes "good storage" is muddy and confusing. Assuming the above approach to marketing (10x faster! 20x faster!) is effective for someone out there, there appears to be a market opportunity in just capitalizing on this general confusion by (1) asserting what the I/O problem that's jamming up all AI workloads is, and (2) showing that your storage product does a great job at solving that specific problem. For example, the MLPerf Storage working group recently announced the first MLPerf Storage benchmark, and Huiho Zheng from Argonne (co-author of the underlying DLIO tool on which MLPerf Storage was built) described how the MLPerf Storage benchmark reproduces the I/O characteristics of model training at the Workshop on Software and Hardware Co-Design of Deep Learning Systems in Accelerators: When I saw this premise, I was scratching my head--my day job is to develop new storage products to meet the demands of large-scale AI model training and inferencing, and I have never had a customer come to me claiming that they need support for small and sparse I/O or random access. In fact, write-intensive checkpointing and fine-tuning, not read-intensive data loading, is the biggest challenge faced by those training large language models in my experience. It wasn't until a few slides later did I realize where these requirements may be coming from: Storage and accelerator vendors are both defining and solving the I/O problems of the AI community which seems counterproductive--shouldn't a benchmark be set by the practitioners and not the solution providers? What I learned from talking to attendees, visiting storage vendor booths, and viewing talks like Dr. Zheng's underscores a reality that I've faced on my own work with production AI workloads: AI doesn't actually have an I/O performance problem, so storage vendors are struggling to define ways in which they're relevant in the AI market. I outlined the ways in which LLM training uses storage in my HDF5 BOF talk, and their needs are easy to meet with some local storage and basic programming. So easy, in fact, that a reasonably sophisticated AI practitioner can duct tape their way around I/O problems very quickly and move on to harder problems. There's no reason for them to buy into a sophisticated Rube Goldberg storage system, because it still won't fundamentally get them away from having to resort to local disk to achieve the scalability needed to train massive LLMs. So yes, I've got no doubt that there are storage products that can deliver 10x or 20x higher performance for some specific AI workload. And MLPerf Storage is probably an excellent way to measure that 20x performance boost. But the reality I've experienced is that a half a day of coding will deliver 19x higher performance when compared to the most naive approach, and every AI practitioner knows and does this already. That's why there are a lot of storage vendors fishing in this AI storage pond, but none of them seem to be reeling in any whoppers. This isn't to say that there's nothing interesting going on in high-performance storage though. If the most common question I was asked was "what's the future of storage for AI," the second most common question was "what do you think about VAST and WEKA?" VAST &amp; WEKA Both companies seem to be doing something right since they were top of mind for a lot of conference attendees, and it probably grinds their respective gears that the field still groups them together in the same bucket of "interesting parallel storage systems that we should try out." Rather than throw my own opinion in the pot though (I work with and value both companies and their technologies!), I'll note the general sentiments I observed. WEKA came into the week riding high on their big win as U2's official technology partner in September. Their big booth attraction was a popular Guitar Hero game and leaderboard, and an oversized Bono, presumably rocking out to how much he loves WEKA, presided over one of their seating areas: Much of their marketing centered around accelerating AI and other GPU workloads, and the feedback I heard from the WEKA customers I bumped into during the week backed this up. One person shared that the WEKA client does a great job with otherwise difficult small-file workloads, particularly common in life sciences workloads, and this anecdote is supported by the appearance of a very fast WEKA cluster owned by MSK Cancer Center on the IO500 Production list. People also remarked about WEKA's need for dedicated CPU cores and local storage to deliver the highest performance; this, combined with its client scalability, lends itself well to smaller clusters of fat GPU nodes. I didn't run into anyone using WEKA in the cloud though, so I assume the feedback I gathered had a bias towards more conventional, on-prem styles of architecting storage for traditional HPC. Whereas WEKA leaned into its rock 'n' roll theme this year, VAST doubled down on handing out the irresistibly tacky light-up cowboy hats they introduced last year (which I'm sure their neighbors at the DDN booth absolutely loved). They were all-in on promoting their new identity as a "data platform" this year, and although I didn't hear anyone refer to VAST as anything but a file system, I couldn't throw a rock without hitting someone who either recently bought a VAST system or tried one out. Unlike last year though, customer sentiment around VAST wasn't all sunshine and rainbows, and I ran into a few customers who described their presales engagements as more formulaic than the white-glove treatment everyone seemed to be getting a year ago. This isn't surprising; there's no way to give all customers the same royal treatment as a business scales. But it does mean that the honeymoon period between VAST and the HPC industry is probably at an end, and they will have to spend the time between now and SC24 focusing on consistent execution to maintain the momentum they've gotten from the light-up cowboy hats. The good news for VAST is that they've landed some major deals this past year, and they came to SC with customers and partners in-hand. They co-hosted a standing-room-only party with CoreWeave early in the week and shared a stage with Lambda at a customer breakfast, but they also highlighted two traditional, on-prem HPC customers (TACC and NREL) at the latter event. VAST clearly isn't letting go of the on-prem HPC market as it also pursues partnerships with emerging GPU cloud service providers; this contrasted with WEKA's apparent focus on AI, GPUs, and the cloud. Time will tell which strategy (if either, or both) proves to be the better approach. DAOS Though commercial buyers were definitely most interested in VAST and WEKA, folks from the more sophisticated HPC shops around the world also tossed a few questions about DAOS my way this year. I usually make it a point to attend the annual DAOS User Group meeting since it is always attended by all the top minds in high-performance I/O research, but I had to miss it this year on account of it running at the same time as my I/O tutorial. Fortunately, DAOS was pervasive throughout the conference, and there was no shortage of opportunity to find out what the latest news in the DAOS was. For example, check out the lineup for PDSW 2023 this year: Three out of thirteen talks were about DAOS which is more than any other single storage product or project. DAOS also won big at this year's IO500, taking the top two spots in the production storage system list: &lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt; In fact, DAOS underpinned every single new awardee this year, and DAOS is now the second most represented storage system on the list behind Lustre: Why is DAOS at the top of so many people's minds this year? Well, DAOS reached a few major milestones in the past few months which has thrust it into the public eye.   First, Aurora is finally online and running jobs, and while the compute system is only running at half its capability, the full DAOS system (all 220 petabytes of it, all of which is TLC NVMe) is up and running--a testament to the scalability of DAOS that many parallel storage systems--including VAST and WEKA--have not publicly demonstrated. Because DAOS is open-source software and Aurora is an open-science system, all of DAOS' at-scale warts are also on full display to the community in a way that no competitive storage system besides of Lustre is. Second, Google Cloud cast a bold vote of confidence in DAOS by launching Parallelstore, its high-performance parallel file service based on DAOS, in August. Whereas AWS and Azure have bet on Lustre to fill the high-performance file gap (via FSx Lustre and Azure Managed Lustre), GCP has planted a stake in the ground by betting that DAOS will be the better foundation for a high-performance file service for HPC and AI workloads. Parallelstore is still in private preview and details are scant, but GCP had DAOS and Parallelstore dignitaries at all the major storage sessions in the technical program to fill in the gaps. From what I gathered, Parallelstore is still in its early stages and is intended to be a fast scratch tier; it's using DRAM for metadata which means it relies on erasure coding across servers to avoid data loss on a single server reboot, and there's no way to recover data if the whole cluster goes down at once. This lack of durability makes it ineligible for the IO500 list right now, but the upcoming metadata-on-NVMe feature (which previews in upstream DAOS in 1H2024) will be the long-term solution to that limitation. Finally, the third major bit of DAOS news was about the formation of the DAOS Foundation. First announced earlier this month, this initiative lives under the umbrella of the Linux Foundation and is led by its five founding members: Argonne National Laboratory, who has a vested interest in seeing DAOS endure given its massive investment in it,Enakta Labs, a company spun out of Croit, a German storage services company that was contributing feature development to DAOS,Google Cloud, who has made a big bet on DAOS as the underpinnings for its Parallelstore service,HPE, who has a shared fate with the DAOS installation at Argonne and who has also been contributing feature development, andIntel, whose engineers largely developed DAOS as part of the Aurora program. I see this handoff of DAOS from Intel to this new foundation as a positive change that makes DAOS a more stable long-term bet; should Intel choose to divest itself of DAOS once its obligations to the Aurora program end, DAOS now can live on without the community having to fork it. The DAOS Foundation is somewhat analogous to OpenSFS (one of the nonprofits backing Lustre) in that it is a vendor-neutral organization around which the DAOS community can gather. But unlike OpenSFS, the DAOS Foundation will also assume the responsibility of releasing new versions of DAOS after Intel releases its final version (2.6) in March 2024. The DAOS Foundation will also steer feature prioritization, but seeing as how the DAOS Foundation doesn't fund developers directly, it's not clear that contributors like Intel or GCP are actually at the mercy of the foundation's decisions. It's more likely that the DAOS Foundation will just have authority to decide what features will roll up into the next formal DAOS release, and developers contributing code to DAOS will still prioritize whatever features their employers tell them to. So, DAOS was the talk of the town at SC23. Does this all mean that DAOS is ready for prime time? While Intel and Argonne may say yes, the community seems to have mixed feelings.  Consider this slide presented by László Szűcs from LRZ at the DAOS Storage Community BOF: DAOS is clearly crazy fast and scales to hundreds of petabytes in production--Aurora's IO500 listing proves that. However, that performance comes with a lot of complexity that is currently being foisted on application developers, end-users, and system administrators. The "opportunities" listed in László's slide are choices that people running at leadership HPC scale may be comfortable making, but the average HPC user is not equipped to make many of these decisions and make thoughtful choices about container types and library interfaces. The fact that DAOS was featured so prominently at PDSW--a research workshop--probably underscores this as well. This slide presented by Adrian Jackson's lighting talk sums up the complexity along two different dimensions: His results showed that your choice of DAOS object class and I/O library atop the DAOS POSIX interface can result in wildly different checkpoint bandwidth. It's hard enough to teach HPC users about getting optimal performance out of a parallel file system like Lustre; I can't imagine those same users will embrace the idea that they should be mindful of which object class they use as they generate data. The other DAOS-related research talk, presented by Greg Eisenhauer, was a full-length paper that caught me by surprise and exposed how much performance varies when using different APIs into DAOS. This slide is one of many that highlighted this: I naively thought that the choice of native userspace API (key-value or array) would have negligible effects on performance, but Eisenhauer's talk showed that this isn't true. The reality appears to be that, although DAOS is capable of handling unaligned writes better than Lustre, aligning arrays on large, power-of-two boundaries still has a significant performance benefit. Based on these sorts of technical talks about DAOS presented this year, the original question--is DAOS ready for prime time--can't be answered with a simple yes or no yet.  The performance it offers is truly best in class, but achieving that performance doesn't come easy right now. Teams who are already putting heroic effort into solving a high-value problems will probably leap at the opportunity to realize the I/O performance that DAOS can deliver. Such high value problems include things like training the next generation of foundational LLMs, and GCP's bet on DAOS probably adds differentiable value to their platform as a place to train such models as efficiently as possible. But the complexity of DAOS at present probably limits its appeal to the highest echelons of leadership HPC and AI, and I think it'll be a while before DAOS is in a place where a typical summer intern will be able to appreciate its full value. Infinia It would be unfair of me to give all this regard to WEKA, VAST, and DAOS without also mentioning DDN's brand new Infinia product, launched right before SC23. Those in the HPC storage industry have been awaiting its launch for years now, but despite the anticipation, it really didn't come up in any conversations in which I was involved. I did learn that the engineering team developing Infinia inside DDN is completely separate from the Whamcloud team who is developing Lustre, but this could be a double-edged sword. On the good side, it means that open-source Lustre development effort isn't competing with DDN's proprietary product in engineering priorities on a day-to-day basis. On the bad side though, I still struggle to see how Infinia and Lustre can avoid eventually competing for the same business. For the time being, Infinia does seem to prioritize more enterprisey features like multitenancy and hands-free operation while Lustre is squarely aimed at delivering maximum performance to a broadening range of workloads. Their paths may eventually cross, but that day is probably a long way off, and Lustre has the benefit of being deeply entrenched across the HPC industry. The emergence of pure-play GPU clouds In addition to chatting with people about what's new in storage, I also went into SC23 wanting to understand how other cloud service providers are structuring end-to-end solutions for large-scale AI workloads. What I didn't anticipate was how many smaller cloud service providers (CSPs) showed up to SC for the first time this year, all waving the banner of offering NVIDIA H100 GPUs. These are predominantly companies that either didn't exist a few years ago or have historically focused on commodity cloud services like virtual private servers and managed WordPress sites, so it was jarring to suddenly see them at an HPC conference. How did so many of these smaller CSPs suddenly become experts in deploying GPU-based supercomputers in the time between SC22 and SC23?  I got to talking to a few folks at these smaller CSPs to figure out exactly what they were offering to customers, and their approach is quite different from how AWS, Azure, and GCP operate. Rather than defining a standard cluster architecture and deploying copies of it all over to be consumed by whoever is willing to pay, these smaller CSPs deploy clusters of whitebox GPU nodes to customer specification and sell them as dedicated resources for fixed terms. If a customer wants a bunch of HGX H100s interconnected with InfiniBand, that's what they get. If they want RoCE, the CSP will deploy that instead. And the same is true with storage: if a customer wants EXAScaler or Weka, they'll deploy that too. While this is much closer to a traditional on-prem cluster deployment than a typical elastic, pay-as-you-go infrastructure-as-a-service offering, this is different from being a fancy colo. The end customer still consumes those GPUs as a cloud resource and never has to worry about the infrastructure that has to be deployed behind the curtain, and when the customer's contract term is up, their cluster is still owned by the CSP. As a result, the CSP can either resell that same infrastructure via pay-as-you-go or repurpose it for another dedicated customer. By owning the GPUs and selling them as a service, these CSPs can also do weird stuff like take out giant loans to build more data centers using GPUs as collateral. Meanwhile, NVIDIA can sell GPUs wholesale to these CSPs, book the revenue en masse, and let the CSPs deal with making sure they're maintained in production and well utilized. It also seems like the services that customers of these smaller CSPs get is often more barebones than what they'd get from a Big 3 CSP (AWS, Azure, and GCP). They get big GPU nodes and an RDMA fabric, but managed services beyond that are hit and miss. For example, one of these smaller CSPs told me that most of their storage is built on hundreds of petabytes of open-source Ceph. Ceph fulfills the minimum required storage services that any cloud must provide (object, block, and file), but it's generally insufficient for large-scale model training. As a result, all the smaller CSPs with whom I spoke said they are also actively exploring VAST and Weka as options for their growing GPU-based workloads. Since both VAST and Weka offer solid S3 and file interfaces, either could conceivably act as the underpinnings of these GPU clouds' first-party storage services as well. As I said above though, it seems like the predominant model is for these CSPs to just ship whatever dedicated parallel storage the customer wants if something like Ceph isn't good enough. This, and the growing interest in storage from companies like VAST and Weka, suggest a few things: Some of these CSPs have been obtaining and deploying GPUs faster than they've had time to think about the end-to-end experience, and customers have so much pent-up demand for GPUs that they're willing to either work with whatever third-party storage vendor is brought to the table or take on the responsibility of choosing their preferred storage vendor themselves.Having giant piles of GPUs is necessary, but not sufficient, to have a competitive offering in the GPU cloud services landscape. A credible platform for AI training must also have an integrated high-performance storage service.It is looking like many pure-play GPU clouds are finding it more cost-effective to buy their way out of high-performance storage problems through partnerships than build and manage their own services atop open-source software like Lustre or DAOS. None of these observations are terribly surprising; at the price these smaller CSPs are offering GPUs compared to the Big 3 CSPs, their gross margin (and therefore their ability to invest in developing services on top of their IaaS offerings) has got to be pretty low. In the short term, it's cheaper and easier to deploy one-off high-performance storage systems alongside dedicated GPU clusters based on customer demand than develop and support a standard solution across all customers. Of course, building a low-cost GPU service opens the doors for other companies to develop their own AI services on top of inexpensive GPU IaaS that is cost-competitive with the Big 3's native AI platforms (AWS SageMaker, Azure Machine Learning, and Google AI Platform). For example, I chatted with some folks at together.ai, a startup whose booth caught my eye with its bold claim of being "the fastest cloud for [generative] AI:" Contrary to their banner, they aren't a cloud; rather, they provide AI services--think inferencing and fine-tuning--that are accessible through an API much like OpenAI's API. They've engineered their backend stack to be rapidly deployable on any cloud that provides basic IaaS like GPU-equipped VMs, and this allows them to actually run their computational backend on whatever cloud can offer the lowest-cost, no-frills GPU VMs. In a sense, companies like together.ai develop and sell the frills that these new GPU CSPs lack, establishing a symbiotic alternative to the vertically integrated AI platforms on bigger clouds. I did ask a few of these smaller CSPs what their overall pitch was. Why I would choose GPU cloud X over their direct competitor GPU cloud Y? The answers went in two directions: They offer lower cost per GPU hour than their competitionThey are faster to get GPUs off a truck and into production than their competition There's a big caveat here: I didn't talk to many representatives at these CSPs, so my sample size was small and not authoritative. However, taking these value propositions at face value struck me as being quite precarious since their value is really a byproduct of severe GPU shortages driven by the hyped-up AI industry. What happens to these CSPs (and the symbionts whose businesses depend on them) when AMD GPUs appear on the market in volume? What happens if NVIDIA changes course and, instead of peanut-buttering its GPUs across CSPs of all sizes, it focuses its attention on prioritizing deliveries to just a few blessed CSPs? There is no moat around generative AI, and I left SC23 feeling like there's a dearth of long-term value being generated by some of these smaller GPU CSPs. For those CSPs whose primary focus is buying and deploying as many GPUs in as short a time as possible, not everyone can survive. They'll either come out of this GPU shortage having lost a lot of money building data centers that will go unused, or they'll be sold for parts. More importantly to me though, I learned that I should give less credence to the splashy press events of hot AI-adjacent startups if their successes lie exclusively with smaller GPU CSPs. Some of these CSPs are paying to make their problems go away in an effort to keep their focus on racking and stacking GPUs in the short term, and I worry that there's a lack of long-term vision and strong opinions in some of these companies. Some of these smaller CSPs seem much more like coin-operated GPU cluster vending machines than platform providers, and that business model doesn't lend itself to making big bets and changing the industry. Put another way, my job--both previous and current--has always been to think beyond short-term band aids and make sure that my employer has a clear and opinionated view of the technical approach that will be needed to address the challenges of HPC ten years in the future. I know who my peers are at the other Big 3 CSPs and leadership computing facilities across the world, and I know they're thinking hard about the same problems that I am. What worries me is that I do not know who my peers are at these smaller CSPs, and given their speed of growth and smaller margins, I worry that they aren't as prepared for the future as they will need to be. The AI industry as a whole will be better off when GPUs are no longer in such short supply, but the ecosystem surrounding some of these smaller GPU CSPs is going to take some damage when that day comes. Other dribs and drabs I also had a lot of interesting conversations and noticed a few subtle themes last week that don't neatly fit into any other category, but I'd love to hear more from others if they noticed the same or have more informed opinions. APUs and superchips - are they really that useful? Because I spent my booth duty standing next to one of Eagle's 8-way HGX H100 nodes, a lot of people asked me if I thought the Grace Hopper superchip would be interesting. I'm not an expert in either GPUs or AI, but I did catch up with a few colleagues who are smarter than me in this space last week, and here's the story as I understand it: The Grace Hopper superchip (let's just call it GH100) is an evolution of the architecture developed for Summit, where V100 GPUs were cache-coherent with the CPUs through a special widget that converted NVLink to the on-chip coherence protocol for Power9. With GH100, the protocol used to maintain coherence across the CPU is directly compatible with the ARM AMBA coherence protocol, eliminating one bump in the path that Power9+V100 had. Grace also has a much more capable memory subsystem and NOC that makes accessing host memory from the GPU more beneficial. Now, do AI workloads really need 72 cores per H100 GPU? Probably not. What AI (and HPC) will need are some high-performance cores to handle all the parts of application execution that GPUs are bad at--divergent code paths, pointer chasing, and I/O. Putting capable CPU cores (Neoverse V2, not the N2 used in CPUs like new Microsoft's Cobalt 100) on a capable NOC that is connected to the GPU memory subsystem at 900 GB/s opens doors for using hierarchical memory to train LLMs in clever ways. For example, naively training an LLM whose weights and activations are evenly scattered across both host memory and GPU memory won't go well since that 900 GB/s of NVLink C2C would be on the critical path of many computations. However, techniques like activation checkpointing could become a lot more versatile when the cost of offloading certain tensors from GPU memory is so much lower. In essence, the presence of easily accessible host memory will likely allow GPU memory to be used more efficiently since the time required to transfer tensors into and out of HBM is easier to hide underneath other computational steps during training. Pairing an over-specified Grace CPU with a Hopper GPU also allows the rate of GPU development to proceed independently of CPU development. Even if workloads that saturate an H100 GPU might not also need all 72 cores of the Grace CPU, H200 or other future-generation GPUs can grow into the capabilities of Grace without having to rev the entire superchip. I didn't get a chance to talk to any of my colleagues at AMD to get their perspective on the MI300 APU, but I'd imagine their story is a bit simpler since their memory space is flatter than NVIDIA's superchip design. This will make training some models undoubtedly more straightforward but perhaps leave less room for sophisticated optimizations that can otherwise cram more of a model into a given capacity of HBM. I'm no expert though, and I'd be happy to reference any explanations that real experts can offer!  What about quantum? Quantum computing has been a hot topic for many years of SC now, but it feels like a topic that is finally making its way out of pure CS research and into the minds of the everyday HPC facility leaders. I talked to several people last week who asked me for my opinion on quantum computing because they have come to the realization that they need to know more about it than they do, and I have to confess, I'm in the same boat as they are. I don't follow quantum computing advancements very closely, but I know an increasing number of people who do--and they're the sort who work in CTOs' offices and have to worry about risks and opportunities more than intellectual curiosities. It's hard to say there've been any seismic shifts in the state of the art in quantum computing at SC23; as best I can tell, there's still a rich ecosystem of venture capital-backed startups who keep cranking out more qubits. But this year felt like the first year where HPC facilities who haven't yet started thinking about their position on quantum computing are now behind. Not everyone needs a quantum computer, and not everyone even needs a quantum computing researcher on staff. But everyone should be prepared with a strong point of view if they are asked "what will you be doing with quantum computing?" by a funding agency or chief executive. NextSilicon One of the least-stealthy stealth-mode startups in the HPC industry has been NextSilicon, a company who debuted from stealth mode at SC23, launched their new Maverick accelerator, and announced their first big win with Sandia National Lab's Vanguard II project.  What's notable about NextSilicon is that, unlike just about every other accelerator startup out there, they are not trying to go head-to-head with NVIDIA in the AI acceleration market. Rather, they've created a dataflow accelerator that aims to accelerate challenging HPC workloads that GPUs are particularly bad at--things like irregular algorithms and sparse data structures. They've paired this hardware with a magical runtime that continually optimizes the way the computational kernel is mapped to the accelerator's reconfigurable units to progressively improve the throughput of the accelerator as the application is running. The concept of dataflow accelerators has always been intriguing since they're the only alternative to improving computational throughput besides making larger and larger vectors. The challenge has always been that these accelerators are more like FPGAs than general-purpose processors, and they require similar amounts of hardcore CS expertise to use well. NextSilicon claims to have cracked that nut with their runtime, and it seems like they're hiring the rights sorts of people--real HPC with respectable pedigrees--to make sure their accelerator can really deliver value to HPC workloads. I/O benchmarking developments At the IO500 BOF, there was rich discussion about adding new benchmarking modes to IOR and IO500 to represent a wider range of patterns. More specifically, there's been an ongoing conversation about including a 4K random read test, and it sounds like the most outspoken critics against it have finally softened their stance. I've not been shy about why I think using IOPS as a measure of file system performance is dumb, but 4K random IOPS do establish a lower bound of performance for what a real application might experience. Seeing as how IO500 has always been problematic as any representation of how a file system will perform in real-world environments, adding the option to run a completely synthetic, worst-case workload will give IO500 the ability to define a complete bounding box around the lower and upper limits of I/O performance for a file system. Hendrik Nolte from GWDG also proposed a few new and appealing IOR modes that approach more realistic workload scenarios.  The first was a new locally random mode where data is randomized within IOR segments but segments are repeated: Compared to globally randomized reads (which is what IOR normally does), this is much closer representation of parallel workloads that are not bulk-synchronous; for example, NCBI BLAST uses thread pools and work sharing to walk through files, and the resulting I/O pattern is similar to this new mode. He also described a proposal to run concurrent, mixed workloads in a fashion similar to how fio currently works.  Instead of performing a bulk-synchronous parallel write followed by a bulk-synchronous parallel read, his proposal would allow IOR to perform reads and writes concurrently, more accurately reflecting the state of multitenant storage systems. I actually wrote a framework to do exactly this and quantify the effects of contention using IOR and elbencho, but I left the world of research before I could get it published. I'm glad to see others seeing value in pursuing this idea. The other noteworthy development in I/O benchmarking was presented by Sven Breuner at the Analyzing Parallel I/O BOF where he described a new netbench mode for his excellent elbencho benchmark tool. This netbench mode behaves similarly to iperf in that it is a network-level throughput test, but because it is part of elbencho, it can generate the high-bandwidth incasts and broadcasts that are typically encountered between clients and servers of parallel storage systems: This is an amazing development because it makes elbencho a one-stop shop for debugging the entire data path of a parallel storage system. For example, if you're trying to figure out why the end-to-end performance of a file system is below expectation, you can use elbencho to test the network layer, the object or file layer, the block layer, and the overall end-to-end path separately to find out which layer is underperforming. Some file systems have specialized included tools to perform the same network tests (e.g., nsdperf for IBM Spectrum Scale), but elbencho now has a nice generic way to generate these network patterns for any parallel storage system. Some personal thoughts As with last year, I couldn't attend most of the technical program due to a packed schedule of customer briefings and partner meetings, but the SC23 Digital Experience was excellently done, and I wound up watching a lot of the content I missed during the mornings and after the conference (at 2x speed!). In that sense, the hybrid nature of the conference is making it easier to attend as someone who has to juggle business interests with technical interests; while I can't jump into public arguments about the definition of storage "QOS", I can still tell that my old friends and colleagues are still fighting the good fight and challenging conventional thinking across the technical program. My Parallel I/O in Practice tutorial This was the sixth year that I co-presented the Parallel I/O in Practice tutorial with my colleagues Rob Latham, Rob Ross, and Brent Welch. A conference photographer got this great photo of me in the act: Presenting this tutorial is always an incredibly gratifying experience; I've found that sharing what I know is one of the most fulfilling ways I can spend my time, and being able to start my week in such an energizing way is what sustains the sleep deprivation that always follows. Giving the tutorial is also an interesting window into what the next generation of I/O experts is worrying about; for example, we got a lot of questions and engagement around the low-level hardware content in our morning half, and the I/O benchmarking material in the late afternoon seemed particularly well received. The majority of attendees came from the systems side rather than the user/dev side as well, perhaps suggesting that the growth in demand for parallel storage systems (and experts to run them) is outstripping the demand for new ways to perform parallel I/O. Guessing wildly, perhaps this means new developers are coming into the field higher up the stack, using frameworks like fsspec that abstract away low-level I/O. Since I've jumped over to working in industry, it's been hard to find the business justification to keep putting work hours into the tutorial despite how much I enjoy it.  I have to confess that I didn't have time to update any of the slides I presented this year even though the world of parallel I/O has not remained the same, and I am going to have to figure out how to better balance these sorts of community contributions with the demands of a day job in the coming years. An aside on COVID safety At SC22, I fastidiously wore a KN95 mask while indoors and avoided all after-hours events and indoor dining to minimize my risk of catching COVID. At that time, neither my wife nor I had ever gotten COVID before, and I had no desire to bring it home to my family since my father died of COVID-related respiratory failure two years prior. Staying fully masked at SC22 turned out to be a great decision at the time since a significant number of other attendees, including many I spoke with, contracted COVID at SC22. By comparison, I maintained my COVID-free streak through 2022. This year I took a more risk-tolerant approach for two reasons: My wife and I both broke our streaks this past summer and contracted COVID while on vacation, so if I got sick, we knew what to expect, andI got my gazillionth COVID and flu shots in October in anticipation of attending SC. Part of my approach to managing risk was bringing my trusty Aranet4 CO2 sensor with me so that I could be aware of areas where there was air circulation and the risk of contracting an airborne illness would be higher. I only wore a KN95 at the airport gates and while on the airplane at SC23, and despite going in all-in on after-hours events, indoor dining, and copious meetings and tours of booth duty, I'm happy to report that I made it through the conference without getting sick. I have no doubt that being vaccinated helped, as I've had several people tell me they tested positive for COVID after we had dinner together in Denver. But it's also notable that the Denver Convention Center had much better ventilation than Kay Bailey Hutchison Convention Center in Dallas where SC22 was held last year. To show this quantitatively, let's compare air quality measurements from SC22 to SC23. My schedule for the day on which I give my tutorial is always the same: the tutorial runs from 8:30am to 5:00pm with breaks at 10:00, 12:00, and 3:00. Because of this consistent schedule, comparing the CO2 readings (which are a proxy for re-breathed air) for my tutorial day at SC22 versus SC23 shows how different the air quality was in the two conference centers. Here's what that comparison looks like: What the plot shows is that CO2 (re-breathed air) steadily increased at the start of the tutorial at both SC22 and SC23, but Denver's convention center kicked on fresh air ventilation after an hour while Dallas simply didn't. Air quality remained poor (over 1,000) throughout the day in Dallas, whereas Denver was pretty fresh (below 700) even during the breaks and the indoor luncheon. This relatively good air circulation inside the convention center at SC23 made me much more comfortable about going maskless throughout the week. This isn't to say that I felt there was no risk of getting sick this year; there was at least one busy, upscale restaurant/bar in which I dined where the air circulation was no better than in a car or airplane. For folks who just don't want to risk being sick over Thanksgiving, wearing a mask and avoiding crowded bars was probably still the best option this year. And fortunately, Denver's weather was gorgeous, so outdoor dining was completely viable during the week. AI's effects on the HPC community Although AI has played a prominent role in previous SC conferences, this was the first year where I noticed that the AI industry is bleeding into the HPC community in weird ways. For example, I had a bunch of journalists and media types accost me and start asking rather pointed questions while I was on booth duty. Talking to journalists isn't entirely unusual since I've always been supportive of industry press, but the social contract between practitioners like me and journalists has always been pretty formal--scheduling a call in advance, being invited to speak at an event, and things like that have long been the norm. If I was being interviewed on the record, I knew it. This year though, it seemed like there was a new generation of younger journalists who approached me no differently than a casual booth visitor. Some did introduce themselves as members of the press after we got chatting (good), but others did not (not good) which led me to take away a learning: check names and affiliations before chatting with strangers, because the days where I could assume that all booth visitors would act in good faith are gone. Now, why the sudden change?  I can think of three possible reasons: I'm getting older, and there are now tech industry journalists who are younger than me and think I am worth talking to since I've always been around. Maybe the old-school HPC folks that predate me have always had to deal with this.The proliferation of platforms like Substack make it financially viable to be an independent journalist, and conversely, anyone can be a journalist without editorial oversight.The spotlight on the massive AI industry is also illuminating the HPC industry. HPC and AI are both built on the same foundational technologies (GPUs, RDMA fabrics, HBM, and the like) so AI journalists now have a reason to start showing up at HPC community events. It'd be fair to argue that #3 is a stretch and that this isn't an AI phenomenon if not for the fact that I was also accosted by a few venture capitalists for the first time this year. HPC has never been an industry that attracted the attention of venture capital in the way that AI does, so I have to assume being asked specific questions about the viability of some startup's technology is a direct result of the AI market opportunity. While it's nice to have a broader community of attendees and more media coverage, the increasing presence of AI-focused media and VC types in the SC community means I can't be as open and honest as I once was. Working for a corporation (with secrets of its own to protect) doesn't help there either, so maybe getting cagier when talking to strangers is just a part of growing up. SC23 as a milestone year Attending SC23 this year coincided with two personal milestones for me as well. This is the tenth year I've been in the HPC business, and the first SC I ever attended was SC13.  I can't say that this is my eleventh SC because I didn't attend in 2014 (on account of working at a biotech startup), but I've been to SC13, SC15 through SC19, SC20 and SC21 virtually, and SC22 and SC23 in-person.  At SC13 ten years ago, the weather was a lot colder: But I still have the fondest memories of that conference because it that was the week where I felt like I had finally found my community after having spent a decade as an unhappy materials science student. SC23 is also a milestone year because it may be the last SC I attend as a storage and I/O guy. I recently signed on for a new position within Microsoft to help architect the next generation of supercomputers for AI, and I'll probably have to trade in the time I used to spend at workshops like PDSW for opportunities to follow the latest advancements in large-scale model training, RDMA fabrics, and accelerators. But I think I am OK with that. I never intended to become an I/O or storage expert when I first showed up at SC13; it wasn't until I joined NERSC that I found that I could learn and contribute the most by focusing on storage problems. The world has changed since then, and now that I'm at Microsoft, it seems like the problems faced at the cutting edge of large language models, generative AI, and the pursuit of AGI are where the greatest need lies. As I said earlier in this post, AI has bigger problems to deal with than storage and I/O, and those bigger problems are what I'll be chasing. With any luck, I'll be able to say I had a hand in designing the supercomputers that Microsoft builds after Eagle. And as has been true for my last ten years in this business, I'll keep sharing whatever I learn with whoever wants to know.]]></summary></entry><entry><title type="html">Advanced LSF resource connector configuration on IBM Cloud - part I</title><link href="https://hpc.social/personal-blog/2023/advanced-lsf-resource-connector-configuration-on-ibm-cloud-part-i/" rel="alternate" type="text/html" title="Advanced LSF resource connector configuration on IBM Cloud - part I" /><published>2023-11-08T02:21:04-07:00</published><updated>2023-11-08T02:21:04-07:00</updated><id>https://hpc.social/personal-blog/2023/advanced-lsf-resource-connector-configuration-on-ibm-cloud-part-i</id><content type="html" xml:base="https://hpc.social/personal-blog/2023/advanced-lsf-resource-connector-configuration-on-ibm-cloud-part-i/"><![CDATA[<p><strong>Overview</strong></p>

<p>This is the first in a series of blogs that discusses some advanced
configuration of the IBM LSF resource connector. LSF resource connector enables
LSF clusters to borrow resources from supported resource providers in the
cloud. LSF includes resource connectors for the following resource providers:</p>

<ul>
<li>IBM Cloud</li>
<li>AWS</li>
<li>Google Cloud Platform</li>
<li>Microsoft Azure</li>
<li>Microsoft Azure CycleCloud</li>
<li>Red Hat OpenShift</li>
<li>OpenStack</li>
</ul>
<p>The resource connector plug-ins for LSF are available under an open source
license (the Apache License 2.0) on the public IBM Spectrum Computing github
<a href="https://github.com/IBMSpectrumComputing/cloud-provider-plugins">here</a>.</p>

<p>LSF resource connector works in conjunction with the LSF multicluster
capability to create a flexible and dynamic hybrid HPC cloud. LSF multicluster
enables organizations to have multiple LSF clusters connect with one another
and to define queues which can forward to remote clusters and receive jobs
from remote clusters. Historically LSF multicluster was used by clients who
have multiple, geographically dispersed compute centres and it allowed them to
connect these environments and have work forwarded between them. Naturally
this can also be used to setup an LSF cluster in the cloud and tie it in to
your existing on-premises LSF cluster. According to a recent Hyperion Research
whitepaper, the most widely adopted framework for leveraging HPC resources in
the cloud is in a hybrid environment where a user runs their HPC workloads
both on-premises and in the cloud.<sup id="fnref:1"><a class="footnote-ref" href="https://www.gaborsamu.com/blog/index.xml#fn:1">1</a></sup></p>

<p><strong>Cloud templates</strong></p>

<p>As part of the configuration of the LSF resource connector, it’s necessary to
define templates which are used to specify a specific cloud instance type. In
other words, the template is used to define a set of hosts with common
attributes including memory and number of cores and operating system image.
These templates are used by LSF when requesting instances from a particular
cloud to satisfy the workload demands.</p>

<p>In this post, we’ll take a closer look at configuring multiple LSF resource
connector templates for IBM Cloud as the resource provider. By default, when
multiple templates are configured, LSF will sort the candidate template
servers alphabetically by template name. However, administrators may wish to
sort the templates according to a specific priority. For example, an
organization may want to assign a high priority to a template corresponding to
a less costly instance type. When priorities are specified for templates, LSF
will use high priority templates first.</p>

<p>The environment used in this example was deployed using the IBM Cloud
automation for LSF. Using Terraform/IBM Cloud Schematics, it’s possible to
automatically deploy a fully functioning LSF cluster in about 10 minutes time.
This includes a login node, NFS storage node, LSF manager node(s) and
LSF Application Center. The automation also configures the LSF resource
connector for the instance type specified at deployment time. More detailed
information can be found about deploying LSF on IBM Cloud <a href="https://cloud.ibm.com/docs/ibm-spectrum-lsf?topic=ibm-spectrum-lsf-getting-started-tutorial">here</a>.</p>

<p>The following steps assume that LSF has been deployed on IBM Cloud. Note that
this is a single LSF cluster and not a hybrid cloud that has been configured.
Now, we’ll look at the following configuration examples:</p>

<ul>
<li>Specifying multiple templates for different cloud instance types with different priorities</li>
<li>Update LSF resource connector user script to load required OS packages on compute nodes</li>
</ul>
<p><strong>Multiple templates</strong></p>

<p>The LSF deployment automation on IBM Cloud configures a single template for
the compute VSI type specified at deployment time. In the example below, we
see a single template configured for VSI profile type <em>bx2-4x16</em>. A complete
list of available IBM Cloud VPC VSI types can be found <a href="https://cloud.ibm.com/docs/vpc?topic=vpc-profiles&amp;interface=ui">here</a>.</p>

<p><strong>ibmcloudgen2_templates.json (obfuscated)</strong>
<div class="highlight"><pre><code class="language-plaintext">{
    "templates": [
        {
            "templateId": "Template-1",
            "maxNumber": 2,
            "attributes": {
                "type": ["String", "X86_64"],
                "ncores": ["Numeric", "2"],
                "ncpus": ["Numeric", "4"],
                "mem": ["Numeric", "16384"],
                "icgen2host": ["Boolean", "1"]
            },
            "imageId": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "subnetId": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "vpcId": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "vmType": "bx2-4x16",
            "securityGroupIds": ["aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff"],
            "resourceGroupId": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
            "sshkey_id": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "region": "us-east",
            "zone": "us-east-1"
        }
    ]
}</code></pre></div>
</p>

<p><strong>Defining priorities</strong></p>

<p>You’ll note that there is no priority specified for the template. When no
priority is defined, LSF sorts the templates according to template name. Next,
we’ll define a second template in the configuration for the VSI instance type
<em>mx2-16x128</em>. At the same time, we’ll introduce the priority parameter and
specify a priority of 10 (higher) for <em>bx2-4x16</em>, and 5 (lower) for
<em>mx2-16x128</em>. More details regarding the parameters can be found <a href="https://www.ibm.com/docs/en/spectrum-lsf/10.1.0?topic=reference-ibmcloudgen2-templatesjson">here</a>. With this configuration, LSF will favour and use the higher priority
template first, which in this case will be for VSI instance type <em>bx2-4x16</em>.</p>

<p><strong>ibmcloudgen2_templates.json (obfuscated, with priorities configured)</strong></p>

<div class="highlight"><pre><code class="language-plaintext">{
    "templates": [
        {
            "templateId": "Template-1",
            "maxNumber": 2,
            "attributes": {
                "type": ["String", "X86_64"],
                "ncores": ["Numeric", "2"],
                "ncpus": ["Numeric", "4"],
                "mem": ["Numeric", "16384"],
                "icgen2host": ["Boolean", "1"] 
            },
            "imageId": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "subnetId": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "vpcId": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "vmType": "bx2-4x16",
            "securityGroupIds": ["aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff"],
            "resourceGroupId": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
            "sshkey_id": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            **"priority": "10",** 
            "region": "us-east",
            "zone": "us-east-1" 
        },

       {
            "templateId": "Template-2",
            "maxNumber": 2,
            "attributes": {
                "type": ["String", "X86_64"],
                "ncores": ["Numeric", "8"],
                "ncpus": ["Numeric", "16"],
                "mem": ["Numeric", "131072"],
                "icgen2host": ["Boolean", "1"]
            },
            "imageId": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "subnetId": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "vpcId": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            "vmType": "mx2-16x128",
            "userData":"profile=mx2_16x128",
            ""securityGroupIds": ["aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff"],
            "resourceGroupId": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
            "sshkey_id": "aaaa-bbbbbbbb-cccc-dddd-eeee-ffffffffffff",
            **"priority": "5",**
            "region": "us-east",
            "zone": "us-east-1"
        }

    ]
}</code></pre></div>

<p><strong>Modifying compute server options</strong></p>

<p>Next, we’ll submit some example jobs to the LSF cluster and observe how the
LSF resource connector template priority influences the startup of resources
by the LSF resource connector. The example job we wish to run is the OS
supplied <em>stress</em> command. <em>stress</em> is not installed in the default compute
images and can be added as part of the startup of the compute servers via the
LSF resource connector user_data.sh script. This script is used to set
environment variables, and control the startup of LSF on the compute servers.
It can also be used to perform customization of the environment, and pass LSF
resources to the compute servers. The user_data.sh script is located in:
<em>/opt/ibm/lsf/conf/resource_connector/ibmcloudgen2</em>.</p>

<p>Modifying the <em>user_data.sh</em> script, I’ve inserted the line to install the OS
<em>stress</em> package before the LSF daemons startup.</p>

<p><strong>user_data.sh</strong></p>

<div class="highlight"><pre><code class="language-plaintext">...
...
**# Install stress utility**
**dnf install stress -y**

cat $LSF_CONF_FILE  &gt;&gt; $logfile

sleep 5
lsf_daemons start &amp;
sleep 5
lsf_daemons status &gt;&gt; $logfile
echo END `date '+%Y-%m-%d %H:%M:%S'` &gt;&gt; $logfile
# Allow login as lsfadmin
nfs_mount_dir="data"
mkdir -p /home/lsfadmin/.ssh
cp /mnt/data/ssh/authorized_keys /home/lsfadmin/.ssh/authorized_keys
cat /mnt/data/ssh/id_rsa.pub &gt;&gt; /root/.ssh/authorized_keys
chmod 600 /home/lsfadmin/.ssh/authorized_keys
chmod 700 /home/lsfadmin/.ssh
chown -R lsfadmin:lsfadmin /home/lsfadmin/.ssh
echo "MTU=9000" &gt;&gt; "/etc/sysconfig/network-scripts/ifcfg-eth0"
systemctl restart NetworkManager
...
...</code></pre></div>

<p>With the updates made to the user_data.sh script, we’re now ready to submit
jobs to LSF. We submit two <em>stress</em> jobs as follows:</p>

<div class="highlight"><pre><code class="language-plaintext">[lsfadmin@icgen2host-10-241-0-37 ~]$ bsub -q normal /usr/bin/stress --cpu 1 --vm-bytes 8192MB --timeout 60s
Job &lt;2836&gt; is submitted to queue &lt;normal&gt;.
[lsfadmin@icgen2host-10-241-0-37 ~]$ bsub -q normal /usr/bin/stress --cpu 1 --vm-bytes 8192MB --timeout 60s
Job &lt;2837&gt; is submitted to queue &lt;normal&gt;.</code></pre></div>

<p>After a few moments, the LSF resource connector automatically starts up a
single compute server on the IBM Cloud with hostname <em>icgen2host-10-241-0-42</em>
to satisfy the pending workload requirements. Note that the hostname prefix
icgen2host stands for IBM Cloud Generation 2 VPC. The numeric portion of the
hostname represents the IP address of the server that was automatically
started by the LSF resource connector. Therefore, this hostname may differ
in your environment. Compute server <em>icgen2host-10-241-0-42</em> is equipped with
4 cores and 16 GB RAM, matching the higher priority template <em>bx2-4x16</em>.</p>

<div class="highlight"><pre><code class="language-plaintext">[lsfadmin@icgen2host-10-241-0-37 ~]$ lshosts -w
HOST_NAME                       type       model  cpuf ncpus maxmem maxswp server RESOURCES
icgen2host-10-241-0-37        X86_64    Intel_E5  12.5     4  15.4G      -    Yes (mg)
icgen2host-10-241-0-42        X86_64    Intel_E5  12.5     4  15.5G      -    Dyn (icgen2host)


[lsfadmin@icgen2host-10-241-0-37 ~]$ bhosts -rc -w
HOST_NAME          STATUS          JL/U    MAX  NJOBS    RUN  SSUSP  USUSP    RSV RC_STATUS             PROV_STATUS           UPDATED_AT             INSTANCE_ID               
icgen2host-10-241-0-37 closed_Full     -      0      0      0      0      0      0           -                     -                     -                      -               
icgen2host-10-241-0-42 ok              -      4      2      2      0      0      0 Allocated             running               2023-11-06T23:02:26UTC 0757_4f5295bd-a265-4fda-840c-6f89e326ca1f </code></pre></div>

<p>As there is no other work that has been submitted to the LSF cluster, once the
<em>stress</em> jobs have completed, the LSF resource connector will automatically
shut down the compute servers according to the <strong>LSB_RC_EXTERNAL_HOST_IDLE_TIME</strong>
parameter in <em>lsf.conf</em>. This defines the time interval after which the LSF
resource connector will relinquish the cloud instances if no jobs are running.</p>

<p><strong>Conclusion</strong></p>

<p>We’ve just scratched the surface in terms of the configuration possibilities
with LSF resource connector. In the next article we’ll look at how LSF
resources can be assigned to servers which are dynamically started by the LSF
resource connector, as well as configuring Docker to point to a local
repository.</p>

<section class="footnotes">
<hr />
<ol>
<li id="fn:1">
<p><a href="https://www.ibm.com/downloads/cas/RGKYOOKB">The Evolution of HPC Includes Strong Use of Hybrid Cloud</a>&#160;<a class="footnote-backref" href="https://www.gaborsamu.com/blog/index.xml#fnref:1">&#x21a9;&#xfe0e;</a></p>

</li>
</ol>
</section>]]></content><author><name>Ramblings of a supercomputing enthusiast.</name></author><category term="gaborsamu" /><summary type="html"><![CDATA[Overview]]></summary></entry><entry><title type="html">LSF client on macOS - submitting from your laptop</title><link href="https://hpc.social/personal-blog/2023/lsf-client-on-macos-submitting-from-your-laptop/" rel="alternate" type="text/html" title="LSF client on macOS - submitting from your laptop" /><published>2023-03-01T19:10:58-07:00</published><updated>2023-03-01T19:10:58-07:00</updated><id>https://hpc.social/personal-blog/2023/lsf-client-on-macos-submitting-from-your-laptop</id><content type="html" xml:base="https://hpc.social/personal-blog/2023/lsf-client-on-macos-submitting-from-your-laptop/"><![CDATA[<p>In traditional HPC environments, login nodes are typically used as an access point for users to submit
and manage jobs. Although login nodes are still used today, HPC environments are
increasingly being used by a broad class of users with domain expertise and not necessarily IT experts.
In other words, such users may be more comfortable using their native desktop
environment rather than the CLI. Given the factors, in the commercial HPC space, organizations are always looking
for ways to lower the barto access and interact with HPC environments.</p>

<p>Spectrum LSF provides many ways to submit and manage jobs in an HPC cluster. For power users, the rich
CLI functionality exists. There is also an available web-based interface for job
submission and management which provides customizable application templates to greatly simplify job sub
mission, while hiding complexity of the underlying infrastructure. A RESTful API
is also available to users of IBM Spectrum LSF Application Center or IBM Spectrum LSF Suites, which ena
bles organizations to access the HPC environment via web services.</p>

<p>I&rsquo;ve written previously in detail about the the LSF web-based interface in the blog
<a href="https://www.gaborsamu.com/blog/easy_hpc/">The Easy HPC Button</a>. Here, we&rsquo;ll take a closer look at the
available LSF client for macOS that uses the RESTful API. First, a bit about LSF clients. LSF clients
can access resources on LSF server hosts without running the LSF daemons. LSF clients don&rsquo;t require a software
license and from clients, users can run all of the familiar LSF commands. Additionally, LSF clients are
submit only, and don&rsquo;t execute jobs.</p>

<p><strong>Note:</strong> The macOS LSF client uses the LSF RESTful API. This means that it will function in environments
running LSF Standard Edition with LSF Application Center or LSF Suites.</p>

<p><strong>Configuration</strong></p>

<p>The configuration used for the example below is as follows:</p>

<table>
<thead>
<tr>
<th style="text-align: left;">Hostname</th>
<th>OS</th>
<th>Detail</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;"><em>kilenc</em></td>
<td>CentOS Stream 8.4</td>
<td>LSF Suite for HPC v10.2.0.13</td>
</tr>
<tr>
<td style="text-align: left;"><em>My-Macbook-Air</em></td>
<td>macOS Ventura 13.2.1 (Apple M1)</td>
<td>LSF client</td>
</tr>
</tbody>
</table>
<ol>
<li>On the Spectrum LSF Suite for HPC management host (<em>kilenc</em>), add the following variables to the Parameter
section in the file lsf.cluster.<em>name</em>. The FLOAT_CLIENTS variable determines how many floating clients can
join the LSF cluster, The FLOAT_CLIENTS_ADDR_RANGE specifies the allowable IP addresses. In this case, the
client system is on a 192.168.x.x network.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">Begin Parameters
FLOAT_CLIENTS=2
FLOAT_CLIENTS_ADDR_RANGE=192.*
End Parameters</code></pre></div>

<ol start="2">
<li>To make the changes take effect, issue the following commands as the LSF administrator:</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">lsadmin reconfig
badmin reconfig</code></pre></div>

<ol start="3">
<li>
<p>Obtain the tarball <em>pacdesktop_client10.2.0.13_macos-x86_64.tar</em>. For users with an LSF entitlement this package is available on
<a href="https://www.ibm.com/support/fixcentral/">IBM Fix Central</a>. Note that this package will work on systems with Apple M1 silicon through emulation.</p>

</li>
<li>
<p>Open a Terminal on the macOS client system, copy the tarball to the $HOME/Desktop directory of user lsfuser and uncompress the tarball.</p>

</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">lsfuser@My-MacBook-Air Desktop % pwd
/Users/lsfuser/Desktop
lsfuser@My-MacBook-Air Desktop % ls -la pacdesktop_client10.2.0.13_macos-x86_64.tar
-rw-r--r--@ 1 lsfuser  staff  18452480 27 Feb 17:12 pacdesktop_client10.2.0.13_macos-x86_64.tar
lsfuser@My-MacBook-Air Desktop % tar -xvf pacdesktop_client10.2.0.13_macos-x86_64.tar
x LSF_Desktop_Client/
x LSF_Desktop_Client/bapp
x LSF_Desktop_Client/btop
x LSF_Desktop_Client/bwait
x LSF_Desktop_Client/lseligible
x LSF_Desktop_Client/bsla
x LSF_Desktop_Client/blparams
x LSF_Desktop_Client/bhpart
x LSF_Desktop_Client/bclusters
x LSF_Desktop_Client/blstartup
x LSF_Desktop_Client/lsacct
x LSF_Desktop_Client/bsub
x LSF_Desktop_Client/bugroup
x LSF_Desktop_Client/bpeek
x LSF_Desktop_Client/bacct
x LSF_Desktop_Client/brequeue
x LSF_Desktop_Client/bjgroup
x LSF_Desktop_Client/bslots
x LSF_Desktop_Client/lsrun
x LSF_Desktop_Client/bjobs
x LSF_Desktop_Client/lshosts
x LSF_Desktop_Client/lsload
x LSF_Desktop_Client/brlainfo
x LSF_Desktop_Client/bresources
x LSF_Desktop_Client/bladmin
x LSF_Desktop_Client/bstatus
x LSF_Desktop_Client/bmod
x LSF_Desktop_Client/bpost
x LSF_Desktop_Client/lsid
x LSF_Desktop_Client/bentags
x LSF_Desktop_Client/ch
x LSF_Desktop_Client/bchkpnt
x LSF_Desktop_Client/bparams
x LSF_Desktop_Client/bjdepinfo
x LSF_Desktop_Client/bgmod
x LSF_Desktop_Client/brestart
x LSF_Desktop_Client/lsltasks
x LSF_Desktop_Client/blusers
x LSF_Desktop_Client/paclogon
x LSF_Desktop_Client/regnotify
x LSF_Desktop_Client/cacert.pem
x LSF_Desktop_Client/bresume
x LSF_Desktop_Client/blstat
x LSF_Desktop_Client/bhist
x LSF_Desktop_Client/bqueues
x LSF_Desktop_Client/bltasks
x LSF_Desktop_Client/bresize
x LSF_Desktop_Client/blcollect
x LSF_Desktop_Client/lsacctmrg
x LSF_Desktop_Client/bgadd
x LSF_Desktop_Client/bmig
x LSF_Desktop_Client/bstop
x LSF_Desktop_Client/bswitch
x LSF_Desktop_Client/blhosts
x LSF_Desktop_Client/blcstat
x LSF_Desktop_Client/brsvs
x LSF_Desktop_Client/brun
x LSF_Desktop_Client/blinfo
x LSF_Desktop_Client/lsgrun
x LSF_Desktop_Client/busers
x LSF_Desktop_Client/lsloadadj
x LSF_Desktop_Client/blkill
x LSF_Desktop_Client/bbot
x LSF_Desktop_Client/lsclusters
x LSF_Desktop_Client/bconf
x LSF_Desktop_Client/lsinfo
x LSF_Desktop_Client/lsmake
x LSF_Desktop_Client/blimits
x LSF_Desktop_Client/bmgroup
x LSF_Desktop_Client/bread
x LSF_Desktop_Client/bkill
x LSF_Desktop_Client/lstcsh
x LSF_Desktop_Client/lsrtasks
x LSF_Desktop_Client/README.TXT
x LSF_Desktop_Client/lsplace
x LSF_Desktop_Client/bhosts
x LSF_Desktop_Client/paclogout
x LSF_Desktop_Client/bgdel</code></pre></div>

<ol start="5">
<li>Following the directions in the file README.TXT, set the environment variable LSF_DESKTOP_CLIENT=yes, and set the PATH variable accordingly.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">lsfuser@My-MacBook-Air LSF_Desktop_Client % export LSF_DESKTOP_CLIENT=yes
lsfuser@My-MacBook-Air LSF_Desktop_Client % export PATH=`pwd`:$PATH</code></pre></div>

<ol start="6">
<li>Next, it&rsquo;s necessary to run the <em>paclogon</em> command to connect to the LSF Application Center (or LSF Suite installation). Here we point to the LSF server kilenc on port 8080.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">lsfuser@My-MacBook-Air LSF_Desktop_Client % paclogon
Log on to IBM Spectrum LSF Application Center
User account: lsfuser
Enter password: 
Specify the URL to connect to IBM Spectrum LSF Application Center. Format: 
http://host_name:port_number/platform or https://host_name:port_number/platform
URL: http://kilenc:8080/platform
You have successfully logged on to IBM Spectrum LSF Application Center.</code></pre></div>

<ol start="7">
<li>After successfully logging in using the paclogon command, it should be possible to run LSF &ldquo;base&rdquo; commands from the macOS terminal including <em>lsid</em>, <em>lsload</em>, <em>lshosts</em>.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">lsfuser@My-MacBook-Air LSF_Desktop_Client % lsid
IBM Spectrum LSF 10.1.0.13, Apr 15 2022
Suite Edition: IBM Spectrum LSF Suite for HPC 10.2.0.13
Copyright International Business Machines Corp. 1992, 2016.
US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

My cluster name is Klaszter
My master name is kilenc
lsfuser@My-MacBook-Air LSF_Desktop_Client % lshosts -w
HOST_NAME                       type       model  cpuf ncpus maxmem maxswp server RESOURCES
kilenc                    LINUXPPC64LE      POWER9  25.0    32  30.7G  15.8G    Yes (mg docker)
lsfuser@My-MacBook-Air LSF_Desktop_Client % lsload -w
HOST_NAME               status  r15s   r1m  r15m   ut    pg  ls    it   tmp   swp   mem
kilenc                      ok   0.8   2.1   2.4   7%   0.0   0  1156  551M 15.6G   10G</code></pre></div>

<ol start="8">
<li>Next, run the LSF batch commands <em>bqueues</em> and <em>bhosts</em>.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">lsfuser@My-MacBook-Air LSF_Desktop_Client % bqueues
QUEUE_NAME      PRIO STATUS          MAX JL/U JL/P JL/H NJOBS  PEND   RUN  SUSP 
admin            50  Open:Active       -    -    -    -     0     0     0     0
owners           43  Open:Active       -    -    -    -     0     0     0     0
priority         43  Open:Active       -    -    -    - 75835 75803    32     0
night            40  Open:Inact        -    -    -    -     0     0     0     0
short            35  Open:Active       -    -    -    -     0     0     0     0
dataq            33  Open:Active       -    -    -    -     0     0     0     0
normal           30  Open:Active       -    -    -    -     0     0     0     0
interactive      30  Open:Active       -    -    -    -     0     0     0     0
sendq            30  Open:Active       -    -    -    -     0     0     0     0
idle             20  Open:Active       -    -    -    -     0     0     0     0
lsfuser@My-MacBook-Air LSF_Desktop_Client % bhosts
HOST_NAME          STATUS       JL/U    MAX  NJOBS    RUN  SSUSP  USUSP    RSV 
kilenc             ok              -     32     19     19      0      0      0</code></pre></div>

<ol start="9">
<li>Running the bjobs will result in a warning message appearing on macOS stating: <em>&ldquo;bjobs&rdquo; cannot be opened because the developer cannot be verified.</em></li>
</ol>
<figure><img src="https://www.gaborsamu.com/images/bjobs_unverified.png" />
</figure>

<ol start="10">
<li>To remedy the issue observed in step 9, click cancel on the warning message and browse to <strong>System Settings -&gt; Privacy &amp; Security -&gt; Security Settings</strong>. In the Security Settings view,
you&rsquo;ll see the message: <em>&ldquo;bjobs&rdquo; was blocked from use because it is not from an identified developer.</em> To allow the bjobs command to execute, click on the <strong>Allow Anyway</strong> button. You will
then be promped to authenticate to make the change take effect.</li>
</ol>
<p><figure><img src="https://www.gaborsamu.com/images/bjobs_allow.png" />
</figure>

<figure><img src="https://www.gaborsamu.com/images/bjobs_authenticate.png" />
</figure>
</p>

<ol start="11">
<li>Run the LSF <em>bjobs</em> command again. You will now receive a new warning error popup indicating: <em>macOS cannot verify the developer of &ldquo;bjobs&rdquo;. Are you sure you want to open it?</em>. To
proceed, click on the Open button.The bjobs command will then run to completion as expected.  Subsequent executions of bjobs will run without any system warnings. Finally, to submit
a job, run the bsub command. Here we try to submit a simple sleep job (i.e. bsub -q normal sleep 3600). As was the case with the bjobs command, the bsub command is also blocked. Here,
repeat the steps 10, 11 as described above but for the bsub command. Once the steps have been completed, repeat the bsub job submission command.</li>
</ol>
<figure><img src="https://www.gaborsamu.com/images/bjobs_open.png" />
</figure>

<ol start="12">
<li>Finally, to submit a job, run the <em>bsub</em> command. Here we try to submit a simple sleep job (i.e. <em>bsub -q normal sleep 3600</em>). As was the case with the <em>bjobs</em> command, the <em>bsub</em>
command is also blocked. Here, repeat the steps 10, 11 as described above but for the <em>bsub</em> command. Once the steps have been completed, repeat the <em>bsub</em> job submission command.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">lsfuser@My-MacBook-Air LSF_Desktop_Client % bsub -q normal sleep 3600
Job &lt;617551&gt; is submitted to queue &lt;normal&gt;.</code></pre></div>]]></content><author><name>Ramblings of a supercomputing enthusiast.</name></author><category term="gaborsamu" /><summary type="html"><![CDATA[In traditional HPC environments, login nodes are typically used as an access point for users to submit and manage jobs. Although login nodes are still used today, HPC environments are increasingly being used by a broad class of users with domain expertise and not necessarily IT experts. In other words, such users may be more comfortable using their native desktop environment rather than the CLI. Given the factors, in the commercial HPC space, organizations are always looking for ways to lower the barto access and interact with HPC environments.]]></summary></entry><entry><title type="html">Monitoring .-.. … ..-. (IBM Spectrum LSF) with the TIG stack</title><link href="https://hpc.social/personal-blog/2023/monitoring-ibm-spectrum-lsf-with-the-tig-stack/" rel="alternate" type="text/html" title="Monitoring .-.. … ..-. (IBM Spectrum LSF) with the TIG stack" /><published>2023-01-24T19:48:44-07:00</published><updated>2023-01-24T19:48:44-07:00</updated><id>https://hpc.social/personal-blog/2023/monitoring-ibm-spectrum-lsf-with-the-tig-stack</id><content type="html" xml:base="https://hpc.social/personal-blog/2023/monitoring-ibm-spectrum-lsf-with-the-tig-stack/"><![CDATA[<p>Much like dashboards in automobiles, dashboards in the context of HPC infrastructure are crucial to get an understanding of what&rsquo;s happening under the hood of your HPC cluster - at
a glance. During my IT career, I&rsquo;ve used a myriad of monitoring solutions ranging from SNMP and Ganglia, to the ELK (Elasticsearch, Logstash, Kibana) stack. For example, I&rsquo;ve recently
written an overview on how it is possible to visualize <a href="https://www.ibm.com/products/hpc-workload-management">IBM Spectrum LSF</a> (LSF) data in Grafana. LSF is an HPC job scheduler which brings to the table three decades of experience in
workload and resource management.</p>

<p>For this blog, I decided to take this to the next level by monitoring IBM Spectrum LSF with the well known TIG (Telegraf, InfluxDB, Grafana) stack. This article is not meant to be a
debate on the advantages of one monitoring stack over another. Rather, the focus is to demonstrate what is feasible in terms of monitoring Spectrum LSF clusters with the TIG stack,
given the many available ways to query LSF for key information using CLI commands.</p>

<hr />

<p><strong>The Journey</strong></p>

<p>There already exists many write-ups on how to deploy the TIG stack to monitor systems. This isn&rsquo;t meant to be a guide on setting up the TIG stack. Rather, it&rsquo;s assumed that the reader
already has some familiarity with the TIG stack. If not, then [<em>insert your favourite search engine</em>] is your friend.</p>

<p>On my home network, I decided to setup a VM running on my trusty <a href="https://traverse.com.au/products/ten64-networking-platform/">Traverse Ten64</a> running Fedora where InfluxDB was installed. The idea was to run InfluxDB on a system that is guaranteed
to be always on in my home environment and that is energy efficient. Installing telegraf on all of the LSF cluster servers (x3) proved to be straight forward. Note that in all cases, I used the OS
supplied versions of InfluxDB, Telegraf. Finally, I already had a Grafana server running on a server in my network.</p>

<p>Out of the box, Telegraf has the ability to monitor numerous system metrics. Furthermore, there exists literally hundreds of plugins for Telegraf to monitor a wide variety of devices,
services and software. A search however, didn&rsquo;t reveal the existence of any plugin to monitor LSF. So it was time to get creative.</p>

<hr />

<p><strong>What to monitor?</strong></p>

<p>A bit of research revealed that InfluxDB supports what is known as &ldquo;line protocol&rdquo;. This is a well defined text-based format for writing data to InfluxDB. I used the following
<a href="https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/">reference</a> on &ldquo;line protocol&rdquo; to guide me. Using line protocol it would be ultimately possible to
write a plugin for Telegraf to effecively scrape information from Spectrum LSF and output in line protocol format for writing to InfluxDB.</p>

<p>Before I could begin writing the plugin, the key was to determine what information from Spectrum LSF would be useful to display in the dashboard, and how that information could be
extracted. For this I followed the KISS principle to keep things as simple as possible. The key metrics I decided to report on were servers, queues and jobs (oh my!), as well as process
information for the LSF scheduler daemons. Refer to the following table for details:</p>

<hr />

<table>
<thead>
<tr>
<th>Metric(s)</th>
<th>Command</th>
</tr>
</thead>
<tbody>
<tr>
<td>LSF scheduler performance metrics</td>
<td><em>badmin perfmon view -json</em></td>
</tr>
<tr>
<td>LSF available servers, CPUs, cores, slots</td>
<td><em>badmin showstatus</em></td>
</tr>
<tr>
<td>LSF server by status (total number Ok, closed, unreachable, unavailable)</td>
<td><em>badmin showstatus</em></td>
</tr>
<tr>
<td>LSF job statistics (total number running, suspended, pending)</td>
<td><em>badmin showstatus</em></td>
</tr>
<tr>
<td>LSF queue statistics (per queue, total number of jobs running, suspended, pending)</td>
<td><em>bqueues -json -o queue_name:12 njobs pend run susp rsv ususp ssusp</em></td>
</tr>
<tr>
<td>LSF mbatchd process metrics</td>
<td>(Telegraf - inputs.procstat)</td>
</tr>
<tr>
<td>LSF mbschd process metrics</td>
<td>(Telegraf - inputs.procstat)</td>
</tr>
<tr>
<td>LSF management lim process metrics</td>
<td>(Telegraf - inputs.procstat)</td>
</tr>
</tbody>
</table>
<hr />

<p><strong>Scrapin' fun</strong></p>

<p>These above metrics would give a good idea of the state of the Spectrum LSF cluster at a glance. With the list of metrics prepared, the next step was to create a plugin script which would
scrape data from the noted commands. Both <em>bqueues</em> and <em>badmin perfmon view</em> support output in JSON format with the appropriate flags specified. However, <em>badmin showstatus</em> does not support
output in JSON format. This meant that for <em>badmin showstatus</em> it was necessary to scrape data assuming hard coded field positions in the output.</p>

<p>A copy of the Telegraf plugin for Spectrum LSF is provided below. This is just an example and is provided &ldquo;as is&rdquo; for testing purposes. Your mileage may vary.</p>

<hr />

<details>
  <strong>Example lsf_telegraf_agent.py script. Click to expand!</strong>
  <div class="highlight"><pre><code class="language-python"><span style="color: #75715e;">#!/usr/bin/python3.8</span>
<span style="color: #75715e;"># </span>
<span style="color: #75715e;"># v0.9 </span>
<span style="color: #75715e;"># Sample inputs.exec script for Telegraf which outputs metrics from an IBM Spectrum LSF management server</span>
<span style="color: #75715e;"># in InfluxDB Line Protocol input format.</span>
<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># NOTE: It is required to set the lsf_envfile variable to point to the LSF profile.lsf file</span>
<span style="color: #75715e;"># for the LSF installation. </span>
<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># Gabor Samu</span>
<span style="color: #75715e;"># January 4, 2023</span>
<span style="color: #75715e;">#</span>
 
<span style="color: #f92672;">import</span> os
<span style="color: #f92672;">import</span> json
<span style="color: #f92672;">import</span> time
<span style="color: #f92672;">import</span> subprocess
<span style="color: #f92672;">import</span> sys
<span style="color: #f92672;">from</span> pathlib <span style="color: #f92672;">import</span> Path

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># Variable declarations</span>
<span style="color: #75715e;"># **NOTE: lsf_envfile needs to be set to point to the profile.lsf file for the LSF installation. </span>
<span style="color: #75715e;">#</span>
lsf_envfile <span style="color: #f92672;">=</span> <span style="color: #e6db74;">"/opt/ibm/lsfsuite/lsf/conf/profile.lsf"</span>

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># Source the Spectrum LSF profile.  </span>
<span style="color: #75715e;"># Check for existing of lsf_envfile (profile.lsf) and source the environment. </span>
<span style="color: #75715e;"># If the specified file does not exist, then exit.  </span>
<span style="color: #75715e;">#</span>
path <span style="color: #f92672;">=</span> Path(lsf_envfile)
<span style="color: #66d9ef;">if</span> path<span style="color: #f92672;">.</span>is_file(): 
    lsf_env <span style="color: #f92672;">=</span> (<span style="color: #e6db74;">f</span><span style="color: #e6db74;">'env -i sh -c "source </span><span style="color: #e6db74;">{</span>lsf_envfile<span style="color: #e6db74;">}</span><span style="color: #e6db74;"> &amp;&amp; env"'</span>)
    <span style="color: #66d9ef;">for</span> line <span style="color: #f92672;">in</span> subprocess<span style="color: #f92672;">.</span>getoutput(lsf_env)<span style="color: #f92672;">.</span>split(<span style="color: #e6db74;">"</span><span style="color: #ae81ff;">\n</span><span style="color: #e6db74;">"</span>):
        key, value <span style="color: #f92672;">=</span> line<span style="color: #f92672;">.</span>split(<span style="color: #e6db74;">"="</span>)
        os<span style="color: #f92672;">.</span>environ[key]<span style="color: #f92672;">=</span> value
<span style="color: #66d9ef;">else</span>:
    sys<span style="color: #f92672;">.</span>exit(<span style="color: #e6db74;">f</span><span style="color: #e6db74;">'The file </span><span style="color: #e6db74;">{</span>lsf_envfile<span style="color: #e6db74;">}</span><span style="color: #e6db74;"> does not exist.'</span>)
    
<span style="color: #75715e;"># </span>
<span style="color: #75715e;"># Get the time in nanoseconds since the epoch. </span>
<span style="color: #75715e;"># This is required as part of the InfluxDB line protocol reference. </span>
<span style="color: #75715e;"># Only supported on Python 3.7+</span>
<span style="color: #75715e;">#</span>
time_nanosec <span style="color: #f92672;">=</span> time<span style="color: #f92672;">.</span>time_ns()

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># Here we set the LSF environment variable LSB_NTRIES. This will be used to determine the </span>
<span style="color: #75715e;"># number of retries before failure of a LSF batch command. This is used to cover the case </span>
<span style="color: #75715e;"># when the LSF mbatchd is not running. </span>
<span style="color: #75715e;">#</span>
os<span style="color: #f92672;">.</span>environ[<span style="color: #e6db74;">"LSB_NTRIES"</span>] <span style="color: #f92672;">=</span> <span style="color: #e6db74;">"2"</span>

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># Check if LSF performance metric monitoring is enabled. This is done by running</span>
<span style="color: #75715e;"># 'badmin perfmon view'. If badmin is not found, then exit. </span>
<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># Check the return status from 'badmin perfmon view' and take the appropriate action:</span>
<span style="color: #75715e;">#  - If return status is 7, it means that performance monitoring is not enabled. The script</span>
<span style="color: #75715e;">#    will enable LSF performance metric monitoring by running 'badmin perfmon start'.</span>
<span style="color: #75715e;">#    Note that a 70 second sleep is required before LSF metrics will be available.  </span>
<span style="color: #75715e;">#  - If return status is 65, it means that the badmin command reported that the</span>
<span style="color: #75715e;">#    LSF batch system is down. This is a fatal error which will cause the script</span>
<span style="color: #75715e;">#    to exit. </span>
<span style="color: #75715e;">#</span>
lsf_path <span style="color: #f92672;">=</span> os<span style="color: #f92672;">.</span>environ[<span style="color: #e6db74;">'LSF_BINDIR'</span>]
badmin_path <span style="color: #f92672;">=</span> lsf_path <span style="color: #f92672;">+</span> <span style="color: #e6db74;">"/badmin"</span>
bqueues_path <span style="color: #f92672;">=</span> lsf_path <span style="color: #f92672;">+</span> <span style="color: #e6db74;">"/bqueues"</span>

path <span style="color: #f92672;">=</span> Path(badmin_path)
<span style="color: #66d9ef;">if</span> path<span style="color: #f92672;">.</span>is_file():
    cmd <span style="color: #f92672;">=</span> [badmin_path, <span style="color: #e6db74;">'perfmon'</span>, <span style="color: #e6db74;">'view'</span>]
    p <span style="color: #f92672;">=</span> subprocess<span style="color: #f92672;">.</span>Popen(cmd, stdout<span style="color: #f92672;">=</span>subprocess<span style="color: #f92672;">.</span>DEVNULL, stderr<span style="color: #f92672;">=</span>subprocess<span style="color: #f92672;">.</span>DEVNULL)
    <span style="color: #66d9ef;">while</span> p<span style="color: #f92672;">.</span>poll() <span style="color: #f92672;">is</span> <span style="color: #66d9ef;">None</span>:
        time<span style="color: #f92672;">.</span>sleep(<span style="color: #ae81ff;">0.1</span>)
    return_code <span style="color: #f92672;">=</span> p<span style="color: #f92672;">.</span>returncode
    <span style="color: #66d9ef;">if</span> return_code <span style="color: #f92672;">==</span> <span style="color: #ae81ff;">7</span>:
        cmd <span style="color: #f92672;">=</span> [badmin_path, <span style="color: #e6db74;">'perfmon'</span>, <span style="color: #e6db74;">'start'</span>]
        p <span style="color: #f92672;">=</span> subprocess<span style="color: #f92672;">.</span>Popen(cmd, stdout<span style="color: #f92672;">=</span>subprocess<span style="color: #f92672;">.</span>DEVNULL, stderr<span style="color: #f92672;">=</span>subprocess<span style="color: #f92672;">.</span>DEVNULL)
        <span style="color: #66d9ef;">while</span> p<span style="color: #f92672;">.</span>poll() <span style="color: #f92672;">is</span> <span style="color: #66d9ef;">None</span>:
            time<span style="color: #f92672;">.</span>sleep(<span style="color: #ae81ff;">0.1</span>)
        return_code <span style="color: #f92672;">=</span> p<span style="color: #f92672;">.</span>returncode
        time<span style="color: #f92672;">.</span>sleep(<span style="color: #ae81ff;">70</span>)
    <span style="color: #66d9ef;">elif</span> return_code <span style="color: #f92672;">==</span> <span style="color: #ae81ff;">65</span>:
        sys<span style="color: #f92672;">.</span>exit(<span style="color: #e6db74;">f</span><span style="color: #e6db74;">'The LSF batch system is down.'</span>)
<span style="color: #66d9ef;">else</span>:
    sys<span style="color: #f92672;">.</span>exit(<span style="color: #e6db74;">f</span><span style="color: #e6db74;">'</span><span style="color: #e6db74;">{</span>badmin_path<span style="color: #e6db74;">}</span><span style="color: #e6db74;"> does not exist.'</span>)

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># Run badmin with the "perfmon view" keywords and the -json option to product JSON output</span>
<span style="color: #75715e;"># We assume here that the LSF batch system is responsive (a check was done above); if</span>
<span style="color: #75715e;"># the mbatchd is very busy there is a possiblity that it may not be responsive here. This</span>
<span style="color: #75715e;"># case is not considered; LSB_NTRIES setting will determine how many tries are made before</span>
<span style="color: #75715e;"># badmin gives up the ghost.  </span>
<span style="color: #75715e;"># </span>
<span style="color: #75715e;"># Note: We previously checked for the existence of the 'badmin' binary. </span>
<span style="color: #75715e;">#</span>
cmd <span style="color: #f92672;">=</span> [badmin_path, <span style="color: #e6db74;">'perfmon'</span>, <span style="color: #e6db74;">'view'</span>, <span style="color: #e6db74;">'-json'</span>] 
p <span style="color: #f92672;">=</span> subprocess<span style="color: #f92672;">.</span>Popen(cmd, stdout<span style="color: #f92672;">=</span>subprocess<span style="color: #f92672;">.</span>PIPE, stderr<span style="color: #f92672;">=</span>subprocess<span style="color: #f92672;">.</span>DEVNULL, text<span style="color: #f92672;">=</span><span style="color: #66d9ef;">True</span>) 
stdout, stderr <span style="color: #f92672;">=</span> p<span style="color: #f92672;">.</span>communicate()
<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># Guard for the case that the performance monitor has just been enabled, but is not</span>
<span style="color: #75715e;"># producing any data as the first sample period has not elapsed. </span>
<span style="color: #75715e;">#</span>
<span style="color: #66d9ef;">if</span> stdout <span style="color: #f92672;">==</span> <span style="color: #e6db74;">""</span>:
    sys<span style="color: #f92672;">.</span>exit(<span style="color: #e6db74;">f</span><span style="color: #e6db74;">'Output from badmin perfmon view -json is empty.'</span>)
<span style="color: #66d9ef;">else</span>: 
    data <span style="color: #f92672;">=</span> json<span style="color: #f92672;">.</span>loads(stdout)

<span style="color: #75715e;"># </span>
<span style="color: #75715e;"># Run badmin showstatus</span>
<span style="color: #75715e;"># Next, run the command 'badmin showstatus' and capture the output. Note that badmin showstatus</span>
<span style="color: #75715e;"># does not produce JSON output. So here we must do some scraping of the output. </span>
<span style="color: #75715e;"># The output from 'badmin showstatus' it placed into the array 'showstatus'. The hard coded</span>
<span style="color: #75715e;"># positions in the output of 'badmin showstatus' are assumed when building the output </span>
<span style="color: #75715e;"># strings below. Should the format of the output of 'badmin showstatus' change, this will</span>
<span style="color: #75715e;"># need to be updated. </span>
cmd <span style="color: #f92672;">=</span> [badmin_path, <span style="color: #e6db74;">'showstatus'</span>]
p <span style="color: #f92672;">=</span> subprocess<span style="color: #f92672;">.</span>Popen(cmd, stdout<span style="color: #f92672;">=</span>subprocess<span style="color: #f92672;">.</span>PIPE, stderr<span style="color: #f92672;">=</span>subprocess<span style="color: #f92672;">.</span>DEVNULL, text<span style="color: #f92672;">=</span><span style="color: #66d9ef;">True</span>)
stdout, stderr <span style="color: #f92672;">=</span> p<span style="color: #f92672;">.</span>communicate()
<span style="color: #75715e;"># Convert badmin showstatus output into an array</span>
showstatus <span style="color: #f92672;">=</span> stdout<span style="color: #f92672;">.</span>split()

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># Run bqueues</span>
<span style="color: #75715e;">#</span>
cmd <span style="color: #f92672;">=</span> [bqueues_path, <span style="color: #e6db74;">'-json'</span>, <span style="color: #e6db74;">'-o'</span>, <span style="color: #e6db74;">'queue_name:12 njobs pend run susp rsv ususp ssusp'</span>]
p <span style="color: #f92672;">=</span> subprocess<span style="color: #f92672;">.</span>Popen(cmd, stdout<span style="color: #f92672;">=</span>subprocess<span style="color: #f92672;">.</span>PIPE, stderr<span style="color: #f92672;">=</span>subprocess<span style="color: #f92672;">.</span>DEVNULL, text<span style="color: #f92672;">=</span><span style="color: #66d9ef;">True</span>)
stdout, stderr <span style="color: #f92672;">=</span> p<span style="color: #f92672;">.</span>communicate()
data_queues <span style="color: #f92672;">=</span> json<span style="color: #f92672;">.</span>loads(stdout)

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># At this stage, we've captured the output from 'badmin perfmon view -json' and </span>
<span style="color: #75715e;"># 'badmin showstatus'. We're now ready to print to standard output the metric</span>
<span style="color: #75715e;"># strings in InfluxDB line procotol format. </span>
<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># Details about the line protocol format can be found here:</span>
<span style="color: #75715e;"># https://docs.influxdata.com/influxdb/v2.6/reference/syntax/line-protocol/</span>
<span style="color: #75715e;"># </span>
<span style="color: #75715e;"># </span>

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># LSF server status</span>
<span style="color: #75715e;">#</span>
print(<span style="color: #e6db74;">"lsf_servers,"</span>,<span style="color: #e6db74;">"status=total"</span>,<span style="color: #e6db74;">" value="</span>,showstatus[<span style="color: #ae81ff;">21</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_servers,"</span>,<span style="color: #e6db74;">"status=ok"</span>,<span style="color: #e6db74;">" value="</span>,showstatus[<span style="color: #ae81ff;">23</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_servers,"</span>,<span style="color: #e6db74;">"status=closed"</span>,<span style="color: #e6db74;">" value="</span>,showstatus[<span style="color: #ae81ff;">25</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_servers,"</span>,<span style="color: #e6db74;">"status=unreachable"</span>,<span style="color: #e6db74;">" value="</span>,showstatus[<span style="color: #ae81ff;">27</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_servers,"</span>,<span style="color: #e6db74;">"status=unavailable"</span>,<span style="color: #e6db74;">" value="</span>,showstatus[<span style="color: #ae81ff;">29</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># LSF job status</span>
<span style="color: #75715e;">#</span>
print(<span style="color: #e6db74;">"lsf_jobs,"</span>,<span style="color: #e6db74;">"state=total"</span>,<span style="color: #e6db74;">" value="</span>,showstatus[<span style="color: #ae81ff;">33</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_jobs,"</span>,<span style="color: #e6db74;">"state=running"</span>,<span style="color: #e6db74;">" value="</span>,showstatus[<span style="color: #ae81ff;">35</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_jobs,"</span>,<span style="color: #e6db74;">"state=suspended"</span>,<span style="color: #e6db74;">" value="</span>,showstatus[<span style="color: #ae81ff;">37</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_jobs,"</span>,<span style="color: #e6db74;">"state=pending"</span>,<span style="color: #e6db74;">" value="</span>,showstatus[<span style="color: #ae81ff;">39</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_jobs,"</span>,<span style="color: #e6db74;">"state=finished"</span>,<span style="color: #e6db74;">" value="</span>,showstatus[<span style="color: #ae81ff;">41</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># LSF user stats</span>
<span style="color: #75715e;">#</span>
print(<span style="color: #e6db74;">"lsf_users,"</span>,<span style="color: #e6db74;">"state=numusers"</span>,<span style="color: #e6db74;">" value="</span>,showstatus[<span style="color: #ae81ff;">45</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_users,"</span>,<span style="color: #e6db74;">"state=numgroups"</span>,<span style="color: #e6db74;">" value="</span>,showstatus[<span style="color: #ae81ff;">50</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_users,"</span>,<span style="color: #e6db74;">"state=numactive"</span>,<span style="color: #e6db74;">" value="</span>,showstatus[<span style="color: #ae81ff;">55</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># LSF hosts stats</span>
<span style="color: #75715e;"># First we split out the current and peak values for clients, servers, cpus, cores, and slots.</span>
<span style="color: #75715e;"># The current and peak values are separated by the "/" delimiter.</span>
<span style="color: #75715e;"># </span>
clientssplit <span style="color: #f92672;">=</span> showstatus[<span style="color: #ae81ff;">9</span>]<span style="color: #f92672;">.</span>split(<span style="color: #e6db74;">"/"</span>)
serverssplit <span style="color: #f92672;">=</span> showstatus[<span style="color: #ae81ff;">11</span>]<span style="color: #f92672;">.</span>split(<span style="color: #e6db74;">"/"</span>)
cpussplit <span style="color: #f92672;">=</span> showstatus[<span style="color: #ae81ff;">13</span>]<span style="color: #f92672;">.</span>split(<span style="color: #e6db74;">"/"</span>)
coressplit <span style="color: #f92672;">=</span> showstatus[<span style="color: #ae81ff;">15</span>]<span style="color: #f92672;">.</span>split(<span style="color: #e6db74;">"/"</span>)
slotssplit <span style="color: #f92672;">=</span> showstatus[<span style="color: #ae81ff;">17</span>]<span style="color: #f92672;">.</span>split(<span style="color: #e6db74;">"/"</span>)

print(<span style="color: #e6db74;">"lsf_hosts,"</span>,<span style="color: #e6db74;">"state=clients"</span>,<span style="color: #e6db74;">" current="</span>,clientssplit[<span style="color: #ae81ff;">0</span>],<span style="color: #e6db74;">"i,"</span>,<span style="color: #e6db74;">"peak="</span>,clientssplit[<span style="color: #ae81ff;">1</span>],<span style="color: #e6db74;">"i "</span>,time_n
anosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_hosts,"</span>,<span style="color: #e6db74;">"state=servers"</span>,<span style="color: #e6db74;">" current="</span>,serverssplit[<span style="color: #ae81ff;">0</span>],<span style="color: #e6db74;">"i,"</span>,<span style="color: #e6db74;">"peak="</span>,serverssplit[<span style="color: #ae81ff;">1</span>],<span style="color: #e6db74;">"i "</span>,time_n
anosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_hosts,"</span>,<span style="color: #e6db74;">"state=cpus"</span>,<span style="color: #e6db74;">" current="</span>,cpussplit[<span style="color: #ae81ff;">0</span>],<span style="color: #e6db74;">"i,"</span>,<span style="color: #e6db74;">"peak="</span>,cpussplit[<span style="color: #ae81ff;">1</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,se
p<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_hosts,"</span>,<span style="color: #e6db74;">"state=cores"</span>,<span style="color: #e6db74;">" current="</span>,coressplit[<span style="color: #ae81ff;">0</span>],<span style="color: #e6db74;">"i,"</span>,<span style="color: #e6db74;">"peak="</span>,coressplit[<span style="color: #ae81ff;">1</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec
,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_hosts,"</span>,<span style="color: #e6db74;">"state=slots"</span>,<span style="color: #e6db74;">" current="</span>,slotssplit[<span style="color: #ae81ff;">0</span>],<span style="color: #e6db74;">"i,"</span>,<span style="color: #e6db74;">"peak="</span>,slotssplit[<span style="color: #ae81ff;">1</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec
,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># Print mbatchd query metrics</span>
<span style="color: #75715e;">#</span>
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"query=job"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'record'</span>][<span style="color: #ae81ff;">1</span>][<span style="color: #e6db74;">'current'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"query=host"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'record'</span>][<span style="color: #ae81ff;">2</span>][<span style="color: #e6db74;">'current'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"query=queue"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'record'</span>][<span style="color: #ae81ff;">3</span>][<span style="color: #e6db74;">'current'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># Print mbatchd job metrics</span>
<span style="color: #75715e;">#</span>
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"jobs=submitreqs"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'record'</span>][<span style="color: #ae81ff;">4</span>][<span style="color: #e6db74;">'current'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"jobs=submitted"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'record'</span>][<span style="color: #ae81ff;">5</span>][<span style="color: #e6db74;">'current'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"jobs=dispatched"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'record'</span>][<span style="color: #ae81ff;">6</span>][<span style="color: #e6db74;">'current'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"jobs=completed"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'record'</span>][<span style="color: #ae81ff;">7</span>][<span style="color: #e6db74;">'current'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"jobs=sentremote"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'record'</span>][<span style="color: #ae81ff;">8</span>][<span style="color: #e6db74;">'current'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"jobs=acceptremote"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'record'</span>][<span style="color: #ae81ff;">9</span>][<span style="color: #e6db74;">'current'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">'</span>
<span style="color: #e6db74;">')</span>
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"sched=interval"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'record'</span>][<span style="color: #ae81ff;">10</span>][<span style="color: #e6db74;">'current'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"sched=matchhost"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'record'</span>][<span style="color: #ae81ff;">11</span>][<span style="color: #e6db74;">'current'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>
)
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"sched=buckets"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'record'</span>][<span style="color: #ae81ff;">12</span>][<span style="color: #e6db74;">'current'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"sched=reordered"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'record'</span>][<span style="color: #ae81ff;">13</span>][<span style="color: #e6db74;">'current'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>
)

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># Print mbatchd efficiency metrics. Here check if the efficiency metric indicated is "-". If so, </span>
<span style="color: #75715e;"># then assume a zero value. The trailing "%" sign on the metrics (percentages) is also stripped here. </span>
<span style="color: #75715e;">#</span>
slots <span style="color: #f92672;">=</span> (data[<span style="color: #e6db74;">'record'</span>][<span style="color: #ae81ff;">14</span>][<span style="color: #e6db74;">'current'</span>])
slots_percent <span style="color: #f92672;">=</span> slots
<span style="color: #66d9ef;">if</span> slots_percent <span style="color: #f92672;">==</span> <span style="color: #e6db74;">"-"</span>:
    slots_percent <span style="color: #f92672;">=</span> <span style="color: #e6db74;">"0"</span>
<span style="color: #66d9ef;">elif</span> slots_percent <span style="color: #f92672;">!=</span> <span style="color: #e6db74;">"0"</span>:
    <span style="color: #75715e;"># Strip % sign and decimal. This is to work around issue inserting float to InfluxDB</span>
    <span style="color: #75715e;"># "type float, already exists as type integer dropped ..."</span>
    slots_percent <span style="color: #f92672;">=</span> slots[:<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span>]

memory <span style="color: #f92672;">=</span> (data[<span style="color: #e6db74;">'record'</span>][<span style="color: #ae81ff;">15</span>][<span style="color: #e6db74;">'current'</span>])
memory_percent <span style="color: #f92672;">=</span> memory
<span style="color: #66d9ef;">if</span> memory_percent <span style="color: #f92672;">==</span> <span style="color: #e6db74;">"-"</span>:
    memory_percent <span style="color: #f92672;">=</span> <span style="color: #e6db74;">"0"</span>
<span style="color: #66d9ef;">elif</span> memory_percent <span style="color: #f92672;">!=</span> <span style="color: #e6db74;">"0"</span>:
    <span style="color: #75715e;"># Strip % sign and decimal. This is to work around issue inserting float to InfluxDB</span>
    <span style="color: #75715e;"># "type float, already exists as type integer dropped ..."</span>
    memory_percent <span style="color: #f92672;">=</span> memory[:<span style="color: #f92672;">-</span><span style="color: #ae81ff;">4</span>]

print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"utilization=slots"</span>,<span style="color: #e6db74;">" value="</span>,slots_percent,<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"utilization=memory"</span>,<span style="color: #e6db74;">" value="</span>,memory_percent,<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># Print mbatchd file descriptor usage</span>
<span style="color: #75715e;">#</span>
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"fd=free"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'fd'</span>][<span style="color: #e6db74;">'free'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"fd=used"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'fd'</span>][<span style="color: #e6db74;">'used'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)
print(<span style="color: #e6db74;">"lsf_mbatchd,"</span>,<span style="color: #e6db74;">"fd=total"</span>,<span style="color: #e6db74;">" value="</span>,data[<span style="color: #e6db74;">'fd'</span>][<span style="color: #e6db74;">'total'</span>],<span style="color: #e6db74;">"i "</span>,time_nanosec,sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)

<span style="color: #75715e;">#</span>
<span style="color: #75715e;"># Print LSF queue status (njobs)</span>
<span style="color: #75715e;">#</span>
iterations <span style="color: #f92672;">=</span> data_queues[<span style="color: #e6db74;">"QUEUES"</span>]

<span style="color: #66d9ef;">for</span> n <span style="color: #f92672;">in</span> range(iterations):
    print(<span style="color: #e6db74;">"lsf_queues,"</span>,<span style="color: #e6db74;">"name="</span>, data_queues[<span style="color: #e6db74;">'RECORDS'</span>][n][<span style="color: #e6db74;">'QUEUE_NAME'</span>], <span style="color: #e6db74;">" njobs="</span>, data_queues[<span style="color: #e6db74;">'RECOR</span>
DS<span style="color: #e6db74;">'][n]['</span>NJOBS<span style="color: #e6db74;">'],"i,",</span>
          <span style="color: #e6db74;">"pend="</span>, data_queues[<span style="color: #e6db74;">'RECORDS'</span>][n][<span style="color: #e6db74;">'PEND'</span>],<span style="color: #e6db74;">"i,"</span>,
          <span style="color: #e6db74;">"run="</span>, data_queues[<span style="color: #e6db74;">'RECORDS'</span>][n][<span style="color: #e6db74;">'RUN'</span>],<span style="color: #e6db74;">"i,"</span>,
          <span style="color: #e6db74;">"susp="</span>, data_queues[<span style="color: #e6db74;">'RECORDS'</span>][n][<span style="color: #e6db74;">'SUSP'</span>],<span style="color: #e6db74;">"i,"</span>,
          <span style="color: #e6db74;">"rsv="</span>, data_queues[<span style="color: #e6db74;">'RECORDS'</span>][n][<span style="color: #e6db74;">'RSV'</span>],<span style="color: #e6db74;">"i,"</span>,
          <span style="color: #e6db74;">"ususp="</span>, data_queues[<span style="color: #e6db74;">'RECORDS'</span>][n][<span style="color: #e6db74;">'USUSP'</span>],<span style="color: #e6db74;">"i,"</span>,
          <span style="color: #e6db74;">"ssusp="</span>, data_queues[<span style="color: #e6db74;">'RECORDS'</span>][n][<span style="color: #e6db74;">'SSUSP'</span>],<span style="color: #e6db74;">"i "</span>,
          time_nanosec, sep<span style="color: #f92672;">=</span><span style="color: #e6db74;">''</span>)

exit()    
</code></pre></div>

</details>

<hr />

<p><strong>Bringing it all together</strong></p>

<p>For completeness, below is the detail regarding the configuration of the environment. It should be noted that the simple test environment consists of a single server running IBM
Spectrum LSF Suite for HPC and a separate server which runs the InfluxDB instance.</p>

<hr />

<table>
<thead>
<tr>
<th style="text-align: left;">Hostname</th>
<th>Component</th>
<th>Version</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;"><em>kilenc</em></td>
<td>OS (LSF mgmt server)</td>
<td><em>CentOS Stream release 8 (ppc64le)</em></td>
</tr>
<tr>
<td style="text-align: left;"><em>kilenc</em></td>
<td>Spectrum LSF Suite for HPC</td>
<td><em>v10.2.0.13</em></td>
</tr>
<tr>
<td style="text-align: left;"><em>adatbazis</em></td>
<td>OS (InfluxDB server)</td>
<td><em>Fedora release 36 (aarch64)</em></td>
</tr>
<tr>
<td style="text-align: left;"><em>adatbazis</em></td>
<td>InfluxDB</td>
<td><em>v1.8.10</em></td>
</tr>
<tr>
<td style="text-align: left;"><em>kilenc</em></td>
<td>Telegraf</td>
<td><em>v1.24.3</em></td>
</tr>
<tr>
<td style="text-align: left;"><em>kilenc</em></td>
<td>Grafana</td>
<td><em>v9.1.6</em></td>
</tr>
</tbody>
</table>
<hr />

<p>The follwing steps assume that IBM Spectrum LSF Suite for HPC, InfluxDB and Telegraf have been installed.</p>

<ol>
<li>
<p>Start InfluxDB on the host <em>adatbazis</em></p>

</li>
<li>
<p>On the LSF management server <em>kilenc</em>, configure telegraf to connect to the influxDB instance on host <em>adatbazis</em>. Edit the configuration <em>/etc/telegraf/telegraf.conf</em> and specify
the correct URL in the <em>outputs.influxdb</em> section as follows:</p>

</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext"># # Configuration for sending metrics to InfluxDB
[[outputs.influxdb]]
#   ## The full HTTP or UDP URL for your InfluxDB instance.
#   ##
#   ## Multiple URLs can be specified for a single cluster, only ONE of the
#   ## urls will be written to each interval.
#   # urls = ["unix:///var/run/influxdb.sock"]
#   # urls = ["udp://127.0.0.1:8089"]
#   # urls = ["http://127.0.0.1:8086"]
# Added gsamu Jan 04 2023
urls = ["http://adatbazis:8086"]</code></pre></div>

<ol start="3">
<li>On the LSF management server <em>kilenc</em>, configure telegraf with the custom plugin script <em>lsf_telegraf_agent_0.9.py</em> to collect and log metrics from IBM Spectrum LSF Suite for HPC.
Edit the configuration <em>/etc/telegraf/telegraf.conf</em> and specify the correct command path in the section <em>inputs.exec</em>. Additionally, set <em>data_format</em> equal to <em>influx</em>.Note that the
script <em>lsf_telegraf_agent_0.9.py</em> was copied to the directory <em>/etc/telegraf/telegraf.d/scripts</em> with permissions octal 755 and owner set to user <em>telegraf</em>.
<strong>Note:</strong> User <em>telegraf</em> was automatically created during the installation of telegraf.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext"> 
# ## Gather LSF metrics
[[inputs.exec]]
  ## Commands array
   commands = [  "/etc/telegraf/telegraf.d/scripts/lsf_telegraf_agent_0.9.py" ]
   timeout = "30s"
   interval = "30s"
   data_format = "influx"
 # ## End LSF metrics</code></pre></div>

<ol start="4">
<li>Telegraf provides the ability to collect metrics on processes. Here we&rsquo;ll use the telegraf <em>procstat</em> facility to monitor the LSF mbatchd and mbschd processes. These are the key
daemons involved in handling query requests and making scheduling decisions for jobs in the environment. Edit the configuration <em>/etc/telegraf/telegraf.conf</em> and configure the two
following <em>inputs.procstat</em> sections.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext"># ## Monitor CPU and memory utilization for LSF processes
# ## mbatchd, mbschd, lim (manager)
[[inputs.procstat]]
exe = "lim"
pattern = "lim"
pid_finder = "pgrep"

[[inputs.procstat]]
exe = "mbschd"
pattern = "mbschd"
pid_finder = "pgrep"

[[inputs.procstat]]
exe = "mbatchd"
pattern = "mbatchd"
pid_finder = "pgrep"</code></pre></div>

<ol start="5">
<li>With the configuration to telegraf complete, it&rsquo;s now time to test if the configuration and custom LSF agent is functioning as expected. Note that the following operation is performed
on the LSF management candidate host <em>kilenc</em> and assumes that the LSF daemons are up and running. This is achieve by running the command:
<em>telegraf &ndash;config /etc/telegraf/telegraf.conf &ndash;test</em>. <strong>Note:</strong> Any errors in the configuration file <em>/etc/telegraf/telegraf.conf</em> will result in errors in the output.</li>
</ol>
<hr />

<details>
  <strong>Output of <em>telegraf &ndash;config /etc/telegraf/telegraf.conf &ndash;test</em>. Click to expand!</strong>
  <div class="highlight"><pre><code class="language-python">[root<span style="color: #a6e22e;">@kilenc</span> telegraf]<span style="color: #75715e;"># pwd</span>
<span style="color: #f92672;">/</span>etc<span style="color: #f92672;">/</span>telegraf
[root<span style="color: #a6e22e;">@kilenc</span> telegraf]<span style="color: #75715e;"># telegraf --config /etc/telegraf/telegraf.conf --test</span>
<span style="color: #f92672;">&gt;</span> mem,host<span style="color: #f92672;">=</span>kilenc active<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1938817024</span>i,available<span style="color: #f92672;">=</span><span style="color: #ae81ff;">6820003840</span>i,available_percent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">20.653390597462806</span>,buffered<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4849664</span>i,cached<span style="color: #f92672;">=</span><span style="color: #ae81ff;">6317735936</span>i,commit_limit<span style="color: #f92672;">=</span><span style="color: #ae81ff;">33560395776</span>i,committed_as<span style="color: #f92672;">=</span><span style="color: #ae81ff;">18635292672</span>i,dirty<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4128768</span>i,free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2623799296</span>i,high_free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,high_total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,huge_page_size<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2097152</span>i,huge_pages_free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,huge_pages_total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,inactive<span style="color: #f92672;">=</span><span style="color: #ae81ff;">13852016640</span>i,low_free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,low_total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,mapped<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1007353856</span>i,page_tables<span style="color: #f92672;">=</span><span style="color: #ae81ff;">22478848</span>i,shared<span style="color: #f92672;">=</span><span style="color: #ae81ff;">259063808</span>i,slab<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4946919424</span>i,sreclaimable<span style="color: #f92672;">=</span><span style="color: #ae81ff;">902234112</span>i,sunreclaim<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4044685312</span>i,swap_cached<span style="color: #f92672;">=</span><span style="color: #ae81ff;">3866624</span>i,swap_free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">16994729984</span>i,swap_total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">17049780224</span>i,total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">33021231104</span>i,used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">24074846208</span>i,used_percent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">72.90717336424115</span>,vmalloc_chunk<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,vmalloc_total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">562949953421312</span>i,vmalloc_used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,write_back<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,write_back_tmp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> kernel,host<span style="color: #f92672;">=</span>kilenc boot_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1673790850</span>i,context_switches<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1943864437</span>i,entropy_avail<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4037</span>i,interrupts<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1294179599</span>i,processes_forked<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4255316</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> swap,host<span style="color: #f92672;">=</span>kilenc free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">16994729984</span>i,total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">17049780224</span>i,used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">55050240</span>i,used_percent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0.3228794698626609</span> <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> swap,host<span style="color: #f92672;">=</span>kilenc <span style="color: #f92672;">in</span><span style="color: #f92672;">=</span><span style="color: #ae81ff;">172032</span>i,out<span style="color: #f92672;">=</span><span style="color: #ae81ff;">851968</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> net,host<span style="color: #f92672;">=</span>kilenc,interface<span style="color: #f92672;">=</span>lo bytes_recv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">90039931116</span>i,bytes_sent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">90039931116</span>i,drop_in<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,drop_out<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,err_in<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,err_out<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,packets_recv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">17245997</span>i,packets_sent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">17245997</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> net,host<span style="color: #f92672;">=</span>kilenc,interface<span style="color: #f92672;">=</span>enP4p1s0f0 bytes_recv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,bytes_sent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,drop_in<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,drop_out<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,err_in<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,err_out<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,packets_recv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,packets_sent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> net,host<span style="color: #f92672;">=</span>kilenc,interface<span style="color: #f92672;">=</span>enP4p1s0f1 bytes_recv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">11791041280</span>i,bytes_sent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1701152001</span>i,drop_in<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,drop_out<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,err_in<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,err_out<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,packets_recv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">10322276</span>i,packets_sent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4594948</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> net,host<span style="color: #f92672;">=</span>kilenc,interface<span style="color: #f92672;">=</span>all icmp_inaddrmaskreps<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_inaddrmasks<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_incsumerrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_indestunreachs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">8609</span>i,icmp_inechoreps<span style="color: #f92672;">=</span><span style="color: #ae81ff;">20</span>i,icmp_inechos<span style="color: #f92672;">=</span><span style="color: #ae81ff;">11</span>i,icmp_inerrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1084</span>i,icmp_inmsgs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">8640</span>i,icmp_inparmprobs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_inredirects<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_insrcquenchs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_intimeexcds<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_intimestampreps<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_intimestamps<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_outaddrmaskreps<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_outaddrmasks<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_outdestunreachs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4805</span>i,icmp_outechoreps<span style="color: #f92672;">=</span><span style="color: #ae81ff;">11</span>i,icmp_outechos<span style="color: #f92672;">=</span><span style="color: #ae81ff;">94</span>i,icmp_outerrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_outmsgs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4910</span>i,icmp_outparmprobs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_outredirects<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_outsrcquenchs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_outtimeexcds<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_outtimestampreps<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmp_outtimestamps<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,icmpmsg_intype0<span style="color: #f92672;">=</span><span style="color: #ae81ff;">20</span>i,icmpmsg_intype3<span style="color: #f92672;">=</span><span style="color: #ae81ff;">8609</span>i,icmpmsg_intype8<span style="color: #f92672;">=</span><span style="color: #ae81ff;">11</span>i,icmpmsg_outtype0<span style="color: #f92672;">=</span><span style="color: #ae81ff;">11</span>i,icmpmsg_outtype3<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4805</span>i,icmpmsg_outtype8<span style="color: #f92672;">=</span><span style="color: #ae81ff;">94</span>i,ip_defaultttl<span style="color: #f92672;">=</span><span style="color: #ae81ff;">64</span>i,ip_forwarding<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i,ip_forwdatagrams<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ip_fragcreates<span style="color: #f92672;">=</span><span style="color: #ae81ff;">62958</span>i,ip_fragfails<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ip_fragoks<span style="color: #f92672;">=</span><span style="color: #ae81ff;">12611</span>i,ip_inaddrerrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i,ip_indelivers<span style="color: #f92672;">=</span><span style="color: #ae81ff;">21324370</span>i,ip_indiscards<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ip_inhdrerrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ip_inreceives<span style="color: #f92672;">=</span><span style="color: #ae81ff;">21324371</span>i,ip_inunknownprotos<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ip_outdiscards<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ip_outnoroutes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">30</span>i,ip_outrequests<span style="color: #f92672;">=</span><span style="color: #ae81ff;">21248264</span>i,ip_reasmfails<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ip_reasmoks<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ip_reasmreqds<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ip_reasmtimeout<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,tcp_activeopens<span style="color: #f92672;">=</span><span style="color: #ae81ff;">763497</span>i,tcp_attemptfails<span style="color: #f92672;">=</span><span style="color: #ae81ff;">96617</span>i,tcp_currestab<span style="color: #f92672;">=</span><span style="color: #ae81ff;">118</span>i,tcp_estabresets<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1917</span>i,tcp_incsumerrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,tcp_inerrs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,tcp_insegs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">19488475</span>i,tcp_maxconn<span style="color: #f92672;">=-</span><span style="color: #ae81ff;">1</span>i,tcp_outrsts<span style="color: #f92672;">=</span><span style="color: #ae81ff;">137188</span>i,tcp_outsegs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">20220038</span>i,tcp_passiveopens<span style="color: #f92672;">=</span><span style="color: #ae81ff;">675805</span>i,tcp_retranssegs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9827</span>i,tcp_rtoalgorithm<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i,tcp_rtomax<span style="color: #f92672;">=</span><span style="color: #ae81ff;">120000</span>i,tcp_rtomin<span style="color: #f92672;">=</span><span style="color: #ae81ff;">200</span>i,udp_ignoredmulti<span style="color: #f92672;">=</span><span style="color: #ae81ff;">10509</span>i,udp_incsumerrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,udp_indatagrams<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1816997</span>i,udp_inerrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,udp_memerrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,udp_noports<span style="color: #f92672;">=</span><span style="color: #ae81ff;">264</span>i,udp_outdatagrams<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1506724</span>i,udp_rcvbuferrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,udp_sndbuferrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,udplite_ignoredmulti<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,udplite_incsumerrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,udplite_indatagrams<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,udplite_inerrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,udplite_memerrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,udplite_noports<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,udplite_outdatagrams<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,udplite_rcvbuferrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,udplite_sndbuferrors<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> diskio,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>dm<span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span> io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9739370</span>i,iops_in_progress<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,read_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4015612416</span>i,read_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">604060</span>i,reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">40592</span>i,weighted_io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">60563370</span>i,write_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">47025459712</span>i,write_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">59959310</span>i,writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1079691</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> diskio,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>sda1 io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1460</span>i,iops_in_progress<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,read_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4849664</span>i,read_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1304</span>i,reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">67</span>i,weighted_io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1304</span>i,write_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,write_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> diskio,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>sda3 io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">45872430</span>i,iops_in_progress<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">623</span>i,merged_writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1061314</span>i,read_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">16398521856</span>i,read_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">3371612</span>i,reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">139298</span>i,weighted_io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">311521720</span>i,write_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">133715422208</span>i,write_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">308150107</span>i,writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">7031512</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> diskio,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>dm<span style="color: #f92672;">-</span><span style="color: #ae81ff;">1</span> io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">5780</span>i,iops_in_progress<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,read_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">5636096</span>i,read_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">3030</span>i,reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">81</span>i,weighted_io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">26500</span>i,write_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">13631488</span>i,write_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">23470</span>i,writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">208</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> disk,device<span style="color: #f92672;">=</span>dm<span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span>,fstype<span style="color: #f92672;">=</span>xfs,host<span style="color: #f92672;">=</span>kilenc,mode<span style="color: #f92672;">=</span>rw,path<span style="color: #f92672;">=/</span> free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9315028992</span>i,inodes_free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">18214222</span>i,inodes_total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">19822888</span>i,inodes_used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1608666</span>i,total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">53660876800</span>i,used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">44345847808</span>i,used_percent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">82.64093032486566</span> <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> disk,device<span style="color: #f92672;">=</span>sda2,fstype<span style="color: #f92672;">=</span>ext4,host<span style="color: #f92672;">=</span>kilenc,mode<span style="color: #f92672;">=</span>rw,path<span style="color: #f92672;">=/</span>boot free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">309653504</span>i,inodes_free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">65264</span>i,inodes_total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">65536</span>i,inodes_used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">272</span>i,total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1020702720</span>i,used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">640585728</span>i,used_percent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">67.41310045173972</span> <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> disk,device<span style="color: #f92672;">=</span>dm<span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span>,fstype<span style="color: #f92672;">=</span>xfs,host<span style="color: #f92672;">=</span>kilenc,mode<span style="color: #f92672;">=</span>rw,path<span style="color: #f92672;">=/</span>home free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">856442515456</span>i,inodes_free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">452529686</span>i,inodes_total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">453312512</span>i,inodes_used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">782826</span>i,total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">927930712064</span>i,used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">71488196608</span>i,used_percent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">7.704044674735306</span> <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> disk,device<span style="color: #f92672;">=</span>dm<span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span>,fstype<span style="color: #f92672;">=</span>xfs,host<span style="color: #f92672;">=</span>kilenc,mode<span style="color: #f92672;">=</span>rw,path<span style="color: #f92672;">=/</span>home<span style="color: #f92672;">/</span>opt<span style="color: #f92672;">/</span>at13<span style="color: #ae81ff;">.0</span><span style="color: #f92672;">/</span>lib free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">856442515456</span>i,inodes_free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">452529686</span>i,inodes_total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">453312512</span>i,inodes_used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">782826</span>i,total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">927930712064</span>i,used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">71488196608</span>i,used_percent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">7.704044674735306</span> <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> disk,device<span style="color: #f92672;">=</span>dm<span style="color: #f92672;">-</span><span style="color: #ae81ff;">2</span>,fstype<span style="color: #f92672;">=</span>xfs,host<span style="color: #f92672;">=</span>kilenc,mode<span style="color: #f92672;">=</span>rw,path<span style="color: #f92672;">=/</span>home<span style="color: #f92672;">/</span>opt<span style="color: #f92672;">/</span>at13<span style="color: #ae81ff;">.0</span><span style="color: #f92672;">/</span>lib64 free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">856442515456</span>i,inodes_free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">452529686</span>i,inodes_total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">453312512</span>i,inodes_used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">782826</span>i,total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">927930712064</span>i,used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">71488196608</span>i,used_percent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">7.704044674735306</span> <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> disk,device<span style="color: #f92672;">=</span>ST31000524AS<span style="color: #f92672;">/</span>raktar,fstype<span style="color: #f92672;">=</span>zfs,host<span style="color: #f92672;">=</span>kilenc,mode<span style="color: #f92672;">=</span>rw,path<span style="color: #f92672;">=/</span>mnt<span style="color: #f92672;">/</span>ST31000524AS free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">210837438464</span>i,inodes_free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">411792117</span>i,inodes_total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">412304487</span>i,inodes_used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">512370</span>i,total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">965496143872</span>i,used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">754658705408</span>i,used_percent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">78.16278813725106</span> <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> diskio,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>sda io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">45899860</span>i,iops_in_progress<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">650</span>i,merged_writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1061332</span>i,read_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">16495536128</span>i,read_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">3440899</span>i,reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">141325</span>i,weighted_io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">311596362</span>i,write_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">133715696640</span>i,write_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">308155462</span>i,writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">7031531</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> disk,device<span style="color: #f92672;">=</span>ST31000524AS,fstype<span style="color: #f92672;">=</span>zfs,host<span style="color: #f92672;">=</span>kilenc,mode<span style="color: #f92672;">=</span>rw,path<span style="color: #f92672;">=/</span>ST31000524AS free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">210837438464</span>i,inodes_free<span style="color: #f92672;">=</span><span style="color: #ae81ff;">411792117</span>i,inodes_total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">411792123</span>i,inodes_used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">6</span>i,total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">210837569536</span>i,used<span style="color: #f92672;">=</span><span style="color: #ae81ff;">131072</span>i,used_percent<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0.00006216728844316324</span> <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> diskio,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>sda2 io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">18060</span>i,iops_in_progress<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">27</span>i,merged_writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">18</span>i,read_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">88372224</span>i,read_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">31224</span>i,reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">436</span>i,weighted_io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">36579</span>i,write_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">274432</span>i,write_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">5355</span>i,writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">19</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> diskio,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>dm<span style="color: #f92672;">-</span><span style="color: #ae81ff;">0</span> io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">38788720</span>i,iops_in_progress<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,read_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">12341294080</span>i,read_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1143210</span>i,reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">51814</span>i,weighted_io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">303329620</span>i,write_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">86676331008</span>i,write_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">302186410</span>i,writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">6798400</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> diskio,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>sdb io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">668810</span>i,iops_in_progress<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9</span>i,merged_writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">58</span>i,read_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">104550912</span>i,read_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">746540</span>i,reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">31054</span>i,weighted_io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1445858</span>i,write_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">10845920256</span>i,write_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">699318</span>i,writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">124780</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> diskio,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>sdb1 io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">341330</span>i,iops_in_progress<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">58</span>i,read_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">95562240</span>i,read_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">383066</span>i,reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">25026</span>i,weighted_io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1082385</span>i,write_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">10845920256</span>i,write_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">699318</span>i,writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">124780</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> diskio,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>sdb9 io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">190</span>i,iops_in_progress<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,merged_writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,read_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4980736</span>i,read_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">37</span>i,reads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">69</span>i,weighted_io_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">37</span>i,write_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,write_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,writes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> system,host<span style="color: #f92672;">=</span>kilenc load1<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2.06</span>,load15<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2.12</span>,load5<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2.12</span>,n_cpus<span style="color: #f92672;">=</span><span style="color: #ae81ff;">32</span>i,n_users<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> system,host<span style="color: #f92672;">=</span>kilenc uptime<span style="color: #f92672;">=</span><span style="color: #ae81ff;">456127</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> system,host<span style="color: #f92672;">=</span>kilenc uptime_format<span style="color: #f92672;">=</span><span style="color: #e6db74;">"5 days,  6:42"</span> <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> processes,host<span style="color: #f92672;">=</span>kilenc blocked<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i,dead<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">569</span>i,paging<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,parked<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i,running<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,sleeping<span style="color: #f92672;">=</span><span style="color: #ae81ff;">412</span>i,stopped<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,total<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1366</span>i,total_threads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2683</span>i,unknown<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,zombies<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_servers,host<span style="color: #f92672;">=</span>kilenc,status<span style="color: #f92672;">=</span>total value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_servers,host<span style="color: #f92672;">=</span>kilenc,status<span style="color: #f92672;">=</span>ok value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_servers,host<span style="color: #f92672;">=</span>kilenc,status<span style="color: #f92672;">=</span>closed value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_servers,host<span style="color: #f92672;">=</span>kilenc,status<span style="color: #f92672;">=</span>unreachable value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_servers,host<span style="color: #f92672;">=</span>kilenc,status<span style="color: #f92672;">=</span>unavailable value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_jobs,host<span style="color: #f92672;">=</span>kilenc,state<span style="color: #f92672;">=</span>total value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">121776</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_jobs,host<span style="color: #f92672;">=</span>kilenc,state<span style="color: #f92672;">=</span>running value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">32</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_jobs,host<span style="color: #f92672;">=</span>kilenc,state<span style="color: #f92672;">=</span>suspended value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_jobs,host<span style="color: #f92672;">=</span>kilenc,state<span style="color: #f92672;">=</span>pending value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">120771</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_jobs,host<span style="color: #f92672;">=</span>kilenc,state<span style="color: #f92672;">=</span>finished value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">973</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_users,host<span style="color: #f92672;">=</span>kilenc,state<span style="color: #f92672;">=</span>numusers value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_users,host<span style="color: #f92672;">=</span>kilenc,state<span style="color: #f92672;">=</span>numgroups value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_users,host<span style="color: #f92672;">=</span>kilenc,state<span style="color: #f92672;">=</span>numactive value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_hosts,host<span style="color: #f92672;">=</span>kilenc,state<span style="color: #f92672;">=</span>clients current<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,peak<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_hosts,host<span style="color: #f92672;">=</span>kilenc,state<span style="color: #f92672;">=</span>servers current<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i,peak<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_hosts,host<span style="color: #f92672;">=</span>kilenc,state<span style="color: #f92672;">=</span>cpus current<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2</span>i,peak<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_hosts,host<span style="color: #f92672;">=</span>kilenc,state<span style="color: #f92672;">=</span>cores current<span style="color: #f92672;">=</span><span style="color: #ae81ff;">32</span>i,peak<span style="color: #f92672;">=</span><span style="color: #ae81ff;">32</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_hosts,host<span style="color: #f92672;">=</span>kilenc,state<span style="color: #f92672;">=</span>slots current<span style="color: #f92672;">=</span><span style="color: #ae81ff;">32</span>i,peak<span style="color: #f92672;">=</span><span style="color: #ae81ff;">32</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,host<span style="color: #f92672;">=</span>kilenc,query<span style="color: #f92672;">=</span>job value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,host<span style="color: #f92672;">=</span>kilenc,query<span style="color: #f92672;">=</span>host value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,host<span style="color: #f92672;">=</span>kilenc,query<span style="color: #f92672;">=</span>queue value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,host<span style="color: #f92672;">=</span>kilenc,jobs<span style="color: #f92672;">=</span>submitreqs value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,host<span style="color: #f92672;">=</span>kilenc,jobs<span style="color: #f92672;">=</span>submitted value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,host<span style="color: #f92672;">=</span>kilenc,jobs<span style="color: #f92672;">=</span>dispatched value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">19</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,host<span style="color: #f92672;">=</span>kilenc,jobs<span style="color: #f92672;">=</span>completed value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">12</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,host<span style="color: #f92672;">=</span>kilenc,jobs<span style="color: #f92672;">=</span>sentremote value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,host<span style="color: #f92672;">=</span>kilenc,jobs<span style="color: #f92672;">=</span>acceptremote value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,host<span style="color: #f92672;">=</span>kilenc,sched<span style="color: #f92672;">=</span>interval value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,host<span style="color: #f92672;">=</span>kilenc,sched<span style="color: #f92672;">=</span>matchhost value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">5</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,host<span style="color: #f92672;">=</span>kilenc,sched<span style="color: #f92672;">=</span>buckets value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">5</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,host<span style="color: #f92672;">=</span>kilenc,sched<span style="color: #f92672;">=</span>reordered value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">7</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,host<span style="color: #f92672;">=</span>kilenc,utilization<span style="color: #f92672;">=</span>slots value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,host<span style="color: #f92672;">=</span>kilenc,utilization<span style="color: #f92672;">=</span>memory value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,fd<span style="color: #f92672;">=</span>free,host<span style="color: #f92672;">=</span>kilenc value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">65509</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,fd<span style="color: #f92672;">=</span>used,host<span style="color: #f92672;">=</span>kilenc value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">26</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_mbatchd,fd<span style="color: #f92672;">=</span>total,host<span style="color: #f92672;">=</span>kilenc value<span style="color: #f92672;">=</span><span style="color: #ae81ff;">65535</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_queues,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>admin njobs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,pend<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rsv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,run<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ssusp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,susp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ususp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_queues,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>owners njobs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,pend<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rsv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,run<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ssusp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,susp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ususp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_queues,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>priority njobs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">93951</span>i,pend<span style="color: #f92672;">=</span><span style="color: #ae81ff;">93923</span>i,rsv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,run<span style="color: #f92672;">=</span><span style="color: #ae81ff;">28</span>i,ssusp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,susp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ususp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_queues,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>night njobs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,pend<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rsv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,run<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ssusp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,susp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ususp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_queues,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>short njobs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2504</span>i,pend<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2504</span>i,rsv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,run<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ssusp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,susp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ususp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_queues,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>dataq njobs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,pend<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rsv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,run<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ssusp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,susp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ususp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_queues,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>normal njobs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1750</span>i,pend<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1750</span>i,rsv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,run<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ssusp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,susp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ususp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_queues,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>interactive njobs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,pend<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rsv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,run<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ssusp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,susp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ususp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_queues,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>sendq njobs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">22598</span>i,pend<span style="color: #f92672;">=</span><span style="color: #ae81ff;">22594</span>i,rsv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,run<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4</span>i,ssusp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,susp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ususp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> lsf_queues,host<span style="color: #f92672;">=</span>kilenc,name<span style="color: #f92672;">=</span>idle njobs<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,pend<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rsv<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,run<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ssusp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,susp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,ususp<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i <span style="color: #ae81ff;">1674246976000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu0,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu4,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu8,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu12,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu16,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">98.03921568448419</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1.9607843137324836</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu20,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu24,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu28,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu32,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu36,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu40,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">98.03921568448419</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1.9607843136879006</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu44,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu48,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu52,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu56,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu60,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu64,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">87.99999999906868</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">10.000000001155058</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2.0000000002764864</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu68,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu72,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">86.27450980280263</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">11.764705882127403</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1.9607843137324836</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu76,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu80,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">92.30769231113655</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">3.8461538464431086</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">3.84615384653056</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu84,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">94.11764706486585</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">5.882352941197451</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu88,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu92,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">70.58823529344627</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">29.411764701983955</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu96,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">96.15384615040192</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">3.8461538460125784</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu100,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">97.99999999813735</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1.999999999998181</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu104,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">96.07843137993407</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">3.92156862782338</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu108,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">96.07843136896838</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1.9607843136879006</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1.9607843137324836</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu112,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu116,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">95.91836734305988</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4.08163265313509</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu120,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">84.61538461280144</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">3.8461538460344413</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">11.53846153830009</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu124,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">100</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> cpu,cpu<span style="color: #f92672;">=</span>cpu<span style="color: #f92672;">-</span>total,host<span style="color: #f92672;">=</span>kilenc usage_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">93.47826086554115</span>,usage_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">3.1055900618243673</span>,usage_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_softirq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,usage_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2.484472049468532</span>,usage_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0.9316770186919254</span> <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> procstat,exe<span style="color: #f92672;">=</span>mbatchd,host<span style="color: #f92672;">=</span>kilenc,process_name<span style="color: #f92672;">=</span>mbatchd,user<span style="color: #f92672;">=</span>root child_major_faults<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,child_minor_faults<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,cpu_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,cpu_time_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_soft_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0.03</span>,cpu_time_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0.05</span>,cpu_usage<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,created_at<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1674246974000000000</span>i,involuntary_context_switches<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i,major_faults<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,memory_data<span style="color: #f92672;">=</span><span style="color: #ae81ff;">834994176</span>i,memory_locked<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,memory_rss<span style="color: #f92672;">=</span><span style="color: #ae81ff;">815595520</span>i,memory_stack<span style="color: #f92672;">=</span><span style="color: #ae81ff;">327680</span>i,memory_swap<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,memory_usage<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2.469912528991699</span>,memory_vms<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1091108864</span>i,minor_faults<span style="color: #f92672;">=</span><span style="color: #ae81ff;">726</span>i,nice_priority<span style="color: #f92672;">=</span><span style="color: #ae81ff;">20</span>i,num_fds<span style="color: #f92672;">=</span><span style="color: #ae81ff;">10</span>i,num_threads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2</span>i,pid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">62056</span>i,ppid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4103699</span>i,read_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,read_count<span style="color: #f92672;">=</span><span style="color: #ae81ff;">27</span>i,realtime_priority<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rlimit_cpu_time_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_cpu_time_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_file_locks_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_file_locks_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_data_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_data_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_locked_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">67108864</span>i,rlimit_memory_locked_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">67108864</span>i,rlimit_memory_rss_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_rss_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_stack_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_stack_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">8388608</span>i,rlimit_memory_vms_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_vms_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_nice_priority_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rlimit_nice_priority_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rlimit_num_fds_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">262144</span>i,rlimit_num_fds_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">65535</span>i,rlimit_realtime_priority_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rlimit_realtime_priority_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rlimit_signals_pending_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">118856</span>i,rlimit_signals_pending_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">118856</span>i,signals_pending<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,voluntary_context_switches<span style="color: #f92672;">=</span><span style="color: #ae81ff;">5</span>i,write_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,write_count<span style="color: #f92672;">=</span><span style="color: #ae81ff;">16</span>i <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> procstat,exe<span style="color: #f92672;">=</span>mbschd,host<span style="color: #f92672;">=</span>kilenc,process_name<span style="color: #f92672;">=</span>mbschd,user<span style="color: #f92672;">=</span>lsfadmin child_major_faults<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,child_minor_faults<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2457641</span>i,cpu_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">320</span>i,cpu_time_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0.02</span>,cpu_time_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_soft_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">8.4</span>,cpu_time_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">312.14</span>,cpu_usage<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1.836645120693344</span>,created_at<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1674227581000000000</span>i,involuntary_context_switches<span style="color: #f92672;">=</span><span style="color: #ae81ff;">3553</span>i,major_faults<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i,memory_data<span style="color: #f92672;">=</span><span style="color: #ae81ff;">228851712</span>i,memory_locked<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,memory_rss<span style="color: #f92672;">=</span><span style="color: #ae81ff;">236847104</span>i,memory_stack<span style="color: #f92672;">=</span><span style="color: #ae81ff;">196608</span>i,memory_swap<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,memory_usage<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0.717257022857666</span>,memory_vms<span style="color: #f92672;">=</span><span style="color: #ae81ff;">246808576</span>i,minor_faults<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2137969</span>i,nice_priority<span style="color: #f92672;">=</span><span style="color: #ae81ff;">20</span>i,num_fds<span style="color: #f92672;">=</span><span style="color: #ae81ff;">3</span>i,num_threads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i,pid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4103740</span>i,ppid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4103699</span>i,read_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1552384</span>i,read_count<span style="color: #f92672;">=</span><span style="color: #ae81ff;">936861</span>i,realtime_priority<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rlimit_cpu_time_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_cpu_time_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_file_locks_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_file_locks_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_data_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_data_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_locked_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">67108864</span>i,rlimit_memory_locked_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">67108864</span>i,rlimit_memory_rss_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_rss_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_stack_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_stack_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">8388608</span>i,rlimit_memory_vms_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_vms_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_nice_priority_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rlimit_nice_priority_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rlimit_num_fds_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">262144</span>i,rlimit_num_fds_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">65535</span>i,rlimit_realtime_priority_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rlimit_realtime_priority_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rlimit_signals_pending_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">118856</span>i,rlimit_signals_pending_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">118856</span>i,signals_pending<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,voluntary_context_switches<span style="color: #f92672;">=</span><span style="color: #ae81ff;">43952</span>i,write_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,write_count<span style="color: #f92672;">=</span><span style="color: #ae81ff;">42311</span>i <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> procstat_lookup,exe<span style="color: #f92672;">=</span>mbschd,host<span style="color: #f92672;">=</span>kilenc,pid_finder<span style="color: #f92672;">=</span>pgrep,result<span style="color: #f92672;">=</span>success pid_count<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i,result_code<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,running<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1</span>i <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> procstat,exe<span style="color: #f92672;">=</span>mbatchd,host<span style="color: #f92672;">=</span>kilenc,process_name<span style="color: #f92672;">=</span>mbatchd,user<span style="color: #f92672;">=</span>root child_major_faults<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2</span>i,child_minor_faults<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4476280</span>i,cpu_time<span style="color: #f92672;">=</span><span style="color: #ae81ff;">177</span>i,cpu_time_guest<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_guest_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_idle<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_iowait<span style="color: #f92672;">=</span><span style="color: #ae81ff;">6.68</span>,cpu_time_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_nice<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_soft_irq<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_steal<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,cpu_time_system<span style="color: #f92672;">=</span><span style="color: #ae81ff;">51.01</span>,cpu_time_user<span style="color: #f92672;">=</span><span style="color: #ae81ff;">126.42</span>,cpu_usage<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>,created_at<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1674227573000000000</span>i,involuntary_context_switches<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4993</span>i,major_faults<span style="color: #f92672;">=</span><span style="color: #ae81ff;">3</span>i,memory_data<span style="color: #f92672;">=</span><span style="color: #ae81ff;">834994176</span>i,memory_locked<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,memory_rss<span style="color: #f92672;">=</span><span style="color: #ae81ff;">827785216</span>i,memory_stack<span style="color: #f92672;">=</span><span style="color: #ae81ff;">327680</span>i,memory_swap<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,memory_usage<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2.5068273544311523</span>,memory_vms<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1091108864</span>i,minor_faults<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2406945</span>i,nice_priority<span style="color: #f92672;">=</span><span style="color: #ae81ff;">20</span>i,num_fds<span style="color: #f92672;">=</span><span style="color: #ae81ff;">26</span>i,num_threads<span style="color: #f92672;">=</span><span style="color: #ae81ff;">3</span>i,pid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4103699</span>i,ppid<span style="color: #f92672;">=</span><span style="color: #ae81ff;">4103684</span>i,read_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">21008384</span>i,read_count<span style="color: #f92672;">=</span><span style="color: #ae81ff;">364726</span>i,realtime_priority<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rlimit_cpu_time_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_cpu_time_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_file_locks_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_file_locks_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_data_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_data_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_locked_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">67108864</span>i,rlimit_memory_locked_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">67108864</span>i,rlimit_memory_rss_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_rss_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_stack_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_stack_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">8388608</span>i,rlimit_memory_vms_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_memory_vms_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">9223372036854775807</span>i,rlimit_nice_priority_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rlimit_nice_priority_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rlimit_num_fds_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">262144</span>i,rlimit_num_fds_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">65535</span>i,rlimit_realtime_priority_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rlimit_realtime_priority_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,rlimit_signals_pending_hard<span style="color: #f92672;">=</span><span style="color: #ae81ff;">118856</span>i,rlimit_signals_pending_soft<span style="color: #f92672;">=</span><span style="color: #ae81ff;">118856</span>i,signals_pending<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,voluntary_context_switches<span style="color: #f92672;">=</span><span style="color: #ae81ff;">172583</span>i,write_bytes<span style="color: #f92672;">=</span><span style="color: #ae81ff;">1562181632</span>i,write_count<span style="color: #f92672;">=</span><span style="color: #ae81ff;">12164760</span>i <span style="color: #ae81ff;">1674246977000000000</span>
<span style="color: #f92672;">&gt;</span> procstat_lookup,exe<span style="color: #f92672;">=</span>mbatchd,host<span style="color: #f92672;">=</span>kilenc,pid_finder<span style="color: #f92672;">=</span>pgrep,result<span style="color: #f92672;">=</span>success pid_count<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2</span>i,result_code<span style="color: #f92672;">=</span><span style="color: #ae81ff;">0</span>i,running<span style="color: #f92672;">=</span><span style="color: #ae81ff;">2</span>i <span style="color: #ae81ff;">1674246977000000000</span>
</code></pre></div>

</details>

<hr />

<ol start="6">
<li>Assuming there were no errors in the previous step with telegraf, proceed to start the telegraf process via systemd.</li>
</ol>
<div class="highlight"><pre><code class="language-plaintext">[root@kilenc telegraf]# systemctl start telegraf
[root@kilenc telegraf]# systemctl status telegraf
● telegraf.service - Telegraf
   Loaded: loaded (/usr/lib/systemd/system/telegraf.service; enabled; vendor preset: disabled)
   Active: active (running) since Thu 2023-01-19 14:13:51 EST; 1 day 1h ago
     Docs: https://github.com/influxdata/telegraf
 Main PID: 3225959 (telegraf)
    Tasks: 35 (limit: 190169)
   Memory: 192.6M
   CGroup: /system.slice/telegraf.service
           └─3225959 /usr/bin/telegraf -config /etc/telegraf/telegraf.conf -config-directory /etc/tele&gt;

Jan 19 14:13:51 kilenc systemd[1]: Starting Telegraf...
Jan 19 14:13:51 kilenc systemd[1]: Started Telegraf.</code></pre></div>

<ol start="7">
<li>On the host running the database instance, <em>adatbazis</em>, perform queries to check whether the database <em>telegraf</em> exists, as well as checking if LSF related data is being logged.
This is confirmed in the output below.</li>
</ol>
<hr />

<details>
  <strong>Output from InfluxDB queries. Click to expand!</strong>
  <div class="highlight"><pre><code class="language-js">[<span style="color: #a6e22e;">root</span><span style="color: #960050; background-color: #1e0010;">@</span><span style="color: #a6e22e;">adatbazis</span> <span style="color: #a6e22e;">fedora</span>]<span style="color: #960050; background-color: #1e0010;">#</span> <span style="color: #a6e22e;">influx</span>
<span style="color: #a6e22e;">Connected</span> <span style="color: #a6e22e;">to</span> <span style="color: #a6e22e;">https</span><span style="color: #f92672;">:</span><span style="color: #75715e;">//localhost:8086 version 1.8.10
</span><span style="color: #75715e;"></span><span style="color: #a6e22e;">InfluxDB</span> <span style="color: #a6e22e;">shell</span> <span style="color: #a6e22e;">version</span><span style="color: #f92672;">:</span> <span style="color: #ae81ff;">1.8</span>.<span style="color: #ae81ff;">10</span>
<span style="color: #f92672;">&gt;</span> <span style="color: #a6e22e;">auth</span>
<span style="color: #a6e22e;">username</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">influx</span>
<span style="color: #a6e22e;">password</span><span style="color: #f92672;">:</span> 
<span style="color: #f92672;">&gt;</span> <span style="color: #a6e22e;">show</span> <span style="color: #a6e22e;">databases</span>
<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">databases</span>
<span style="color: #a6e22e;">name</span>
<span style="color: #f92672;">----</span>
<span style="color: #ae81ff;">_</span><span style="color: #a6e22e;">internal</span>
<span style="color: #a6e22e;">telegraf</span>
<span style="color: #f92672;">&gt;</span> <span style="color: #a6e22e;">use</span> <span style="color: #a6e22e;">telegraf</span>
<span style="color: #a6e22e;">Using</span> <span style="color: #a6e22e;">database</span> <span style="color: #a6e22e;">telegraf</span>
<span style="color: #f92672;">&gt;</span> <span style="color: #a6e22e;">show</span> <span style="color: #a6e22e;">field</span> <span style="color: #a6e22e;">keys</span>
<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">cpu</span>
<span style="color: #a6e22e;">fieldKey</span>         <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span>         <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">usage_guest</span>      <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">usage_guest_nice</span> <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">usage_idle</span>       <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">usage_iowait</span>     <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">usage_irq</span>        <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">usage_nice</span>       <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">usage_softirq</span>    <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">usage_steal</span>      <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">usage_system</span>     <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">usage_user</span>       <span style="color: #66d9ef;">float</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">disk</span>
<span style="color: #a6e22e;">fieldKey</span>     <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span>     <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">free</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">inodes_free</span>  <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">inodes_total</span> <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">inodes_used</span>  <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">total</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">used</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">used_percent</span> <span style="color: #66d9ef;">float</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">diskio</span>
<span style="color: #a6e22e;">fieldKey</span>         <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span>         <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">io_time</span>          <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">iops_in_progress</span> <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">merged_reads</span>     <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">merged_writes</span>    <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">read_bytes</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">read_time</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">reads</span>            <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">weighted_io_time</span> <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">write_bytes</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">write_time</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">writes</span>           <span style="color: #a6e22e;">integer</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">kernel</span>
<span style="color: #a6e22e;">fieldKey</span>         <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span>         <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">boot_time</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">context_switches</span> <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">entropy_avail</span>    <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">interrupts</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">processes_forked</span> <span style="color: #a6e22e;">integer</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">lsf_hosts</span>
<span style="color: #a6e22e;">fieldKey</span> <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span> <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">current</span>  <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">peak</span>     <span style="color: #a6e22e;">integer</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">lsf_jobs</span>
<span style="color: #a6e22e;">fieldKey</span> <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span> <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">value</span>    <span style="color: #a6e22e;">integer</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">lsf_mbatchd</span>
<span style="color: #a6e22e;">fieldKey</span> <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span> <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">value</span>    <span style="color: #a6e22e;">integer</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">lsf_queues</span>
<span style="color: #a6e22e;">fieldKey</span> <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span> <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">njobs</span>    <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">pend</span>     <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">rsv</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">run</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ssusp</span>    <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">susp</span>     <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ususp</span>    <span style="color: #a6e22e;">integer</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">lsf_servers</span>
<span style="color: #a6e22e;">fieldKey</span> <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span> <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">value</span>    <span style="color: #a6e22e;">integer</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">lsf_users</span>
<span style="color: #a6e22e;">fieldKey</span> <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span> <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">value</span>    <span style="color: #a6e22e;">integer</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">mem</span>
<span style="color: #a6e22e;">fieldKey</span>          <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span>          <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">active</span>            <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">available</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">available_percent</span> <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">buffered</span>          <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">cached</span>            <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">commit_limit</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">committed_as</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">dirty</span>             <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">free</span>              <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">high_free</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">high_total</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">huge_page_size</span>    <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">huge_pages_free</span>   <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">huge_pages_total</span>  <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">inactive</span>          <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">low_free</span>          <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">low_total</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">mapped</span>            <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">page_tables</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">shared</span>            <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">slab</span>              <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">sreclaimable</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">sunreclaim</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">swap_cached</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">swap_free</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">swap_total</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">total</span>             <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">used</span>              <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">used_percent</span>      <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">vmalloc_chunk</span>     <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">vmalloc_total</span>     <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">vmalloc_used</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">write_back</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">write_back_tmp</span>    <span style="color: #a6e22e;">integer</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">net</span>
<span style="color: #a6e22e;">fieldKey</span>              <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span>              <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">bytes_recv</span>            <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">bytes_sent</span>            <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">drop_in</span>               <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">drop_out</span>              <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">err_in</span>                <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">err_out</span>               <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_inaddrmaskreps</span>   <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_inaddrmasks</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_incsumerrors</span>     <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_indestunreachs</span>   <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_inechoreps</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_inechos</span>          <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_inerrors</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_inmsgs</span>           <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_inparmprobs</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_inredirects</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_insrcquenchs</span>     <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_intimeexcds</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_intimestampreps</span>  <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_intimestamps</span>     <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_outaddrmaskreps</span>  <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_outaddrmasks</span>     <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_outdestunreachs</span>  <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_outechoreps</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_outechos</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_outerrors</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_outmsgs</span>          <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_outparmprobs</span>     <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_outredirects</span>     <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_outsrcquenchs</span>    <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_outtimeexcds</span>     <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_outtimestampreps</span> <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmp_outtimestamps</span>    <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmpmsg_intype0</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmpmsg_intype3</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmpmsg_intype8</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmpmsg_outtype0</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmpmsg_outtype3</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">icmpmsg_outtype8</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_defaultttl</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_forwarding</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_forwdatagrams</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_fragcreates</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_fragfails</span>          <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_fragoks</span>            <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_inaddrerrors</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_indelivers</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_indiscards</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_inhdrerrors</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_inreceives</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_inunknownprotos</span>    <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_outdiscards</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_outnoroutes</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_outrequests</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_reasmfails</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_reasmoks</span>           <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_reasmreqds</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ip_reasmtimeout</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">packets_recv</span>          <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">packets_sent</span>          <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">tcp_activeopens</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">tcp_attemptfails</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">tcp_currestab</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">tcp_estabresets</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">tcp_incsumerrors</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">tcp_inerrs</span>            <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">tcp_insegs</span>            <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">tcp_maxconn</span>           <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">tcp_outrsts</span>           <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">tcp_outsegs</span>           <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">tcp_passiveopens</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">tcp_retranssegs</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">tcp_rtoalgorithm</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">tcp_rtomax</span>            <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">tcp_rtomin</span>            <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udp_ignoredmulti</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udp_incsumerrors</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udp_indatagrams</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udp_inerrors</span>          <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udp_memerrors</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udp_noports</span>           <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udp_outdatagrams</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udp_rcvbuferrors</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udp_sndbuferrors</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udplite_ignoredmulti</span>  <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udplite_incsumerrors</span>  <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udplite_indatagrams</span>   <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udplite_inerrors</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udplite_memerrors</span>     <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udplite_noports</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udplite_outdatagrams</span>  <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udplite_rcvbuferrors</span>  <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">udplite_sndbuferrors</span>  <span style="color: #a6e22e;">integer</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">processes</span>
<span style="color: #a6e22e;">fieldKey</span>      <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span>      <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">blocked</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">dead</span>          <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">idle</span>          <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">paging</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">parked</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">running</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">sleeping</span>      <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">stopped</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">total</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">total_threads</span> <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">unknown</span>       <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">zombies</span>       <span style="color: #a6e22e;">integer</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">procstat</span>
<span style="color: #a6e22e;">fieldKey</span>                     <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span>                     <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">child_major_faults</span>           <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">child_minor_faults</span>           <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">cpu_time_guest</span>               <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">cpu_time_guest_nice</span>          <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">cpu_time_idle</span>                <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">cpu_time_iowait</span>              <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">cpu_time_irq</span>                 <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">cpu_time_nice</span>                <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">cpu_time_soft_irq</span>            <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">cpu_time_steal</span>               <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">cpu_time_system</span>              <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">cpu_time_user</span>                <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">cpu_usage</span>                    <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">created_at</span>                   <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">involuntary_context_switches</span> <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">major_faults</span>                 <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">memory_data</span>                  <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">memory_locked</span>                <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">memory_rss</span>                   <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">memory_stack</span>                 <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">memory_swap</span>                  <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">memory_usage</span>                 <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">memory_vms</span>                   <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">minor_faults</span>                 <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">num_threads</span>                  <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">pid</span>                          <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">ppid</span>                         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">voluntary_context_switches</span>   <span style="color: #a6e22e;">integer</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">procstat_lookup</span>
<span style="color: #a6e22e;">fieldKey</span>    <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span>    <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">pid_count</span>   <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">result_code</span> <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">running</span>     <span style="color: #a6e22e;">integer</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">swap</span>
<span style="color: #a6e22e;">fieldKey</span>     <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span>     <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">free</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #66d9ef;">in</span>           <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">out</span>          <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">total</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">used</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">used_percent</span> <span style="color: #66d9ef;">float</span>

<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">system</span>
<span style="color: #a6e22e;">fieldKey</span>       <span style="color: #a6e22e;">fieldType</span>
<span style="color: #f92672;">--------</span>       <span style="color: #f92672;">---------</span>
<span style="color: #a6e22e;">load1</span>          <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">load15</span>         <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">load5</span>          <span style="color: #66d9ef;">float</span>
<span style="color: #a6e22e;">n_cpus</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">n_unique_users</span> <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">n_users</span>        <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">uptime</span>         <span style="color: #a6e22e;">integer</span>
<span style="color: #a6e22e;">uptime_format</span>  <span style="color: #a6e22e;">string</span>
<span style="color: #f92672;">&gt;</span> <span style="color: #a6e22e;">select</span> <span style="color: #f92672;">*</span> <span style="color: #a6e22e;">from</span> <span style="color: #a6e22e;">metrics</span>
<span style="color: #f92672;">&gt;</span> <span style="color: #a6e22e;">SELECT</span> <span style="color: #f92672;">*</span> <span style="color: #a6e22e;">FROM</span> <span style="color: #e6db74;">"lsf_hosts"</span>;
<span style="color: #a6e22e;">name</span><span style="color: #f92672;">:</span> <span style="color: #a6e22e;">lsf_hosts</span>
<span style="color: #a6e22e;">time</span>                <span style="color: #a6e22e;">current</span> <span style="color: #a6e22e;">host</span>   <span style="color: #a6e22e;">peak</span> <span style="color: #a6e22e;">state</span>
<span style="color: #f92672;">----</span>                <span style="color: #f92672;">-------</span> <span style="color: #f92672;">----</span>   <span style="color: #f92672;">----</span> <span style="color: #f92672;">-----</span>
<span style="color: #ae81ff;">1674493170000000000</span> <span style="color: #ae81ff;">0</span>       <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">0</span>    <span style="color: #a6e22e;">clients</span>
<span style="color: #ae81ff;">1674493170000000000</span> <span style="color: #ae81ff;">32</span>      <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">32</span>   <span style="color: #a6e22e;">slots</span>
<span style="color: #ae81ff;">1674493170000000000</span> <span style="color: #ae81ff;">32</span>      <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">32</span>   <span style="color: #a6e22e;">cores</span>
<span style="color: #ae81ff;">1674493170000000000</span> <span style="color: #ae81ff;">1</span>       <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">1</span>    <span style="color: #a6e22e;">servers</span>
<span style="color: #ae81ff;">1674493170000000000</span> <span style="color: #ae81ff;">2</span>       <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">2</span>    <span style="color: #a6e22e;">cpus</span>
<span style="color: #ae81ff;">1674493200000000000</span> <span style="color: #ae81ff;">1</span>       <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">1</span>    <span style="color: #a6e22e;">servers</span>
<span style="color: #ae81ff;">1674493200000000000</span> <span style="color: #ae81ff;">2</span>       <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">2</span>    <span style="color: #a6e22e;">cpus</span>
<span style="color: #ae81ff;">1674493200000000000</span> <span style="color: #ae81ff;">32</span>      <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">32</span>   <span style="color: #a6e22e;">slots</span>
<span style="color: #ae81ff;">1674493200000000000</span> <span style="color: #ae81ff;">0</span>       <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">0</span>    <span style="color: #a6e22e;">clients</span>
<span style="color: #ae81ff;">1674493200000000000</span> <span style="color: #ae81ff;">32</span>      <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">32</span>   <span style="color: #a6e22e;">cores</span>
<span style="color: #ae81ff;">1674493230000000000</span> <span style="color: #ae81ff;">0</span>       <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">0</span>    <span style="color: #a6e22e;">clients</span>
<span style="color: #ae81ff;">1674493230000000000</span> <span style="color: #ae81ff;">32</span>      <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">32</span>   <span style="color: #a6e22e;">cores</span>
<span style="color: #ae81ff;">1674493230000000000</span> <span style="color: #ae81ff;">2</span>       <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">2</span>    <span style="color: #a6e22e;">cpus</span>
<span style="color: #ae81ff;">1674493230000000000</span> <span style="color: #ae81ff;">1</span>       <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">1</span>    <span style="color: #a6e22e;">servers</span>
<span style="color: #ae81ff;">1674493230000000000</span> <span style="color: #ae81ff;">32</span>      <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">32</span>   <span style="color: #a6e22e;">slots</span>
<span style="color: #ae81ff;">1674493260000000000</span> <span style="color: #ae81ff;">1</span>       <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">1</span>    <span style="color: #a6e22e;">servers</span>
<span style="color: #ae81ff;">1674493260000000000</span> <span style="color: #ae81ff;">32</span>      <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">32</span>   <span style="color: #a6e22e;">slots</span>
<span style="color: #ae81ff;">1674493260000000000</span> <span style="color: #ae81ff;">0</span>       <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">0</span>    <span style="color: #a6e22e;">clients</span>
<span style="color: #ae81ff;">1674493260000000000</span> <span style="color: #ae81ff;">2</span>       <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">2</span>    <span style="color: #a6e22e;">cpus</span>
<span style="color: #ae81ff;">1674493260000000000</span> <span style="color: #ae81ff;">32</span>      <span style="color: #a6e22e;">kilenc</span> <span style="color: #ae81ff;">32</span>   <span style="color: #a6e22e;">cores</span>
<span style="color: #f92672;">&gt;</span> <span style="color: #a6e22e;">quit</span>
</code></pre></div>

</details>

<hr />

<ol start="8">
<li>With telegraf successfully logging data to the InfluxDB instance, it will now be possible to create a data source in Grafana in order to create a dashboard containing LSF metrics.
As noted at the outset, this article is not meant to be an extensive guide to the creation of dashoards in Grafana. In the Grafana navigation select <em>Configuration</em> &gt; <em>Data sources</em>.</li>
</ol>
<figure><img src="https://www.gaborsamu.com/images/configure_datasource.png" />
</figure>

<ol start="9">
<li>Select the <em>Add data source</em> button, followed by InfluxDB, which is listed under <em>Time series databases</em>. On the settings page specify following values:</li>
</ol>
<hr />

<table>
<thead>
<tr>
<th>Variable</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>URL</td>
<td><em>http://adatbazis:8086</em></td>
</tr>
<tr>
<td>Database</td>
<td><em>telegraf</em></td>
</tr>
<tr>
<td>Basic auth</td>
<td>(enable)</td>
</tr>
<tr>
<td>User</td>
<td>&lt;influxdb_username&gt;</td>
</tr>
<tr>
<td>Password</td>
<td>&lt;influxdb_password</td>
</tr>
</tbody>
</table>
<hr />

<p>Next, click on <em>Save &amp; test</em>. If all variables and settings were properly specified, the message <em>datasource is working. 17 measurements found</em>.</p>

<figure><img src="https://www.gaborsamu.com/images/test_datasource.png" />
</figure>

<ol start="10">
<li>With the datasource configured in Grafana, the final step is to create a dashboard. Creating a dashboard requires creating panels which display data pulled from the confiugred data
source using targeted queries. With a bit of effort, I was able to piece together the following dashboard which includes both metrics from LSF, as well as metrics from Telegraf
<em>input.procstat</em> for the LSF processes <em>mbatchd</em>, <em>mbschd</em> and the management <em>lim</em>.</li>
</ol>
<figure><img src="https://www.gaborsamu.com/images/lsf_dashboard3.jpg" />
</figure>

<hr />

<details>
  <strong>Example dashboard definition (JSON). Click to expand!</strong>
  <div class="highlight"><pre><code class="language-json">{
  <span style="color: #f92672;">"annotations"</span>: {
    <span style="color: #f92672;">"list"</span>: [
      {
        <span style="color: #f92672;">"builtIn"</span>: <span style="color: #ae81ff;">1</span>,
        <span style="color: #f92672;">"datasource"</span>: {
          <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"datasource"</span>,
          <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"grafana"</span>
        },
        <span style="color: #f92672;">"enable"</span>: <span style="color: #66d9ef;">true</span>,
        <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">true</span>,
        <span style="color: #f92672;">"iconColor"</span>: <span style="color: #e6db74;">"rgba(0, 211, 255, 1)"</span>,
        <span style="color: #f92672;">"name"</span>: <span style="color: #e6db74;">"Annotations &amp; Alerts"</span>,
        <span style="color: #f92672;">"target"</span>: {
          <span style="color: #f92672;">"limit"</span>: <span style="color: #ae81ff;">100</span>,
          <span style="color: #f92672;">"matchAny"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"tags"</span>: [],
          <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"dashboard"</span>
        },
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"dashboard"</span>
      }
    ]
  },
  <span style="color: #f92672;">"editable"</span>: <span style="color: #66d9ef;">true</span>,
  <span style="color: #f92672;">"fiscalYearStartMonth"</span>: <span style="color: #ae81ff;">0</span>,
  <span style="color: #f92672;">"graphTooltip"</span>: <span style="color: #ae81ff;">0</span>,
  <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">17</span>,
  <span style="color: #f92672;">"links"</span>: [],
  <span style="color: #f92672;">"liveNow"</span>: <span style="color: #66d9ef;">false</span>,
  <span style="color: #f92672;">"panels"</span>: [
    {
      <span style="color: #f92672;">"collapsed"</span>: <span style="color: #66d9ef;">false</span>,
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">1</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">24</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">0</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">0</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">35</span>,
      <span style="color: #f92672;">"panels"</span>: [],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Cluster aggregate current statistics"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"row"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">"A view of the current status of the LSF servers in the cluster. Servers can be in one of four states: Ok, Unavailable, Closed and Unreachable. "</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"palette-classic"</span>
          },
          <span style="color: #f92672;">"custom"</span>: {
            <span style="color: #f92672;">"hideFrom"</span>: {
              <span style="color: #f92672;">"legend"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"tooltip"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"viz"</span>: <span style="color: #66d9ef;">false</span>
            }
          },
          <span style="color: #f92672;">"decimals"</span>: <span style="color: #ae81ff;">2</span>,
          <span style="color: #f92672;">"mappings"</span>: []
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">8</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">9</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">0</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">1</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">32</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"displayLabels"</span>: [
          <span style="color: #e6db74;">"name"</span>,
          <span style="color: #e6db74;">"value"</span>
        ],
        <span style="color: #f92672;">"legend"</span>: {
          <span style="color: #f92672;">"displayMode"</span>: <span style="color: #e6db74;">"table"</span>,
          <span style="color: #f92672;">"placement"</span>: <span style="color: #e6db74;">"right"</span>,
          <span style="color: #f92672;">"showLegend"</span>: <span style="color: #66d9ef;">true</span>,
          <span style="color: #f92672;">"sortBy"</span>: <span style="color: #e6db74;">"Value"</span>,
          <span style="color: #f92672;">"sortDesc"</span>: <span style="color: #66d9ef;">true</span>,
          <span style="color: #f92672;">"values"</span>: [
            <span style="color: #e6db74;">"value"</span>,
            <span style="color: #e6db74;">"percent"</span>
          ]
        },
        <span style="color: #f92672;">"pieType"</span>: <span style="color: #e6db74;">"donut"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"tooltip"</span>: {
          <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"multi"</span>,
          <span style="color: #f92672;">"sort"</span>: <span style="color: #e6db74;">"none"</span>
        }
      },
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Ok"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_servers"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"status"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"ok"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Closed"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_servers"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"B"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"status"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"closed"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Unreachable"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_servers"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"default"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"C"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"status"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"unreachable"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Unavailable"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_servers"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"D"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"status"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"unavailable"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Current aggregate LSF server statistics"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"piechart"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">9</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">1</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">43</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_jobs"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"distinct"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"running"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Currently running"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"light-red"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">12</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">1</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">45</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_jobs"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"default"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"suspended"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Currently suspended"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"palette-classic"</span>
          },
          <span style="color: #f92672;">"custom"</span>: {
            <span style="color: #f92672;">"hideFrom"</span>: {
              <span style="color: #f92672;">"legend"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"tooltip"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"viz"</span>: <span style="color: #66d9ef;">false</span>
            }
          },
          <span style="color: #f92672;">"decimals"</span>: <span style="color: #ae81ff;">2</span>,
          <span style="color: #f92672;">"mappings"</span>: []
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">8</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">9</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">15</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">1</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">33</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"displayLabels"</span>: [
          <span style="color: #e6db74;">"name"</span>,
          <span style="color: #e6db74;">"value"</span>
        ],
        <span style="color: #f92672;">"legend"</span>: {
          <span style="color: #f92672;">"displayMode"</span>: <span style="color: #e6db74;">"table"</span>,
          <span style="color: #f92672;">"placement"</span>: <span style="color: #e6db74;">"right"</span>,
          <span style="color: #f92672;">"showLegend"</span>: <span style="color: #66d9ef;">true</span>,
          <span style="color: #f92672;">"sortBy"</span>: <span style="color: #e6db74;">"Value"</span>,
          <span style="color: #f92672;">"sortDesc"</span>: <span style="color: #66d9ef;">true</span>,
          <span style="color: #f92672;">"values"</span>: [
            <span style="color: #e6db74;">"value"</span>,
            <span style="color: #e6db74;">"percent"</span>
          ]
        },
        <span style="color: #f92672;">"pieType"</span>: <span style="color: #e6db74;">"donut"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"tooltip"</span>: {
          <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"multi"</span>,
          <span style="color: #f92672;">"sort"</span>: <span style="color: #e6db74;">"none"</span>
        }
      },
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Running"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_jobs"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"running"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Pending"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_jobs"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"B"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"pending"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Suspended"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_jobs"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"C"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"suspended"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Current aggregate LSF job statistics"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"piechart"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"yellow"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">9</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">5</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">44</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_jobs"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"default"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"pending"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Currently pending "</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"blue"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">12</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">5</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">46</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_jobs"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"default"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"finished"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Finished (past hour)"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">"Spectrum LSF queue statistics. Here we show jobs in running, pending and suspended jobs. "</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"palette-classic"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              },
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"red"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #ae81ff;">80</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">8</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">9</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">0</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">9</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">41</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"displayMode"</span>: <span style="color: #e6db74;">"lcd"</span>,
        <span style="color: #f92672;">"minVizHeight"</span>: <span style="color: #ae81ff;">10</span>,
        <span style="color: #f92672;">"minVizWidth"</span>: <span style="color: #ae81ff;">0</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"horizontal"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"showUnfilled"</span>: <span style="color: #66d9ef;">true</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Running"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_queues"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"run"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"name"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"=~"</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"/^$Queue$/"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Pending"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_queues"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"B"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"pend"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"name"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"=~"</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"/^$Queue$/"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Suspended"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_queues"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"C"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"susp"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"name"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"=~"</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"/^$Queue$/"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Current queue statistics ($Queue)"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"bargauge"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"min"</span>: <span style="color: #ae81ff;">0</span>,
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"percentage"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          },
          <span style="color: #f92672;">"unit"</span>: <span style="color: #e6db74;">"none"</span>
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">9</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">9</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">53</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">"/^lsf_hosts\\.last$/"</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"showThresholdLabels"</span>: <span style="color: #66d9ef;">false</span>,
        <span style="color: #f92672;">"showThresholdMarkers"</span>: <span style="color: #66d9ef;">true</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_hosts"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"current"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ],
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"peak"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"servers"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Servers"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"gauge"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"min"</span>: <span style="color: #ae81ff;">0</span>,
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"percentage"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"yellow"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          },
          <span style="color: #f92672;">"unit"</span>: <span style="color: #e6db74;">"none"</span>
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">12</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">9</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">54</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">"/^lsf_hosts\\.last$/"</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"showThresholdLabels"</span>: <span style="color: #66d9ef;">false</span>,
        <span style="color: #f92672;">"showThresholdMarkers"</span>: <span style="color: #66d9ef;">true</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_hosts"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"current"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ],
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"peak"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"cpus"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"CPUs"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"gauge"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"palette-classic"</span>
          },
          <span style="color: #f92672;">"custom"</span>: {
            <span style="color: #f92672;">"axisCenteredZero"</span>: <span style="color: #66d9ef;">false</span>,
            <span style="color: #f92672;">"axisColorMode"</span>: <span style="color: #e6db74;">"text"</span>,
            <span style="color: #f92672;">"axisLabel"</span>: <span style="color: #e6db74;">""</span>,
            <span style="color: #f92672;">"axisPlacement"</span>: <span style="color: #e6db74;">"auto"</span>,
            <span style="color: #f92672;">"barAlignment"</span>: <span style="color: #ae81ff;">0</span>,
            <span style="color: #f92672;">"drawStyle"</span>: <span style="color: #e6db74;">"line"</span>,
            <span style="color: #f92672;">"fillOpacity"</span>: <span style="color: #ae81ff;">0</span>,
            <span style="color: #f92672;">"gradientMode"</span>: <span style="color: #e6db74;">"none"</span>,
            <span style="color: #f92672;">"hideFrom"</span>: {
              <span style="color: #f92672;">"legend"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"tooltip"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"viz"</span>: <span style="color: #66d9ef;">false</span>
            },
            <span style="color: #f92672;">"lineInterpolation"</span>: <span style="color: #e6db74;">"stepBefore"</span>,
            <span style="color: #f92672;">"lineWidth"</span>: <span style="color: #ae81ff;">1</span>,
            <span style="color: #f92672;">"pointSize"</span>: <span style="color: #ae81ff;">5</span>,
            <span style="color: #f92672;">"scaleDistribution"</span>: {
              <span style="color: #f92672;">"log"</span>: <span style="color: #ae81ff;">2</span>,
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"log"</span>
            },
            <span style="color: #f92672;">"showPoints"</span>: <span style="color: #e6db74;">"auto"</span>,
            <span style="color: #f92672;">"spanNulls"</span>: <span style="color: #66d9ef;">true</span>,
            <span style="color: #f92672;">"stacking"</span>: {
              <span style="color: #f92672;">"group"</span>: <span style="color: #e6db74;">"A"</span>,
              <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"none"</span>
            },
            <span style="color: #f92672;">"thresholdsStyle"</span>: {
              <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"off"</span>
            }
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              },
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"red"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #ae81ff;">80</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">8</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">9</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">15</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">9</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">42</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"legend"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [],
          <span style="color: #f92672;">"displayMode"</span>: <span style="color: #e6db74;">"list"</span>,
          <span style="color: #f92672;">"placement"</span>: <span style="color: #e6db74;">"bottom"</span>,
          <span style="color: #f92672;">"showLegend"</span>: <span style="color: #66d9ef;">true</span>
        },
        <span style="color: #f92672;">"tooltip"</span>: {
          <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"single"</span>,
          <span style="color: #f92672;">"sort"</span>: <span style="color: #e6db74;">"none"</span>
        }
      },
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Running"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_jobs"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"running"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Pending"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_jobs"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"B"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"pending"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Suspended"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_jobs"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"C"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"suspended"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Aggregate LSF job statistics"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"timeseries"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"min"</span>: <span style="color: #ae81ff;">0</span>,
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"percentage"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"light-red"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          },
          <span style="color: #f92672;">"unit"</span>: <span style="color: #e6db74;">"none"</span>
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">9</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">13</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">55</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">"/^lsf_hosts\\.last$/"</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"showThresholdLabels"</span>: <span style="color: #66d9ef;">false</span>,
        <span style="color: #f92672;">"showThresholdMarkers"</span>: <span style="color: #66d9ef;">true</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_hosts"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"current"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ],
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"peak"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"cores"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Cores"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"gauge"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"min"</span>: <span style="color: #ae81ff;">0</span>,
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"percentage"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"blue"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          },
          <span style="color: #f92672;">"unit"</span>: <span style="color: #e6db74;">"none"</span>
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">12</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">13</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">56</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">"/^lsf_hosts\\.last$/"</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"showThresholdLabels"</span>: <span style="color: #66d9ef;">false</span>,
        <span style="color: #f92672;">"showThresholdMarkers"</span>: <span style="color: #66d9ef;">true</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_hosts"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"current"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ],
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"peak"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"slots"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Slots"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"gauge"</span>
    },
    {
      <span style="color: #f92672;">"collapsed"</span>: <span style="color: #66d9ef;">false</span>,
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">1</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">24</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">0</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">17</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">37</span>,
      <span style="color: #f92672;">"panels"</span>: [],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"LSF scheduler statistics"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"row"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"palette-classic"</span>
          },
          <span style="color: #f92672;">"custom"</span>: {
            <span style="color: #f92672;">"axisCenteredZero"</span>: <span style="color: #66d9ef;">false</span>,
            <span style="color: #f92672;">"axisColorMode"</span>: <span style="color: #e6db74;">"text"</span>,
            <span style="color: #f92672;">"axisLabel"</span>: <span style="color: #e6db74;">""</span>,
            <span style="color: #f92672;">"axisPlacement"</span>: <span style="color: #e6db74;">"auto"</span>,
            <span style="color: #f92672;">"barAlignment"</span>: <span style="color: #ae81ff;">0</span>,
            <span style="color: #f92672;">"drawStyle"</span>: <span style="color: #e6db74;">"line"</span>,
            <span style="color: #f92672;">"fillOpacity"</span>: <span style="color: #ae81ff;">10</span>,
            <span style="color: #f92672;">"gradientMode"</span>: <span style="color: #e6db74;">"none"</span>,
            <span style="color: #f92672;">"hideFrom"</span>: {
              <span style="color: #f92672;">"graph"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"legend"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"tooltip"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"viz"</span>: <span style="color: #66d9ef;">false</span>
            },
            <span style="color: #f92672;">"lineInterpolation"</span>: <span style="color: #e6db74;">"linear"</span>,
            <span style="color: #f92672;">"lineWidth"</span>: <span style="color: #ae81ff;">1</span>,
            <span style="color: #f92672;">"pointSize"</span>: <span style="color: #ae81ff;">5</span>,
            <span style="color: #f92672;">"scaleDistribution"</span>: {
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"linear"</span>
            },
            <span style="color: #f92672;">"showPoints"</span>: <span style="color: #e6db74;">"never"</span>,
            <span style="color: #f92672;">"spanNulls"</span>: <span style="color: #66d9ef;">true</span>,
            <span style="color: #f92672;">"stacking"</span>: {
              <span style="color: #f92672;">"group"</span>: <span style="color: #e6db74;">"A"</span>,
              <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"none"</span>
            },
            <span style="color: #f92672;">"thresholdsStyle"</span>: {
              <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"off"</span>
            }
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              },
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"red"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #ae81ff;">80</span>
              }
            ]
          },
          <span style="color: #f92672;">"unit"</span>: <span style="color: #e6db74;">"short"</span>
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">8</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">12</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">0</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">18</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">20</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"graph"</span>: {},
        <span style="color: #f92672;">"legend"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [],
          <span style="color: #f92672;">"displayMode"</span>: <span style="color: #e6db74;">"list"</span>,
          <span style="color: #f92672;">"placement"</span>: <span style="color: #e6db74;">"right"</span>,
          <span style="color: #f92672;">"showLegend"</span>: <span style="color: #66d9ef;">true</span>
        },
        <span style="color: #f92672;">"tooltip"</span>: {
          <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"single"</span>,
          <span style="color: #f92672;">"sort"</span>: <span style="color: #e6db74;">"none"</span>
        }
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"7.5.15"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"CPU utilization (%)"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"procstat"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"cpu_usage"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"exe"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"mbatchd"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Memory utilization (%)"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"procstat"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"B"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"memory_usage"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"exe"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"mbatchd"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Number of threads"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"procstat"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"C"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"num_threads"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"exe"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"mbatchd"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"File descriptors"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_mbatchd"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"D"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"fd"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"used"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"LSF mbatchd process metrics"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"timeseries"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"palette-classic"</span>
          },
          <span style="color: #f92672;">"custom"</span>: {
            <span style="color: #f92672;">"axisCenteredZero"</span>: <span style="color: #66d9ef;">false</span>,
            <span style="color: #f92672;">"axisColorMode"</span>: <span style="color: #e6db74;">"text"</span>,
            <span style="color: #f92672;">"axisLabel"</span>: <span style="color: #e6db74;">""</span>,
            <span style="color: #f92672;">"axisPlacement"</span>: <span style="color: #e6db74;">"auto"</span>,
            <span style="color: #f92672;">"barAlignment"</span>: <span style="color: #ae81ff;">0</span>,
            <span style="color: #f92672;">"drawStyle"</span>: <span style="color: #e6db74;">"line"</span>,
            <span style="color: #f92672;">"fillOpacity"</span>: <span style="color: #ae81ff;">10</span>,
            <span style="color: #f92672;">"gradientMode"</span>: <span style="color: #e6db74;">"none"</span>,
            <span style="color: #f92672;">"hideFrom"</span>: {
              <span style="color: #f92672;">"graph"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"legend"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"tooltip"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"viz"</span>: <span style="color: #66d9ef;">false</span>
            },
            <span style="color: #f92672;">"lineInterpolation"</span>: <span style="color: #e6db74;">"linear"</span>,
            <span style="color: #f92672;">"lineWidth"</span>: <span style="color: #ae81ff;">1</span>,
            <span style="color: #f92672;">"pointSize"</span>: <span style="color: #ae81ff;">5</span>,
            <span style="color: #f92672;">"scaleDistribution"</span>: {
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"linear"</span>
            },
            <span style="color: #f92672;">"showPoints"</span>: <span style="color: #e6db74;">"never"</span>,
            <span style="color: #f92672;">"spanNulls"</span>: <span style="color: #66d9ef;">true</span>,
            <span style="color: #f92672;">"stacking"</span>: {
              <span style="color: #f92672;">"group"</span>: <span style="color: #e6db74;">"A"</span>,
              <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"none"</span>
            },
            <span style="color: #f92672;">"thresholdsStyle"</span>: {
              <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"off"</span>
            }
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              },
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"red"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #ae81ff;">80</span>
              }
            ]
          },
          <span style="color: #f92672;">"unit"</span>: <span style="color: #e6db74;">"short"</span>
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">8</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">12</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">12</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">18</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">57</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"graph"</span>: {},
        <span style="color: #f92672;">"legend"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [],
          <span style="color: #f92672;">"displayMode"</span>: <span style="color: #e6db74;">"list"</span>,
          <span style="color: #f92672;">"placement"</span>: <span style="color: #e6db74;">"right"</span>,
          <span style="color: #f92672;">"showLegend"</span>: <span style="color: #66d9ef;">true</span>
        },
        <span style="color: #f92672;">"tooltip"</span>: {
          <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"single"</span>,
          <span style="color: #f92672;">"sort"</span>: <span style="color: #e6db74;">"none"</span>
        }
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"7.5.15"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"CPU utilization (%)"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"procstat"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"cpu_usage"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"exe"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"lim"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Memory utilization (%)"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"procstat"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"B"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"memory_usage"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"exe"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"lim"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Number of threads"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"procstat"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"C"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"num_threads"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"exe"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"lim"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"LSF management lim process metrics"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"timeseries"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"palette-classic"</span>
          },
          <span style="color: #f92672;">"custom"</span>: {
            <span style="color: #f92672;">"axisCenteredZero"</span>: <span style="color: #66d9ef;">false</span>,
            <span style="color: #f92672;">"axisColorMode"</span>: <span style="color: #e6db74;">"text"</span>,
            <span style="color: #f92672;">"axisLabel"</span>: <span style="color: #e6db74;">""</span>,
            <span style="color: #f92672;">"axisPlacement"</span>: <span style="color: #e6db74;">"auto"</span>,
            <span style="color: #f92672;">"barAlignment"</span>: <span style="color: #ae81ff;">0</span>,
            <span style="color: #f92672;">"drawStyle"</span>: <span style="color: #e6db74;">"line"</span>,
            <span style="color: #f92672;">"fillOpacity"</span>: <span style="color: #ae81ff;">10</span>,
            <span style="color: #f92672;">"gradientMode"</span>: <span style="color: #e6db74;">"none"</span>,
            <span style="color: #f92672;">"hideFrom"</span>: {
              <span style="color: #f92672;">"graph"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"legend"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"tooltip"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"viz"</span>: <span style="color: #66d9ef;">false</span>
            },
            <span style="color: #f92672;">"lineInterpolation"</span>: <span style="color: #e6db74;">"linear"</span>,
            <span style="color: #f92672;">"lineWidth"</span>: <span style="color: #ae81ff;">1</span>,
            <span style="color: #f92672;">"pointSize"</span>: <span style="color: #ae81ff;">5</span>,
            <span style="color: #f92672;">"scaleDistribution"</span>: {
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"linear"</span>
            },
            <span style="color: #f92672;">"showPoints"</span>: <span style="color: #e6db74;">"never"</span>,
            <span style="color: #f92672;">"spanNulls"</span>: <span style="color: #66d9ef;">true</span>,
            <span style="color: #f92672;">"stacking"</span>: {
              <span style="color: #f92672;">"group"</span>: <span style="color: #e6db74;">"A"</span>,
              <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"none"</span>
            },
            <span style="color: #f92672;">"thresholdsStyle"</span>: {
              <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"off"</span>
            }
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              },
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"red"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #ae81ff;">80</span>
              }
            ]
          },
          <span style="color: #f92672;">"unit"</span>: <span style="color: #e6db74;">"short"</span>
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">8</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">12</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">0</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">26</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">27</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"graph"</span>: {},
        <span style="color: #f92672;">"legend"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [],
          <span style="color: #f92672;">"displayMode"</span>: <span style="color: #e6db74;">"list"</span>,
          <span style="color: #f92672;">"placement"</span>: <span style="color: #e6db74;">"right"</span>,
          <span style="color: #f92672;">"showLegend"</span>: <span style="color: #66d9ef;">true</span>
        },
        <span style="color: #f92672;">"tooltip"</span>: {
          <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"single"</span>,
          <span style="color: #f92672;">"sort"</span>: <span style="color: #e6db74;">"none"</span>
        }
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"7.5.15"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Job buckets"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_mbatchd"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"sched"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"buckets"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Matching host criteria"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_mbatchd"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"B"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"sched"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"matchhost"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Scheduling interval (seconds)"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_mbatchd"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"C"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"sched"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"interval"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"LSF scheduler metrics"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"timeseries"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"palette-classic"</span>
          },
          <span style="color: #f92672;">"custom"</span>: {
            <span style="color: #f92672;">"axisCenteredZero"</span>: <span style="color: #66d9ef;">false</span>,
            <span style="color: #f92672;">"axisColorMode"</span>: <span style="color: #e6db74;">"text"</span>,
            <span style="color: #f92672;">"axisLabel"</span>: <span style="color: #e6db74;">""</span>,
            <span style="color: #f92672;">"axisPlacement"</span>: <span style="color: #e6db74;">"auto"</span>,
            <span style="color: #f92672;">"barAlignment"</span>: <span style="color: #ae81ff;">0</span>,
            <span style="color: #f92672;">"drawStyle"</span>: <span style="color: #e6db74;">"line"</span>,
            <span style="color: #f92672;">"fillOpacity"</span>: <span style="color: #ae81ff;">10</span>,
            <span style="color: #f92672;">"gradientMode"</span>: <span style="color: #e6db74;">"none"</span>,
            <span style="color: #f92672;">"hideFrom"</span>: {
              <span style="color: #f92672;">"graph"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"legend"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"tooltip"</span>: <span style="color: #66d9ef;">false</span>,
              <span style="color: #f92672;">"viz"</span>: <span style="color: #66d9ef;">false</span>
            },
            <span style="color: #f92672;">"lineInterpolation"</span>: <span style="color: #e6db74;">"linear"</span>,
            <span style="color: #f92672;">"lineWidth"</span>: <span style="color: #ae81ff;">1</span>,
            <span style="color: #f92672;">"pointSize"</span>: <span style="color: #ae81ff;">5</span>,
            <span style="color: #f92672;">"scaleDistribution"</span>: {
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"linear"</span>
            },
            <span style="color: #f92672;">"showPoints"</span>: <span style="color: #e6db74;">"never"</span>,
            <span style="color: #f92672;">"spanNulls"</span>: <span style="color: #66d9ef;">true</span>,
            <span style="color: #f92672;">"stacking"</span>: {
              <span style="color: #f92672;">"group"</span>: <span style="color: #e6db74;">"A"</span>,
              <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"none"</span>
            },
            <span style="color: #f92672;">"thresholdsStyle"</span>: {
              <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"off"</span>
            }
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              },
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"red"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #ae81ff;">80</span>
              }
            ]
          },
          <span style="color: #f92672;">"unit"</span>: <span style="color: #e6db74;">"short"</span>
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">8</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">12</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">12</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">26</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">58</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"graph"</span>: {},
        <span style="color: #f92672;">"legend"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [],
          <span style="color: #f92672;">"displayMode"</span>: <span style="color: #e6db74;">"list"</span>,
          <span style="color: #f92672;">"placement"</span>: <span style="color: #e6db74;">"right"</span>,
          <span style="color: #f92672;">"showLegend"</span>: <span style="color: #66d9ef;">true</span>
        },
        <span style="color: #f92672;">"tooltip"</span>: {
          <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"single"</span>,
          <span style="color: #f92672;">"sort"</span>: <span style="color: #e6db74;">"none"</span>
        }
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"7.5.15"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"CPU utilization (%)"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"procstat"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"cpu_usage"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"exe"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"mbschd"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Memory utilization (%)"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"procstat"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"B"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"memory_usage"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"exe"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"mbatchd"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            }
          ]
        },
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Number of threads"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"procstat"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"C"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"num_threads"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"exe"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"mbatchd"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"LSF mbschd process metrics"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"timeseries"</span>
    },
    {
      <span style="color: #f92672;">"collapsed"</span>: <span style="color: #66d9ef;">false</span>,
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">1</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">24</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">0</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">34</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">39</span>,
      <span style="color: #f92672;">"panels"</span>: [],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Additional metrics (scratch)"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"row"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">0</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">35</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">2</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_jobs"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"distinct"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"running"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Running"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"yellow"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">35</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">5</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_jobs"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"default"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"pending"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Pending"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"red"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">6</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">35</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">6</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_jobs"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"default"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"suspended"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Suspended"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"blue"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">9</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">35</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">7</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_jobs"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"default"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"finished"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Finished"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">12</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">35</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">15</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Ok"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_servers"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"status"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"ok"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Ok"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"blue"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">15</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">35</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">16</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Closed"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_servers"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"status"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"closed"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Closed"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"yellow"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">18</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">35</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">17</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Unreachable"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_servers"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"status"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"unreachable"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Unreachable"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"red"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">21</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">35</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">18</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Unavailable"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_servers"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"value"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"mean"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"status"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"unavailable"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Unavailable"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">0</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">39</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">21</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Clients"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_hosts"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"current"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"clients"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Clients"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">39</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">22</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Servers"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_hosts"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"current"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"servers"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Servers"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">6</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">39</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">23</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Servers"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_hosts"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"current"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"cpus"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"CPUs"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">9</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">39</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">24</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Cores"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_hosts"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"current"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"cores"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Cores"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"absolute"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          }
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">12</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">39</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">25</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"colorMode"</span>: <span style="color: #e6db74;">"value"</span>,
        <span style="color: #f92672;">"graphMode"</span>: <span style="color: #e6db74;">"none"</span>,
        <span style="color: #f92672;">"justifyMode"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">""</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"text"</span>: {},
        <span style="color: #f92672;">"textMode"</span>: <span style="color: #e6db74;">"auto"</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"alias"</span>: <span style="color: #e6db74;">"Slots"</span>,
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_hosts"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"current"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"slots"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Slots"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"stat"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"min"</span>: <span style="color: #ae81ff;">0</span>,
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"percentage"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"green"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          },
          <span style="color: #f92672;">"unit"</span>: <span style="color: #e6db74;">"none"</span>
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">43</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">52</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">"/^lsf_hosts\\.last$/"</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"showThresholdLabels"</span>: <span style="color: #66d9ef;">false</span>,
        <span style="color: #f92672;">"showThresholdMarkers"</span>: <span style="color: #66d9ef;">true</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_hosts"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"current"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ],
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"peak"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"servers"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Servers"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"gauge"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"min"</span>: <span style="color: #ae81ff;">0</span>,
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"percentage"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"yellow"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          },
          <span style="color: #f92672;">"unit"</span>: <span style="color: #e6db74;">"none"</span>
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">6</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">43</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">51</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">"/^lsf_hosts\\.last$/"</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"showThresholdLabels"</span>: <span style="color: #66d9ef;">false</span>,
        <span style="color: #f92672;">"showThresholdMarkers"</span>: <span style="color: #66d9ef;">true</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_hosts"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"current"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ],
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"peak"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"cpus"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"CPUs"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"gauge"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"min"</span>: <span style="color: #ae81ff;">0</span>,
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"percentage"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"light-red"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          },
          <span style="color: #f92672;">"unit"</span>: <span style="color: #e6db74;">"none"</span>
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">9</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">43</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">50</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">"/^lsf_hosts\\.last$/"</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"showThresholdLabels"</span>: <span style="color: #66d9ef;">false</span>,
        <span style="color: #f92672;">"showThresholdMarkers"</span>: <span style="color: #66d9ef;">true</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_hosts"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"current"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ],
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"peak"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"cores"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Cores"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"gauge"</span>
    },
    {
      <span style="color: #f92672;">"datasource"</span>: {
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
        <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
      },
      <span style="color: #f92672;">"description"</span>: <span style="color: #e6db74;">""</span>,
      <span style="color: #f92672;">"fieldConfig"</span>: {
        <span style="color: #f92672;">"defaults"</span>: {
          <span style="color: #f92672;">"color"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"thresholds"</span>
          },
          <span style="color: #f92672;">"mappings"</span>: [],
          <span style="color: #f92672;">"min"</span>: <span style="color: #ae81ff;">0</span>,
          <span style="color: #f92672;">"thresholds"</span>: {
            <span style="color: #f92672;">"mode"</span>: <span style="color: #e6db74;">"percentage"</span>,
            <span style="color: #f92672;">"steps"</span>: [
              {
                <span style="color: #f92672;">"color"</span>: <span style="color: #e6db74;">"blue"</span>,
                <span style="color: #f92672;">"value"</span>: <span style="color: #66d9ef;">null</span>
              }
            ]
          },
          <span style="color: #f92672;">"unit"</span>: <span style="color: #e6db74;">"none"</span>
        },
        <span style="color: #f92672;">"overrides"</span>: []
      },
      <span style="color: #f92672;">"gridPos"</span>: {
        <span style="color: #f92672;">"h"</span>: <span style="color: #ae81ff;">4</span>,
        <span style="color: #f92672;">"w"</span>: <span style="color: #ae81ff;">3</span>,
        <span style="color: #f92672;">"x"</span>: <span style="color: #ae81ff;">12</span>,
        <span style="color: #f92672;">"y"</span>: <span style="color: #ae81ff;">43</span>
      },
      <span style="color: #f92672;">"id"</span>: <span style="color: #ae81ff;">49</span>,
      <span style="color: #f92672;">"options"</span>: {
        <span style="color: #f92672;">"orientation"</span>: <span style="color: #e6db74;">"auto"</span>,
        <span style="color: #f92672;">"reduceOptions"</span>: {
          <span style="color: #f92672;">"calcs"</span>: [
            <span style="color: #e6db74;">"lastNotNull"</span>
          ],
          <span style="color: #f92672;">"fields"</span>: <span style="color: #e6db74;">"/^lsf_hosts\\.last$/"</span>,
          <span style="color: #f92672;">"values"</span>: <span style="color: #66d9ef;">false</span>
        },
        <span style="color: #f92672;">"showThresholdLabels"</span>: <span style="color: #66d9ef;">false</span>,
        <span style="color: #f92672;">"showThresholdMarkers"</span>: <span style="color: #66d9ef;">true</span>
      },
      <span style="color: #f92672;">"pluginVersion"</span>: <span style="color: #e6db74;">"9.1.6"</span>,
      <span style="color: #f92672;">"targets"</span>: [
        {
          <span style="color: #f92672;">"datasource"</span>: {
            <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
            <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"eNfWCy5Vk"</span>
          },
          <span style="color: #f92672;">"groupBy"</span>: [
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"$__interval"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"time"</span>
            },
            {
              <span style="color: #f92672;">"params"</span>: [
                <span style="color: #e6db74;">"null"</span>
              ],
              <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"fill"</span>
            }
          ],
          <span style="color: #f92672;">"hide"</span>: <span style="color: #66d9ef;">false</span>,
          <span style="color: #f92672;">"measurement"</span>: <span style="color: #e6db74;">"lsf_hosts"</span>,
          <span style="color: #f92672;">"orderByTime"</span>: <span style="color: #e6db74;">"ASC"</span>,
          <span style="color: #f92672;">"policy"</span>: <span style="color: #e6db74;">"autogen"</span>,
          <span style="color: #f92672;">"refId"</span>: <span style="color: #e6db74;">"A"</span>,
          <span style="color: #f92672;">"resultFormat"</span>: <span style="color: #e6db74;">"time_series"</span>,
          <span style="color: #f92672;">"select"</span>: [
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"current"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              },
              {
                <span style="color: #f92672;">"params"</span>: [],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"last"</span>
              }
            ],
            [
              {
                <span style="color: #f92672;">"params"</span>: [
                  <span style="color: #e6db74;">"peak"</span>
                ],
                <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"field"</span>
              }
            ]
          ],
          <span style="color: #f92672;">"tags"</span>: [
            {
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"host"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"kilenc"</span>
            },
            {
              <span style="color: #f92672;">"condition"</span>: <span style="color: #e6db74;">"AND"</span>,
              <span style="color: #f92672;">"key"</span>: <span style="color: #e6db74;">"state"</span>,
              <span style="color: #f92672;">"operator"</span>: <span style="color: #e6db74;">"="</span>,
              <span style="color: #f92672;">"value"</span>: <span style="color: #e6db74;">"slots"</span>
            }
          ]
        }
      ],
      <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"Slots"</span>,
      <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"gauge"</span>
    }
  ],
  <span style="color: #f92672;">"refresh"</span>: <span style="color: #e6db74;">"30s"</span>,
  <span style="color: #f92672;">"schemaVersion"</span>: <span style="color: #ae81ff;">37</span>,
  <span style="color: #f92672;">"style"</span>: <span style="color: #e6db74;">"dark"</span>,
  <span style="color: #f92672;">"tags"</span>: [],
  <span style="color: #f92672;">"templating"</span>: {
    <span style="color: #f92672;">"list"</span>: [
      {
        <span style="color: #f92672;">"current"</span>: {
          <span style="color: #f92672;">"selected"</span>: <span style="color: #66d9ef;">true</span>,
          <span style="color: #f92672;">"text"</span>: [
            <span style="color: #e6db74;">"priority"</span>
          ],
          <span style="color: #f92672;">"value"</span>: [
            <span style="color: #e6db74;">"priority"</span>
          ]
        },
        <span style="color: #f92672;">"datasource"</span>: {
          <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"influxdb"</span>,
          <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"oSnSlVc4k"</span>
        },
        <span style="color: #f92672;">"definition"</span>: <span style="color: #e6db74;">"show tag values from \"lsf_queues\" with key=\"name\""</span>,
        <span style="color: #f92672;">"hide"</span>: <span style="color: #ae81ff;">0</span>,
        <span style="color: #f92672;">"includeAll"</span>: <span style="color: #66d9ef;">false</span>,
        <span style="color: #f92672;">"multi"</span>: <span style="color: #66d9ef;">false</span>,
        <span style="color: #f92672;">"name"</span>: <span style="color: #e6db74;">"Queue"</span>,
        <span style="color: #f92672;">"options"</span>: [],
        <span style="color: #f92672;">"query"</span>: <span style="color: #e6db74;">"show tag values from \"lsf_queues\" with key=\"name\""</span>,
        <span style="color: #f92672;">"refresh"</span>: <span style="color: #ae81ff;">1</span>,
        <span style="color: #f92672;">"regex"</span>: <span style="color: #e6db74;">""</span>,
        <span style="color: #f92672;">"skipUrlSync"</span>: <span style="color: #66d9ef;">false</span>,
        <span style="color: #f92672;">"sort"</span>: <span style="color: #ae81ff;">0</span>,
        <span style="color: #f92672;">"tagValuesQuery"</span>: <span style="color: #e6db74;">""</span>,
        <span style="color: #f92672;">"tagsQuery"</span>: <span style="color: #e6db74;">""</span>,
        <span style="color: #f92672;">"type"</span>: <span style="color: #e6db74;">"query"</span>,
        <span style="color: #f92672;">"useTags"</span>: <span style="color: #66d9ef;">false</span>
      }
    ]
  },
  <span style="color: #f92672;">"time"</span>: {
    <span style="color: #f92672;">"from"</span>: <span style="color: #e6db74;">"now-1h"</span>,
    <span style="color: #f92672;">"to"</span>: <span style="color: #e6db74;">"now"</span>
  },
  <span style="color: #f92672;">"timepicker"</span>: {},
  <span style="color: #f92672;">"timezone"</span>: <span style="color: #e6db74;">""</span>,
  <span style="color: #f92672;">"title"</span>: <span style="color: #e6db74;">"LSF cluster status"</span>,
  <span style="color: #f92672;">"uid"</span>: <span style="color: #e6db74;">"ORojp8cVz"</span>,
  <span style="color: #f92672;">"version"</span>: <span style="color: #ae81ff;">160</span>,
  <span style="color: #f92672;">"weekStart"</span>: <span style="color: #e6db74;">""</span>
}
</code></pre></div>

</details>

<hr />

<p>As you can see, with a short plugin script to collect information from LSF, it&rsquo;s possible to monitor your LSF cluster using the TIG stack. It&rsquo;s important to note that there are powerful
monitoring and reporting tools available from IBM as add-ons to LSF; IBM Spectrum LSF RTM and IBM Spectrum LSF Explorer. You can find more details about the add-on capabilities for LSF
<a href="https://www.ibm.com/products/hpc-workload-management/resources">here</a>.</p>]]></content><author><name>Ramblings of a supercomputing enthusiast.</name></author><category term="gaborsamu" /><summary type="html"><![CDATA[Much like dashboards in automobiles, dashboards in the context of HPC infrastructure are crucial to get an understanding of what&rsquo;s happening under the hood of your HPC cluster - at a glance. During my IT career, I&rsquo;ve used a myriad of monitoring solutions ranging from SNMP and Ganglia, to the ELK (Elasticsearch, Logstash, Kibana) stack. For example, I&rsquo;ve recently written an overview on how it is possible to visualize IBM Spectrum LSF (LSF) data in Grafana. LSF is an HPC job scheduler which brings to the table three decades of experience in workload and resource management.]]></summary></entry><entry><title type="html">Adam’s weekly (-ish) update, 2022-12-20</title><link href="https://hpc.social/personal-blog/2022/adam-s-weekly-ish-update-2022-12-20/" rel="alternate" type="text/html" title="Adam’s weekly (-ish) update, 2022-12-20" /><published>2022-12-20T18:14:52-07:00</published><updated>2022-12-20T18:14:52-07:00</updated><id>https://hpc.social/personal-blog/2022/adam-s-weekly-ish-update-2022-12-20</id><content type="html" xml:base="https://hpc.social/personal-blog/2022/adam-s-weekly-ish-update-2022-12-20/"><![CDATA[<h2>What&#8217;s new</h2>

<p>The past few weeks have been on the intense side at work, so I completely lost track of the blog and haven&#8217;t had a chance to write much in that time. However, I&#8217;m now on a holiday break, and finally have time to sit down at a keyboard to write more than code and Slack messages.</p>

<p><span id="more-289"></span></p>

<p>One of the highlights of the past few weeks was a trip to San Jose, and the NVIDIA headquarters. I changed teams at work back in July, transferring from a group that was closely integrated with product management, to a more straightforward engineering team which <a href="https://blogs.nvidia.com/blog/2020/08/14/making-selene-pandemic-ai/">designs and builds new high-performance computing systems</a>. </p>

<p>This was the first chance I&#8217;ve had to meet up with other members of my new team in person, and it was a really wonderful experience to be in the same physical space as folks who were previously just images on my screen. I love working remotely, but it&#8217;s also great to be able to stand in front of a white board with someone and brainstorm, or get coffee and just have a chat with a coworker outside of a video call with an agenda.</p>

<p>(Plus, we were all careful and managed to avoid catching COVID from each other! Which was a win on its own.)</p>

<p>Now, for the next two weeks I&#8217;m off work, and planning to take some time to relax and spend time on projects that are harder to focus on during busy work weeks. Expect (maybe) less about computers in my blog and social feeds, and more about D&amp;D, baking, and tasty cocktails.</p>

<h2>What I&#8217;m reading, watching, and listening to</h2>

<p>I&#8217;ve been a bit too scattered to focus on actual books the past few weeks, but I did find time for a few interesting articles and podcasts. In particular,</p>

<ul>
<li><a href="https://acoup.blog/2022/12/02/collections-why-roman-egypt-was-such-a-strange-province/">&#8220;Why Roman Egypt was such a strange province&#8221;</a>, from Bret Devereaux: As usual from Devereaux, an accessible but extremely detailed discussion of why so much of what we know about the Roman empire is from Egyptian records, but why that also might not be representative of the broader empire.</li>



<li><a href="https://willgallego.com/2022/12/18/emoji-as-incident-resolution-tools/">&#8220;Emoji as incident resolution tools&#8221;</a>, from Will Gallego: A fun discussion of how using emoji as part of a team&#8217;s communication can add nuance and shared understanding during incident management, along with a discussion of the disadvantages and costs associated with the practice.</li>



<li><a href="https://www.mikulskibartosz.name/modern-software-architecture-in-2022/">&#8220;What does modern software architecture look like in 2022?&#8221;</a>, from Bartosz Mikulski: A nice  article which discusses how service-oriented software architecture can often include an explicit expectation of change. For example, the architecture might include notes on an ongoing deprecation of a library, or might signpost the need to factor a new microservice out when overall system load gets high enough.</li>



<li><a href="https://www.bradyheywood.com.au/podcasts/">The Brady Heywood podcast</a>: Found via the <a href="https://oxide.computer/podcasts/oxide-and-friends/1137359">Oxide and Friends podcast</a>, the Brady Heywood podcast is a series on engineering disasters and their consequences from a forensic engineering firm. It&#8217;s mostly not being updated any more (with the podcasters moving on to a separate series on complexity science), but it has a deep back catalog of good episodes, and includes thoughtful discussions of human factors, safety engineering, and how organizational pressures become manifest in engineering artifacts.</li>
</ul>

<h2>Recent recipes</h2>

<ul>
<li><a href="https://smittenkitchen.com/2016/12/homemade-irish-cream/">Smitten Kitchen&#8217;s Homemade Irish Cream</a>: This is a recipe I make every year, and I often give away small bottles of it as holiday gifts. It&#8217;s really ridiculously tasty, much better than Baileys  or similar, and good either on its own or in hot chocolate.</li>



<li><a href="https://smittenkitchen.com/2014/12/fairytale-of-new-york/">Smitten Kitchen&#8217;s Fairytale of New York</a>: This is a really tasty whiskey cocktail, and the star of the show is a &#8220;winter warmth syrup&#8221; that substitutes in for simple syrup. The syrup is simply very tasty, and turns what&#8217;s effectively an OId Fashioned variant into a lovely holiday cocktail.</li>



<li>Sparkling gingerbread from <a href="http://www.apt2bbakingco.com/snacking-cakes">Yossy Arefi&#8217;s Snaking Cakes</a>: This recipe takes a little more prep than most of Arefi&#8217;s &#8220;snacking cakes&#8221;, as it includes ginger three ways (ground, fresh, and crystallized), but it&#8217;s worth the few minutes of extra work.</li>
</ul>

<h2>Pet photos</h2>

<figure class="wp-block-image size-large is-resized"><img alt="A white calico cat and a gray tabby cat lounging on a large brown pet bed in front of a gas fireplace." class="wp-image-295" height="512" src="https://thinking.ajdecon.org/wp-content/uploads/2022/12/IMG_7207-768x1024.jpeg" width="384" /><figcaption class="wp-element-caption">I&#8217;m pretty sure these two want me to turn the fireplace on.</figcaption></figure>

<figure class="wp-block-image size-large is-resized"><img alt="A gray tabby cat lounges on a dog bed, while a golden doodle lays on the floor nearby and looks forlornly at the bed." class="wp-image-294" height="512" src="https://thinking.ajdecon.org/wp-content/uploads/2022/12/IMG_1725-1024x1024.jpeg" width="512" /><figcaption class="wp-element-caption">Just Percy bullying the dog by stealing his bed.</figcaption></figure>]]></content><author><name>Thinking Out Loud</name></author><category term="ajdecon" /><summary type="html"><![CDATA[What&#8217;s new]]></summary></entry></feed>